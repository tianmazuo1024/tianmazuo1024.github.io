import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as t,d as r}from"./app-CiwSPZKD.js";const c={},d=r('<p>有了<a href="https://redis.io/" target="_blank" rel="noopener noreferrer">Redis</a>之后，很快又出现了新的应用需求。</p><p>相对于<code>MySQL</code>这种存储<a href="https://baike.baidu.com/item/%E7%BB%93%E6%9E%84%E5%8C%96%E6%95%B0%E6%8D%AE" target="_blank" rel="noopener noreferrer">结构化数据</a>的数据库来说，它所有的数据表都是事先定义好的，数据表中的每一个字段也都有一个预期值存在。即使没有，也会有默认值来填充。</p><p>但既然有了<a href="https://baike.baidu.com/item/%E7%BB%93%E6%9E%84%E5%8C%96%E6%95%B0%E6%8D%AE" target="_blank" rel="noopener noreferrer">结构化数据</a>，也就意味着可能会存在<a href="https://baike.baidu.com/item/%E9%9D%9E%E7%BB%93%E6%9E%84%E5%8C%96%E6%95%B0%E6%8D%AE" target="_blank" rel="noopener noreferrer">非结构化数据</a>，甚至时<a href="https://baike.baidu.com/item/%E5%8D%8A%E7%BB%93%E6%9E%84%E5%8C%96%E6%95%B0%E6%8D%AE" target="_blank" rel="noopener noreferrer">半结构化数据</a>。</p><p>虽然<code>MySQL</code>在大都数的应用开发中都占据着主流地位，但当对于后两者，很明显，它才是那个<code>少数派</code>。</p><p>对于<a href="https://baike.baidu.com/item/%E9%9D%9E%E7%BB%93%E6%9E%84%E5%8C%96%E6%95%B0%E6%8D%AE" target="_blank" rel="noopener noreferrer">非结构化数据</a>和<a href="https://baike.baidu.com/item/%E5%8D%8A%E7%BB%93%E6%9E%84%E5%8C%96%E6%95%B0%E6%8D%AE" target="_blank" rel="noopener noreferrer">半结构化数据</a>来说，<code>MySQL</code>那套凡是都先要定规矩，凡事都要一板一眼的方法完全行不通。</p><p>因为它们的数据格式参差不齐，而且也不可能事先定义出来。</p><p>例如，对于一个<code>PDF</code>文件，它有<code>章节</code>、<code>标题</code>、<code>字数</code>和<code>页码</code>，但同样的属性对于一封<code>Email</code>邮件来说，除了<code>标题</code>和<code>字数</code>可以套用，<code>章节</code>和<code>页码</code>是用不到的。</p><p>如果再来一个动漫视频文件，前面的这些属性几乎都白给。</p><p>也许，可以把世界上所有的不同类型的数据格式属性，全部先用一张<code>MySQL</code>表事先定义出来。</p><p>这样做理论上是可以，但实际上很难办到。</p><ul><li><p>新类型的数据不停出现，例如微博和短视频。这意味着这张表要不停地修改。</p></li><li><p>有的数据格式只需要1~2个字段，但却必须填成百上千个其他根本用不着的字段。</p></li><li><p>大量的字段都是空白，存储、查询的效率可想而知。</p></li></ul><p>连<code>MySQL</code>这个大哥都做不到，跟别说<code>Redis</code>这个弟弟了。</p><p>所以，<a href="https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E6%96%87%E6%AA%94%E7%9A%84%E6%95%B8%E6%93%9A%E5%BA%AB" target="_blank" rel="noopener noreferrer">文档数据库</a>出场了，它专治<a href="https://baike.baidu.com/item/%E9%9D%9E%E7%BB%93%E6%9E%84%E5%8C%96%E6%95%B0%E6%8D%AE" target="_blank" rel="noopener noreferrer">非结构化数据</a>和<a href="https://baike.baidu.com/item/%E5%8D%8A%E7%BB%93%E6%9E%84%E5%8C%96%E6%95%B0%E6%8D%AE" target="_blank" rel="noopener noreferrer">半结构化数据</a>的各种不服。</p><p>而<a href="https://www.mongodb.com/" target="_blank" rel="noopener noreferrer">MongoDB</a>就是其中的佼佼者。</p><p>它无需事先做什么定义，只要告诉它需要保存什么就好了。</p><ul><li><p><code>PDF</code>需要<code>章节</code>、<code>标题</code>、<code>字数</code>和<code>页码</code>，可以。</p></li><li><p><code>Email</code>需要<code>主题</code>、<code>收件地址</code>、<code>抄送人</code>、<code>内容</code>和<code>签名</code>，可以。</p></li><li><p><code>短视频</code>需要<code>名称</code>、<code>时长</code>、<code>视频格式</code>和<code>播放地址</code>，可以。</p></li><li><p><code>UML用例图</code>需要<code>名称</code>和<code>文件类型</code>，可以。</p></li><li><p><code>用户日志</code>需要<code>用户名</code>、<code>注册时间戳</code>、<code>行为事件</code>，可以；<code>订单日志</code>需要<code>订单号</code>、<code>商品名称</code>、<code>支付金额</code>，也可以。</p></li><li><p><code>位置坐标</code>只需要<code>经度Longitude</code>和<code>纬度Latitude</code>就行了，可以。</p></li></ul><p>这里面所有的数据，都各有各的属性字段，而且这些字段都是可以在实际运行的时候动态增加、修改和删除的。</p><p>完全是来者不拒，更重要的是它们又绝不会互相影响，且丝毫不影响查询效率。</p><p><a href="https://www.mongodb.com/" target="_blank" rel="noopener noreferrer">MongoDB</a>弥补了<code>MySQL</code>在数据存储上的短板，相对于<a href="https://baike.baidu.com/item/%E7%BB%93%E6%9E%84%E5%8C%96%E6%95%B0%E6%8D%AE" target="_blank" rel="noopener noreferrer">结构化数据</a>，它才是那个占据三分之二的大多数。</p>',19),a=[d];function n(p,i){return t(),o("div",null,a)}const m=e(c,[["render",n],["__file","index.html.vue"]]),s=JSON.parse('{"path":"/technology/middleware/mongodb/","title":"什么是MongoDB？","lang":"zh-CN","frontmatter":{"title":"什么是MongoDB？","icon":"lemon","category":["中间件","MongoDB"],"tag":["中间件","MongoDB"],"date":"2023-01-12T00:00:00.000Z","isOriginal":true,"star":true,"description":"有了Redis之后，很快又出现了新的应用需求。 相对于MySQL这种存储结构化数据的数据库来说，它所有的数据表都是事先定义好的，数据表中的每一个字段也都有一个预期值存在。即使没有，也会有默认值来填充。 但既然有了结构化数据，也就意味着可能会存在非结构化数据，甚至时半结构化数据。 虽然MySQL在大都数的应用开发中都占据着主流地位，但当对于后两者，很明显...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/middleware/mongodb/"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"什么是MongoDB？"}],["meta",{"property":"og:description","content":"有了Redis之后，很快又出现了新的应用需求。 相对于MySQL这种存储结构化数据的数据库来说，它所有的数据表都是事先定义好的，数据表中的每一个字段也都有一个预期值存在。即使没有，也会有默认值来填充。 但既然有了结构化数据，也就意味着可能会存在非结构化数据，甚至时半结构化数据。 虽然MySQL在大都数的应用开发中都占据着主流地位，但当对于后两者，很明显..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"中间件"}],["meta",{"property":"article:tag","content":"MongoDB"}],["meta",{"property":"article:published_time","content":"2023-01-12T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"什么是MongoDB？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":2.93,"words":880},"filePathRelative":"technology/middleware/mongodb/README.md","localizedDate":"2023年1月12日","excerpt":"<p>有了<a href=\\"https://redis.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Redis</a>之后，很快又出现了新的应用需求。</p>\\n<p>相对于<code>MySQL</code>这种存储<a href=\\"https://baike.baidu.com/item/%E7%BB%93%E6%9E%84%E5%8C%96%E6%95%B0%E6%8D%AE\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">结构化数据</a>的数据库来说，它所有的数据表都是事先定义好的，数据表中的每一个字段也都有一个预期值存在。即使没有，也会有默认值来填充。</p>","autoDesc":true}');export{m as comp,s as data};
