import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,c as i,a as t,e,b as n,w as o,d as r,o as c}from"./app-B5m7CcSj.js";const d={},s=r('<h2 id="项目背景" tabindex="-1"><a class="header-anchor" href="#项目背景"><span>项目背景</span></a></h2><p>相信很多人都见过这样的功能：当你关注了某位<a href="https://baike.baidu.com/item/%E5%A4%A7V" target="_blank" rel="noopener noreferrer">大V</a>（博主或主播），也会将<code>TA</code>的粉丝关注的<a href="https://baike.baidu.com/item/%E5%A4%A7V" target="_blank" rel="noopener noreferrer">大V</a>推荐给你。</p><figure><img src="https://tianmazuo.com/application/case/recommend/recommend-01.png" alt="将关注的人推荐给你" tabindex="0" loading="lazy"><figcaption>将关注<code>TA</code>的人推荐给你</figcaption></figure><ul><li><p>①：<code>张子凡</code>关注了<code>《画江湖之不良人》</code>。</p></li><li><p>②：<code>李星云</code>也关注<code>《画江湖之不良人》</code>。</p></li><li><p>③：把<code>张子凡</code>关注的内容也推荐给<code>李星云</code>。</p></li></ul><p>这个功能就是所谓的<code>三度关系推荐</code>，不管推荐的是<a href="https://baike.baidu.com/item/%E5%A4%A7V" target="_blank" rel="noopener noreferrer">大V</a>、粉丝还是别的什么，这种基于<code>他们喜欢的你也可能会喜欢</code>的功能在社交应用中还是比较普遍的。</p><p>例如，当用户关注某个直播平台的主播时，平台可能会向该用户推荐该主播的粉丝所关注的主播。</p><p>而且平台会按照推荐重合度来筛选满足条件的主播，并进行择优展示。</p><br><h2 id="技术选型" tabindex="-1"><a class="header-anchor" href="#技术选型"><span>技术选型</span></a></h2>',9),h=t("code",null,"数据采集",-1),g=t("code",null,"数据存储",-1),m=t("code",null,"数据计算",-1),f=t("code",null,"数据展现",-1),u=r('<ul><li><p><code>数据采集</code>：<a href="https://flume.apache.org/" target="_blank" rel="noopener noreferrer">Flume</a>、<a href="https://sqoop.apache.org/" target="_blank" rel="noopener noreferrer">Sqoop</a>、<a href="https://www.elastic.co/logstash" target="_blank" rel="noopener noreferrer">Logstash</a>、<a href="https://www.elastic.co/beats/filebeat" target="_blank" rel="noopener noreferrer">Filebeat</a>等常用中间件前面已经做过比较，这里采用<a href="https://www.elastic.co/beats/filebeat" target="_blank" rel="noopener noreferrer">Filebeat</a>部署在业务服务器上的方式，搭配<a href="https://kafka.apache.org/" target="_blank" rel="noopener noreferrer">Kafka</a>、<a href="https://flume.apache.org/" target="_blank" rel="noopener noreferrer">Flume</a>和<a href="https://sqoop.apache.org/" target="_blank" rel="noopener noreferrer">Sqoop</a>实现数据采集。</p><figure><img src="https://tianmazuo.com/application/case/recommend/recommend-02.png" alt="数据采集技术选型" tabindex="0" loading="lazy"><figcaption>数据采集技术选型</figcaption></figure></li><li><p><code>数据存储</code>：在涉及大数据中应用中，首选基本上都是<a href="https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html" target="_blank" rel="noopener noreferrer">HDFS</a>。但由于业务中需要存储大量的关系数据（这里的<code>关系</code>并非<a href="https://en.wikipedia.org/wiki/Relational_database" target="_blank" rel="noopener noreferrer">关系型数据库</a>中的<code>关系</code>），所以如果用<a href="https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html" target="_blank" rel="noopener noreferrer">HDFS</a>或<a href="https://www.mysql.com" target="_blank" rel="noopener noreferrer">MySQL</a>来保存这些<code>关系数据</code>的话，会出现大量的冗余，且效果也不好。所以这里采用<a href="https://neo4j.com/" target="_blank" rel="noopener noreferrer">Neo4j</a>这个<a href="https://zh.wikipedia.org/wiki/%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93" target="_blank" rel="noopener noreferrer">图数据库</a>系统。</p><p>下面是几种不同<a href="https://zh.wikipedia.org/wiki/%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93" target="_blank" rel="noopener noreferrer">图数据库</a>之间的简单比较。</p><table><thead><tr><th style="text-align:center;">对比项</th><th style="text-align:center;">Neo4j</th><th style="text-align:center;">OrientDB</th><th style="text-align:center;">JanusGraph</th><th style="text-align:center;">GraphX/Gelly</th></tr></thead><tbody><tr><td style="text-align:center;">运行方式</td><td style="text-align:center;">计算+存储</td><td style="text-align:center;">计算+存储</td><td style="text-align:center;">计算+存储</td><td style="text-align:center;">仅计算但不保存数据</td></tr><tr><td style="text-align:center;">事务</td><td style="text-align:center;">支持</td><td style="text-align:center;">支持</td><td style="text-align:center;">支持</td><td style="text-align:center;">支持</td></tr><tr><td style="text-align:center;">数据模型</td><td style="text-align:center;">graph</td><td style="text-align:center;">dov、graph、KV</td><td style="text-align:center;">graph</td><td style="text-align:center;">graph</td></tr><tr><td style="text-align:center;">查询语言</td><td style="text-align:center;">Cypher</td><td style="text-align:center;">类SQL</td><td style="text-align:center;">Gremlin</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:center;">分布式</td><td style="text-align:center;">企业版支持</td><td style="text-align:center;">支持</td><td style="text-align:center;">支持</td><td style="text-align:center;">支持</td></tr><tr><td style="text-align:center;">维护成本</td><td style="text-align:center;">低</td><td style="text-align:center;">较高</td><td style="text-align:center;">高</td><td style="text-align:center;">低</td></tr><tr><td style="text-align:center;">是否开源</td><td style="text-align:center;">社区版开源</td><td style="text-align:center;">开源</td><td style="text-align:center;">开源</td><td style="text-align:center;">开源</td></tr></tbody></table></li><li><p><code>数据计算</code>：因为基于社交应用的关系推荐基本上都是实时计算出来的，所以基于<a href="https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html" target="_blank" rel="noopener noreferrer">MapReduce</a>的第一代大数据计算引擎<a href="https://hadoop.apache.org" target="_blank" rel="noopener noreferrer">Hadoop</a>显然无法胜任这种需求，而这个项目既需要实时计算，也需要离线计算，因此选择使用<a href="https://spark.apache.org/" target="_blank" rel="noopener noreferrer">Spark</a>来作为大数据计算的组件。</p></li><li><p><code>数据展现</code>：这里依然采用之前使用过的<a href="https://zeppelin.apache.org/" target="_blank" rel="noopener noreferrer">Zeppelin</a>作为数据展现工具。</p></li></ul><br><h2 id="整体架构" tabindex="-1"><a class="header-anchor" href="#整体架构"><span>整体架构</span></a></h2><p>在确定了需要使用的各个技术组件之后，三度关系推荐系统的整体技术架构可以这样来设计。</p><figure><img src="https://tianmazuo.com/application/case/recommend/recommend-03.png" alt="整体技术架构" tabindex="0" loading="lazy"><figcaption>整体技术架构</figcaption></figure><p>上面这个架构存在这么几个问题。</p><ul><li><p><a href="https://spark.apache.org/" target="_blank" rel="noopener noreferrer">Spark</a>本质上还是一个批处理大数据引擎，对实时流处理的支持不如<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>。</p></li><li><p>三度关系推荐数据更适合存储在保存<a href="https://en.wikipedia.org/wiki/Key%E2%80%93value_database" target="_blank" rel="noopener noreferrer">KV键值对</a>的<a href="https://www.redis.io/" target="_blank" rel="noopener noreferrer">Redis</a>中，而且可以实现定期删除的功能。</p></li><li><p>计算出来的结果直接用<a href="https://zeppelin.apache.org/" target="_blank" rel="noopener noreferrer">Zeppelin</a>展示并不合适，完全可以改成<code>HTTP接口</code>，供其他程序调用。</p></li></ul><p>但前期采用这个架构已经能够实现所有需要的功能了。</p>',8),k=r('<p>虽然项目前期使用的是<a href="https://spark.apache.org/" target="_blank" rel="noopener noreferrer">Spark</a>，但到后期必须用<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>来代替它，这是因为社交应用的独特属性决定的——只有基于<a href="https://nightlies.apache.org/flink/flink-docs-master/docs/concepts/time/#event-time-and-watermarks" target="_blank" rel="noopener noreferrer">Watermark水印</a> + <code>EventTime</code>机制的<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>才能完全满足数据的准确性要求。</p><figure><img src="https://tianmazuo.com/application/case/recommend/recommend-04.png" alt="整体技术架构" tabindex="0" loading="lazy"><figcaption>整体技术架构</figcaption></figure><p>并且因为关系推荐数据即使有一些延迟，或者偶尔丢失数据，对推荐效果也没有多大影响，所以也可以将<a href="https://www.mysql.com" target="_blank" rel="noopener noreferrer">MySQL</a>换成<a href="https://www.redis.io/" target="_blank" rel="noopener noreferrer">Redis</a>，这样存储和查询的速度更快。</p>',3);function b(y,_){const a=p("RouteLink");return c(),i("div",null,[s,t("p",null,[e("和前面的案例"),n(a,{to:"/application/case/#%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B"},{default:o(()=>[e("Hive离线数据仓库")]),_:1}),e("一样，它也包括"),h,e("、"),g,e("、"),m,e("和"),f,e("这四大组成部分。")]),u,t("p",null,[e("它的服务器资源规划和"),n(a,{to:"/application/case/#%E8%B5%84%E6%BA%90%E8%A7%84%E5%88%92"},{default:o(()=>[e("Hive离线数据仓库")]),_:1}),e("类似。")]),k])}const E=l(d,[["render",b],["__file","index.html.vue"]]),A=JSON.parse('{"path":"/application/case/recommend/","title":"关系推荐项目说明","lang":"zh-CN","frontmatter":{"title":"关系推荐项目说明","icon":"thumbtack","category":["案例","社交平台","关系推荐"],"tag":["案例","社交平台","关系推荐"],"date":"2024-06-11T00:00:00.000Z","isOriginal":true,"star":true,"description":"项目背景 相信很多人都见过这样的功能：当你关注了某位大V（博主或主播），也会将TA的粉丝关注的大V推荐给你。 将关注的人推荐给你将关注TA的人推荐给你 ①：张子凡关注了《画江湖之不良人》。 ②：李星云也关注《画江湖之不良人》。 ③：把张子凡关注的内容也推荐给李星云。 这个功能就是所谓的三度关系推荐，不管推荐的是大V、粉丝还是别的什么，这种基于他们喜欢的...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/application/case/recommend/"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"关系推荐项目说明"}],["meta",{"property":"og:description","content":"项目背景 相信很多人都见过这样的功能：当你关注了某位大V（博主或主播），也会将TA的粉丝关注的大V推荐给你。 将关注的人推荐给你将关注TA的人推荐给你 ①：张子凡关注了《画江湖之不良人》。 ②：李星云也关注《画江湖之不良人》。 ③：把张子凡关注的内容也推荐给李星云。 这个功能就是所谓的三度关系推荐，不管推荐的是大V、粉丝还是别的什么，这种基于他们喜欢的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/application/case/recommend/recommend-01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"案例"}],["meta",{"property":"article:tag","content":"社交平台"}],["meta",{"property":"article:tag","content":"关系推荐"}],["meta",{"property":"article:published_time","content":"2024-06-11T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"关系推荐项目说明\\",\\"image\\":[\\"https://tianmazuo.com/application/case/recommend/recommend-01.png\\",\\"https://tianmazuo.com/application/case/recommend/recommend-02.png\\",\\"https://tianmazuo.com/application/case/recommend/recommend-03.png\\",\\"https://tianmazuo.com/application/case/recommend/recommend-04.png\\"],\\"datePublished\\":\\"2024-06-11T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[{"level":2,"title":"项目背景","slug":"项目背景","link":"#项目背景","children":[]},{"level":2,"title":"技术选型","slug":"技术选型","link":"#技术选型","children":[]},{"level":2,"title":"整体架构","slug":"整体架构","link":"#整体架构","children":[]}],"git":{},"readingTime":{"minutes":3.9,"words":1170},"filePathRelative":"application/case/recommend/README.md","localizedDate":"2024年6月11日","excerpt":"<h2>项目背景</h2>\\n<p>相信很多人都见过这样的功能：当你关注了某位<a href=\\"https://baike.baidu.com/item/%E5%A4%A7V\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">大V</a>（博主或主播），也会将<code>TA</code>的粉丝关注的<a href=\\"https://baike.baidu.com/item/%E5%A4%A7V\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">大V</a>推荐给你。</p>\\n<figure><img src=\\"https://tianmazuo.com/application/case/recommend/recommend-01.png\\" alt=\\"将关注的人推荐给你\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>将关注<code>TA</code>的人推荐给你</figcaption></figure>","autoDesc":true}');export{E as comp,A as data};
