import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as t,d as r}from"./app-CiwSPZKD.js";const c={},a=r('<p>虽然<a href="https://rocketmq.apache.org/" target="_blank" rel="noopener noreferrer">RocketMQ</a>一直在不停地演变和进化，但它的核心结构是基本上没有改变的。</p><figure><img src="https://tianmazuo.com/technology/middleware/rocketmq/rocketmq-10.png" alt="RocketMQ的路由中心架构" tabindex="0" loading="lazy"><figcaption>RocketMQ的路由中心架构</figcaption></figure><p><a href="https://rocketmq.apache.org/" target="_blank" rel="noopener noreferrer">RocketMQ</a>主要由下面几个部分组成。</p><ul><li><p><code>Broker</code>：负责消息的存储和传输，响应消费者的请求，它将消息存储在本地磁盘文件中。</p></li><li><p><code>NameServer</code>：管理集群中所有的<code>Broker</code>，同时负责完成<code>Broker</code>的路由注册与服务发现，它和<code>Broker</code>之间通过心跳机制保持连接。</p></li><li><p><code>生产者</code>（Producer）：负责生产并发送消息的组件。</p></li><li><p><code>消费者</code>（Consumer）：负责接收并消费消息的组件。</p></li><li><p><code>生产者</code>或<code>消费者</code>通过轮询，定时向<code>NameServer</code>拉取最新<code>Broker</code>注册信息。</p></li></ul><p>为了避免单点故障，提升性能，<a href="https://rocketmq.apache.org/" target="_blank" rel="noopener noreferrer">RocketMQ</a>又将<code>Broker</code>分为两种不同的角色。</p><ul><li><p><code>Master Broker</code>：主<code>Broker</code>，负责响应请求并存储消息。</p></li><li><p><code>Slaver Broker</code>：从<code>Broker</code>，一般只同步<code>Master Broker</code>的数据，偶尔也会响应消费者的读请求。</p></li></ul><p>根据<code>Master Broker</code>和<code>Slaver Broker</code>的不同，<a href="https://rocketmq.apache.org/" target="_blank" rel="noopener noreferrer">RocketMQ</a>又有三种不同的集群模式，不管是哪种模式，它们都有一些共同点。</p><figure><img src="https://tianmazuo.com/technology/middleware/rocketmq/rocketmq-11.png" alt="几种不同集群架构的共同点" tabindex="0" loading="lazy"><figcaption>几种不同集群架构的共同点</figcaption></figure><figure><img src="https://tianmazuo.com/technology/middleware/rocketmq/rocketmq-12.png" alt="几种不同集群架构的共同点" tabindex="0" loading="lazy"><figcaption>几种不同集群架构的共同点</figcaption></figure><ul><li><p><code>Master Broker</code>和<code>Slaver Broker</code>都会向<code>NameServer</code>注册自己，以及发送心跳。</p></li><li><p>消费者可能从<code>Master Broker</code>获取消息，也可能从<code>Slave Broker</code>获取消息，但消息只会被消费一次。</p></li><li><p>高可用集群无非就是从多个<code>Slaver Broker</code>之中自动产生新的<code>Master Broker</code>，它是通过<a href="https://baike.baidu.com/item/RAFT/23251788" target="_blank" rel="noopener noreferrer">Raft协议</a>实现的。</p></li></ul>',10),i=[a];function n(p,l){return t(),o("div",null,i)}const k=e(c,[["render",n],["__file","structure.html.vue"]]),g=JSON.parse('{"path":"/technology/middleware/rocketmq/structure.html","title":"RocketMQ核心架构","lang":"zh-CN","frontmatter":{"title":"RocketMQ核心架构","icon":"envelope-circle-check","category":["中间件","RocketMQ"],"tag":["中间件","RocketMQ"],"date":"2023-02-20T00:00:00.000Z","isOriginal":true,"star":true,"description":"虽然RocketMQ一直在不停地演变和进化，但它的核心结构是基本上没有改变的。 RocketMQ的路由中心架构RocketMQ的路由中心架构 RocketMQ主要由下面几个部分组成。 Broker：负责消息的存储和传输，响应消费者的请求，它将消息存储在本地磁盘文件中。 NameServer：管理集群中所有的Broker，同时负责完成Broker的路由注...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/middleware/rocketmq/structure.html"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"RocketMQ核心架构"}],["meta",{"property":"og:description","content":"虽然RocketMQ一直在不停地演变和进化，但它的核心结构是基本上没有改变的。 RocketMQ的路由中心架构RocketMQ的路由中心架构 RocketMQ主要由下面几个部分组成。 Broker：负责消息的存储和传输，响应消费者的请求，它将消息存储在本地磁盘文件中。 NameServer：管理集群中所有的Broker，同时负责完成Broker的路由注..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/technology/middleware/rocketmq/rocketmq-10.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"中间件"}],["meta",{"property":"article:tag","content":"RocketMQ"}],["meta",{"property":"article:published_time","content":"2023-02-20T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RocketMQ核心架构\\",\\"image\\":[\\"https://tianmazuo.com/technology/middleware/rocketmq/rocketmq-10.png\\",\\"https://tianmazuo.com/technology/middleware/rocketmq/rocketmq-11.png\\",\\"https://tianmazuo.com/technology/middleware/rocketmq/rocketmq-12.png\\"],\\"datePublished\\":\\"2023-02-20T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":1.47,"words":442},"filePathRelative":"technology/middleware/rocketmq/structure.md","localizedDate":"2023年2月20日","excerpt":"<p>虽然<a href=\\"https://rocketmq.apache.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">RocketMQ</a>一直在不停地演变和进化，但它的核心结构是基本上没有改变的。</p>\\n<figure><img src=\\"https://tianmazuo.com/technology/middleware/rocketmq/rocketmq-10.png\\" alt=\\"RocketMQ的路由中心架构\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>RocketMQ的路由中心架构</figcaption></figure>","autoDesc":true}');export{k as comp,g as data};
