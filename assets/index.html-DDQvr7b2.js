import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as r,d as a}from"./app-CiwSPZKD.js";const t={},n=a('<p><a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>的成功很大程度上得益于开源软件的成功，尤其是构建上开源软件基础上的开源生态，这才是它能够繁荣、出圈的真正原因。</p><p>在开源的世界中，<a href="https://www.apache.org/" target="_blank" rel="noopener noreferrer">Apache</a>的大名恐怕很少会有工程师会不知道，现今几乎一大部分业界知名开源软件，都在<a href="https://www.apache.org/" target="_blank" rel="noopener noreferrer">Apache</a>的<code>摇篮中</code>渡过了<code>童年时代</code>。</p><p>要提高<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>开发水平，除了自身要不断学习实践之外，还需要借鉴一些优秀的开源框架和开发工具，包括它们背后的设计思想和实现思路，比如<code>IoC</code>、<code>DI</code>、<code>AoP</code>等、<a href="https://zh.wikipedia.org/wiki/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F_(%E8%AE%A1%E7%AE%97%E6%9C%BA)" target="_blank" rel="noopener noreferrer">设计模式</a>，既可以拿来就用，又能学到好的东西。</p><p>看源码不一定非得看<a href="https://spring.io/" target="_blank" rel="noopener noreferrer">Spring</a>、<a href="https://hadoop.apache.org/" target="_blank" rel="noopener noreferrer">Hadoop</a>、<a href="https://spark.apache.org/" target="_blank" rel="noopener noreferrer">Spark</a>、<a href="https://dubbo.apache.org/" target="_blank" rel="noopener noreferrer">Dubbo</a>或<a href="https://rocketmq.apache.org/" target="_blank" rel="noopener noreferrer">RocketMQ</a>这些重量级的开源框架，平常开发中使用的像<a href="https://github.com/alibaba/fastjson" target="_blank" rel="noopener noreferrer">Fastjson</a>、<a href="https://druid.apache.org/" target="_blank" rel="noopener noreferrer">Druid</a>、<a href="https://doc.netuno.org/docs/en/academy/server/database/hikaricp-database-connection-pool/" target="_blank" rel="noopener noreferrer">Hikari</a>、<a href="https://junit.org/" target="_blank" rel="noopener noreferrer">JUnit</a>等轻量级的框架也是非常值得一看的。</p><p>另一个和<a href="https://www.apache.org/" target="_blank" rel="noopener noreferrer">Apache</a>一样出名甚至更出名的就是<a href="https://www.google.com/" target="_blank" rel="noopener noreferrer">Google</a>：一个是全世界最大的开源软件基金会，一个是全世界最大的搜索引擎，出于自身业务的需要，他们都对<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>进行了封装和扩展，分别是<a href="https://commons.apache.org/" target="_blank" rel="noopener noreferrer">Apache Commons</a>和<a href="https://guava.dev/" target="_blank" rel="noopener noreferrer">Google Guava</a>。</p><p><a href="https://commons.apache.org/" target="_blank" rel="noopener noreferrer">Apache Commons</a>其实是一组开源中间件的统称，除了一些使用较少甚至被废弃的外，常用的包括下面这些。</p><ul><li><p><a href="https://commons.apache.org/proper/commons-beanutils/" target="_blank" rel="noopener noreferrer">Commons-BeanUtils</a>：<code>JavaBean</code>反射的相关<code>API</code>，提供操作<code>Bean</code>的一些工具。</p></li><li><p><a href="https://commons.apache.org/proper/commons-codec/" target="_blank" rel="noopener noreferrer">Commons-Codec</a>：包含一些通用的编解码算法，含语音编码器、<code>Hex</code>、<code>Base64</code>以及<code>URL encoder</code>。</p></li><li><p><a href="https://commons.apache.org/proper/commons-collections/" target="_blank" rel="noopener noreferrer">Commons-Collections</a>：对<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>集合的扩展和增强。</p></li><li><p><a href="https://mvnrepository.com/artifact/commons-httpclient/commons-httpclient" target="_blank" rel="noopener noreferrer">Commons-HttpClient</a>：提供了可以工作于<a href="https://en.wikipedia.org/wiki/HTTP" target="_blank" rel="noopener noreferrer">HTTP</a>客户端的一个框架，但它已经被<a href="https://hc.apache.org/httpcomponents-client-4.5.x/index.html" target="_blank" rel="noopener noreferrer">httpclient</a>和<a href="https://hc.apache.org/httpcomponents-core-5.3.x/" target="_blank" rel="noopener noreferrer">httpcore</a>所取代，且后者在持续更新和完善，对于新项目，最好使用<a href="https://hc.apache.org/httpcomponents-client-4.5.x/index.html" target="_blank" rel="noopener noreferrer">httpclient</a>。</p></li><li><p><a href="https://commons.apache.org/proper/commons-fileupload/" target="_blank" rel="noopener noreferrer">Commons-FileUpload</a>：对文件操作提供强大和高性能的封装。</p></li><li><p><a href="https://commons.apache.org/proper/commons-io/" target="_blank" rel="noopener noreferrer">Commons-IO</a>：对<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a><code>I/O</code>操作的封装。</p></li><li><p><a href="https://commons.apache.org/proper/commons-lang/" target="_blank" rel="noopener noreferrer">Commons-Lang</a>：封装了一些<code>java.lang</code>中包装类型的扩展功能，<a href="https://mvnrepository.com/artifact/org.apache.commons/commons-lang3" target="_blank" rel="noopener noreferrer">Commons-Lang3</a>是它的增强。</p></li><li><p><a href="https://commons.apache.org/proper/commons-pool/" target="_blank" rel="noopener noreferrer">Commons-Pool</a>：提供了通用对象池接口，一个模块化的对象池实现。</p></li></ul><p>同样，<a href="https://guava.dev/" target="_blank" rel="noopener noreferrer">Google Guava</a>也提供了一些常用工具。</p><ul><li><p><code>基本工具类</code>：条件检查、简化<code>Object</code>方法实现、排序和简化异常操作等。</p></li><li><p><code>集合操作类</code>：这应该是<a href="https://guava.dev/" target="_blank" rel="noopener noreferrer">Google Guava</a>最成熟和为人所知的部分。</p></li><li><p><code>缓存类</code>：本地缓存实现，支持多种缓存过期策略，仅支持单点。</p></li><li><p><code>并发工具类</code>：让编写正确的并发代码更简单。</p></li><li><p><code>字符串处理类</code>：包括分割、连接、填充等操作。</p></li><li><p><code>扩展原生类型</code>：扩展<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>的原生类型操作，包括某些无符号形式。</p></li><li><p><code>I/O操作类</code>：对<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a><code>I/O</code>操作的封装。</p></li><li><p><code>事件总线</code>：以<a href="https://zh.wikipedia.org/wiki/%E5%8F%91%E5%B8%83/%E8%AE%A2%E9%98%85" target="_blank" rel="noopener noreferrer">发布-订阅</a>模式通信，但组件不需要显式地注册到其他组件中。</p></li><li><p><code>反射工具类</code>：<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>反射机制工具类。</p></li></ul>',9),p=[n];function c(l,h){return r(),o("div",null,p)}const m=e(t,[["render",c],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/technology/sundry/cg/","title":"Apache Commons和Google Guava","lang":"zh-CN","frontmatter":{"title":"Apache Commons和Google Guava","icon":"hat-cowboy-side","category":["杂项","Apache Commons","Google Guava"],"tag":["杂项","Apache Commons","Google Guava"],"date":"2021-09-27T00:00:00.000Z","isOriginal":true,"star":true,"description":"Java的成功很大程度上得益于开源软件的成功，尤其是构建上开源软件基础上的开源生态，这才是它能够繁荣、出圈的真正原因。 在开源的世界中，Apache的大名恐怕很少会有工程师会不知道，现今几乎一大部分业界知名开源软件，都在Apache的摇篮中渡过了童年时代。 要提高Java开发水平，除了自身要不断学习实践之外，还需要借鉴一些优秀的开源框架和开发工具，包括...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/sundry/cg/"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"Apache Commons和Google Guava"}],["meta",{"property":"og:description","content":"Java的成功很大程度上得益于开源软件的成功，尤其是构建上开源软件基础上的开源生态，这才是它能够繁荣、出圈的真正原因。 在开源的世界中，Apache的大名恐怕很少会有工程师会不知道，现今几乎一大部分业界知名开源软件，都在Apache的摇篮中渡过了童年时代。 要提高Java开发水平，除了自身要不断学习实践之外，还需要借鉴一些优秀的开源框架和开发工具，包括..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"杂项"}],["meta",{"property":"article:tag","content":"Apache Commons"}],["meta",{"property":"article:tag","content":"Google Guava"}],["meta",{"property":"article:published_time","content":"2021-09-27T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Apache Commons和Google Guava\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-09-27T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":2.96,"words":888},"filePathRelative":"technology/sundry/cg/README.md","localizedDate":"2021年9月27日","excerpt":"<p><a href=\\"https://www.oracle.com/java/technologies/downloads/archive/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Java</a>的成功很大程度上得益于开源软件的成功，尤其是构建上开源软件基础上的开源生态，这才是它能够繁荣、出圈的真正原因。</p>\\n<p>在开源的世界中，<a href=\\"https://www.apache.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Apache</a>的大名恐怕很少会有工程师会不知道，现今几乎一大部分业界知名开源软件，都在<a href=\\"https://www.apache.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Apache</a>的<code>摇篮中</code>渡过了<code>童年时代</code>。</p>","autoDesc":true}');export{m as comp,g as data};
