import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,c as e,a as i,e as s,b as p,w as t,d as h,o as r}from"./app-B5m7CcSj.js";const k={},d=h(`<h2 id="drools概述" tabindex="-1"><a class="header-anchor" href="#drools概述"><span>Drools概述</span></a></h2><p><a href="https://www.drools.org/" target="_blank" rel="noopener noreferrer">Drools</a>是一款用<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>开发出来的实现<a href="https://en.wikipedia.org/wiki/Business_rule_management_system" target="_blank" rel="noopener noreferrer">业务规则管理系统（BRMS）</a>的软件工具，但凡需要将业务与代码解耦的地方，都可以用到它，而且开发简单、维护方便。</p><p>下面是一段针对当月退货总金额的优惠券扣减规则的<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>代码。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> CouponRulerExecutor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ......</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> refundMoneyRule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> refundMoney</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> amount</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (refundMoney </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (amount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(amount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (refundMoney </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> refundMoney </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (amount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(amount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) (amount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (refundMoney </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 500</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> refundMoney </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (amount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(amount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(amount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) (amount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (refundMoney </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (amount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 300</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(amount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 300</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(amount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) (amount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ......</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段代码先不说它是否正确，光是看看由这些<code>if...elas</code>组成的<a href="https://zh.wikipedia.org/wiki/%E9%9D%A2%E6%9D%A1%E5%BC%8F%E4%BB%A3%E7%A0%81" target="_blank" rel="noopener noreferrer">面条式代码</a>，就够让人头疼的了。</p><p>而且随着业务需求的变化，它还可能变得更复杂，修改更频繁。</p><p>怎么办？——将业务规则和实现代码相分离。</p><div class="language-drl line-numbers-mode" data-highlighter="shiki" data-ext="drl" data-title="drl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package buy_money_rules;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import com.itechthink.drools.Coupon;</span></span>
<span class="line"><span>global Coupon coupon</span></span>
<span class="line"><span></span></span>
<span class="line"><span>rule &quot;point0&quot;</span></span>
<span class="line"><span>    no-loop false</span></span>
<span class="line"><span>    lock-on-active true</span></span>
<span class="line"><span>    salience 1</span></span>
<span class="line"><span>    when</span></span>
<span class="line"><span>        $coupon : Coupon(buyMoney &lt;= 100)</span></span>
<span class="line"><span>    then</span></span>
<span class="line"><span>        $coupon.setPoint(0);</span></span>
<span class="line"><span>        update($coupon);</span></span>
<span class="line"><span>end</span></span>
<span class="line"><span></span></span>
<span class="line"><span>rule &quot;point100&quot;</span></span>
<span class="line"><span>    no-loop false</span></span>
<span class="line"><span>    lock-on-active true</span></span>
<span class="line"><span>    salience 1</span></span>
<span class="line"><span>    when</span></span>
<span class="line"><span>        $coupon : Coupon(buyMoney &gt; 100 &amp;&amp; buyMoney &lt;= 500)</span></span>
<span class="line"><span>    then</span></span>
<span class="line"><span>        $coupon.setPoint($coupon.getPoint() + 10);</span></span>
<span class="line"><span>        update($coupon);</span></span>
<span class="line"><span>end</span></span>
<span class="line"><span></span></span>
<span class="line"><span>rule &quot;point500&quot;</span></span>
<span class="line"><span>    no-loop false</span></span>
<span class="line"><span>    lock-on-active true</span></span>
<span class="line"><span>    salience 1</span></span>
<span class="line"><span>    when</span></span>
<span class="line"><span>        $coupon : Coupon(buyMoney &gt; 500 &amp;&amp; buyMoney &lt;= 1000)</span></span>
<span class="line"><span>    then</span></span>
<span class="line"><span>        $coupon.setPoint($coupon.getPoint() + 50);</span></span>
<span class="line"><span>        update($coupon);</span></span>
<span class="line"><span>end</span></span>
<span class="line"><span></span></span>
<span class="line"><span>rule &quot;point1000&quot;</span></span>
<span class="line"><span>    no-loop false</span></span>
<span class="line"><span>    lock-on-active true</span></span>
<span class="line"><span>    salience 1</span></span>
<span class="line"><span>    when</span></span>
<span class="line"><span>        $coupon : Coupon(buyMoney &gt; 1000)</span></span>
<span class="line"><span>    then</span></span>
<span class="line"><span>        $coupon.setPoint($coupon.getPoint() + 100);</span></span>
<span class="line"><span>        update($coupon);</span></span>
<span class="line"><span>end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的脚本正是基于<code>拆分</code>思想的一种尝试：把复杂的业务规则单独抽取出来，用动态脚本进行封装，实现精准的<code>定向清除</code>。</p><p>虽然它看起来也有很多的<code>if...else</code>，但它最大的好处就是不用改源码了，也不用重启服务器了，只需要按照业务需求修改好脚本，就能实现脚本的动态加载和执行。</p><p>这种脚本语言被称为<a href="https://docs.drools.org/6.5.0.Final/drools-docs/html_single/#DroolsLanguageReferenceChapter" target="_blank" rel="noopener noreferrer">Drools Rule Language（DRL，Drools规则语言）</a>。</p><br><h2 id="工作机制" tabindex="-1"><a class="header-anchor" href="#工作机制"><span>工作机制</span></a></h2><p>只有看清了<a href="https://www.drools.org/" target="_blank" rel="noopener noreferrer">Drools</a>的全貌，才能真正理解它的<code>DRL</code>存在的意义。</p><h3 id="引擎组件" tabindex="-1"><a class="header-anchor" href="#引擎组件"><span>引擎组件</span></a></h3><p><a href="https://www.drools.org/" target="_blank" rel="noopener noreferrer">Drools</a>是由下面这些基本逻辑部件组成的。</p><figure><img src="https://tianmazuo.com/technology/programming/drools-01.png" alt="构成Drools的基本逻辑部件" tabindex="0" loading="lazy"><figcaption>构成Drools的基本逻辑部件</figcaption></figure><ul><li><p><code>规则（Rules）</code>：它是一组业务规则或<a href="https://www.drools.org/learn/dmn.html" target="_blank" rel="noopener noreferrer">Drools DMN</a>决策，每个规则都必须包括触发规则的<code>条件</code>和规则所执行的<code>操作</code>。</p></li><li><p><code>生产内存（Production Memory）</code>：用于存储<code>规则（Rules）</code>的位置。</p></li><li><p><code>事实（Facts）</code>：进入到引擎中的数据，也就是业务数据。</p></li><li><p><code>工作内存（Working Memory）</code>：用于存储<code>事实（Facts）</code>的位置。</p></li><li><p><code>模式匹配（Pattern Matcher）</code>：将<code>规则（Rules）</code>的触发条件与<code>事实（Facts）</code>进行匹配，来找到合适的可以触发执行的规则。</p></li><li><p><code>议程（Agenda）</code>：所有满足执条件的<code>规则（Rules）</code>都会被激活并注册到这里。</p></li><li><p><code>决策引擎（Decision Engine）</code>：由<code>生产内存（Production Memory）</code>、<code>工作内存（Working Memory）</code>和<code>模式匹配（Pattern Matcher）</code>组成，并通过<a href="https://docs.redhat.com/zh_hans/documentation/red_hat_process_automation_manager/7.13/html/developing_decision_services_in_red_hat_process_automation_manager/phreak-algorithm-con_decision-engine#phreak-algorithm-con_decision-engine" target="_blank" rel="noopener noreferrer">Phreak算法</a>处理数据。</p></li></ul><h3 id="执行过程" tabindex="-1"><a class="header-anchor" href="#执行过程"><span>执行过程</span></a></h3><p>在真正的物理代码执行层面，<a href="https://www.drools.org/" target="_blank" rel="noopener noreferrer">Drools</a>是这么做的。</p><figure><img src="https://tianmazuo.com/technology/programming/drools-02.png" alt="Drools引擎的代码执行过程" tabindex="0" loading="lazy"><figcaption>Drools引擎的代码执行过程</figcaption></figure><ul><li><p>首先根据<a href="https://docs.drools.org/6.5.0.Final/drools-docs/html_single/#DroolsLanguageReferenceChapter" target="_blank" rel="noopener noreferrer">Drools规则语言</a>的定义来编写若干<code>.drl</code>文件。</p></li><li><p><code>KnowledgeBuilderFactory</code>工厂类生成<code>KnowledgeBuilder</code>类，而<code>KnowledgeBaseFactory</code>工厂类则生成<code>InternalKnowledgeBase</code>类。</p></li><li><p><code>InternalKnowledgeBase</code>类通过<code>KnowledgeBuilder</code>类生成有状态的<code>KieSession</code>或无状态的<code>StatelessKieSession</code>，由它们来最终负责<code>.drl</code>文件的解释和执行。</p></li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>官方已经提供了大量的代码实例。</p><ul><li><p><a href="https://github.com/kiegroup/drools/tree/main/drools-examples" target="_blank" rel="noopener noreferrer">drools-examples</a>。</p></li><li><p><a href="https://github.com/kiegroup/drools/tree/main/drools-examples-api" target="_blank" rel="noopener noreferrer">drools-examples-api</a>。</p></li></ul><p>启动<a href="https://www.drools.org/" target="_blank" rel="noopener noreferrer">Drools</a>应用的方式有两种。</p><ul><li><p>一是通过在固定的路径<code>resources/META-INF/</code>中自定义<code>kmodule.xml</code>文件，实现同样在固定路径<code>resources/</code>中的<code>.drl</code>文件的加载和解析。官方代码和大多数的技术博客采取的就是这种方式。</p></li><li><p>二是通过<a href="https://spring.io/projects/spring-boot" target="_blank" rel="noopener noreferrer">Spring Boot</a>对<a href="https://www.drools.org/" target="_blank" rel="noopener noreferrer">Drools</a>的整合，实现对指定路径下<code>.drl</code>文件的加载和解析，上面这幅图就是展示的这一过程。</p></li></ul><p>但最终目的都是一样的，都是为了生成有状态的<code>KieSession</code>或者无状态的<code>StatelessKieSession</code>会话类，解析并执行<code>.drl</code>文件中的<code>rule</code>所定义的规则。</p><p><strong><mark>以下所有的代码实例都基于官方已经提供的<a href="https://github.com/kiegroup/drools/tree/main/drools-examples" target="_blank" rel="noopener noreferrer">drools-examples</a>样例改写，自己就不费那个劲去重新搞了</mark></strong>。</p></div><br><h2 id="规则文件" tabindex="-1"><a class="header-anchor" href="#规则文件"><span>规则文件</span></a></h2><p><a href="https://www.drools.org/" target="_blank" rel="noopener noreferrer">Drools</a>的标准规则文件<code>rule</code>是以<code>.drl</code>后缀名结尾的，可以用任何文本编辑器对它进行编辑。</p><p><code>.drl</code>规则文件的整体结构如下。</p><div class="language-drl line-numbers-mode" data-highlighter="shiki" data-ext="drl" data-title="drl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// 包名，必填（除了包名以外，其他元素的顺序都可以改变）</span></span>
<span class="line"><span>package-name</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 导入外部类，可选</span></span>
<span class="line"><span>import</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 声明类和枚举，可选，使用场景较少</span></span>
<span class="line"><span>declare</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 全局变量，可选</span></span>
<span class="line"><span>global</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 函数，可选，很少自定义</span></span>
<span class="line"><span>function</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 查询，可选，使用场景较少</span></span>
<span class="line"><span>query</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 规则，至少要有1个，可以有多个，是整个drools的核心</span></span>
<span class="line"><span>rule</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最核心的<code>rule</code>的简略结构如下。</p><div class="language-drl line-numbers-mode" data-highlighter="shiki" data-ext="drl" data-title="drl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>rule &quot;rule1 name&quot;</span></span>
<span class="line"><span>    /* </span></span>
<span class="line"><span>     * ATTRIBUTES表示规则的各种属性，这些属性全都是可选的</span></span>
<span class="line"><span>     * 这些属性之间是叠加的关系（也就是\`and\`的关系），可以在它们后面显式地写上\`and\`，也可以不写</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    \${ATTRIBUTES}</span></span>
<span class="line"><span>    when</span></span>
<span class="line"><span>        /* </span></span>
<span class="line"><span>         * 规则条件部分，又叫\`LHS\`（\`Left-Hand-Side\`，左手边）</span></span>
<span class="line"><span>         * 这里如果什么都不写，则默认满足规则条件（true），会接着执行then后面的\${RHS}</span></span>
<span class="line"><span>         */</span></span>
<span class="line"><span>        \${LHS}</span></span>
<span class="line"><span>    then</span></span>
<span class="line"><span>        /* </span></span>
<span class="line"><span>         * 规则操作部分，又叫\`RHS\`（\`Right-Hand-Side\`，右手边）</span></span>
<span class="line"><span>         * Drools支持几种常见的操作：modify、update、insert、insertLogical和delete</span></span>
<span class="line"><span>         * 也可以在这里写Java业务代码</span></span>
<span class="line"><span>         */</span></span>
<span class="line"><span>        \${RHS}</span></span>
<span class="line"><span>end</span></span>
<span class="line"><span></span></span>
<span class="line"><span>rule &quot;rule2 name&quot;</span></span>
<span class="line"><span>    \${ATTRIBUTES}</span></span>
<span class="line"><span>    when</span></span>
<span class="line"><span>        // 同上</span></span>
<span class="line"><span>    then</span></span>
<span class="line"><span>        // 同上</span></span>
<span class="line"><span>end</span></span>
<span class="line"><span></span></span>
<span class="line"><span>......</span></span>
<span class="line"><span></span></span>
<span class="line"><span>rule &quot;rulex name&quot;</span></span>
<span class="line"><span>    \${ATTRIBUTES}</span></span>
<span class="line"><span>    when</span></span>
<span class="line"><span>        // 同上</span></span>
<span class="line"><span>    then</span></span>
<span class="line"><span>        // 同上</span></span>
<span class="line"><span>end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这些<code>条件</code>、<code>操作</code>和<code>属性</code>分别在以下地方做了详细说明。</p><ul><li><p><a href="https://docs.drools.org/6.5.0.Final/drools-docs/html_single/#d0e9456" target="_blank" rel="noopener noreferrer">DRL中的规则条件</a>。</p></li><li><p><a href="https://docs.drools.org/6.5.0.Final/drools-docs/html_single/#d0e11687" target="_blank" rel="noopener noreferrer">DRL中的规则操作</a>。</p></li><li><p><a href="https://docs.drools.org/6.5.0.Final/drools-docs/html_single/#d0e9196" target="_blank" rel="noopener noreferrer">DRL中的规则属性</a>。</p></li></ul><figure><img src="https://tianmazuo.com/technology/programming/drools-03.png" alt="rule中可用的属性" tabindex="0" loading="lazy"><figcaption>rule中可用的属性</figcaption></figure><p>例如，下面的<code>.drl</code>文件就定义了一个<code>当消费金额小于100元时不增加积分</code>的业务规则。</p><div class="language-drl line-numbers-mode" data-highlighter="shiki" data-ext="drl" data-title="drl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>rule &quot;point0&quot;</span></span>
<span class="line"><span>    /*</span></span>
<span class="line"><span>     * 下面都是规则属性</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    // 非循环执行</span></span>
<span class="line"><span>    no-loop false</span></span>
<span class="line"><span>    // 加强no-loop，避免当前的规则被反复执行</span></span>
<span class="line"><span>    lock-on-active true</span></span>
<span class="line"><span>    // 设置规则执行的优先级，数字越大优先级越高，规则少时可以不写</span></span>
<span class="line"><span>    salience 1</span></span>
<span class="line"><span>    // 下面还可以追加更多规则属性</span></span>
<span class="line"><span>    // ......</span></span>
<span class="line"><span>    when</span></span>
<span class="line"><span>        /*</span></span>
<span class="line"><span>         * 规则条件部分</span></span>
<span class="line"><span>         */</span></span>
<span class="line"><span>        // 定义一个类型为Coupon的变量$coupon，并创建一个buyMoney小于100时的规则条件</span></span>
<span class="line"><span>        $coupon : Coupon(buyMoney &lt;= 100)</span></span>
<span class="line"><span>    then</span></span>
<span class="line"><span>        /*</span></span>
<span class="line"><span>         * 规则操作部分</span></span>
<span class="line"><span>         */</span></span>
<span class="line"><span>        // 在上面的规则条件下所要执行的规则操作</span></span>
<span class="line"><span>        // 更新对象的属性值</span></span>
<span class="line"><span>        $coupon.setPoint(0);</span></span>
<span class="line"><span>        update($coupon);</span></span>
<span class="line"><span>end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的这个小栗子中使用了<code>update()</code>操作方法。事实上，<a href="https://www.drools.org/" target="_blank" rel="noopener noreferrer">Drools</a>中支持的操作方法包括下面几个。</p><table><thead><tr><th style="text-align:center;">操作方法</th><th style="text-align:left;">说明</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:center;">modify</td><td style="text-align:left;">修改指定的数据（推荐用这个）</td><td style="text-align:left;">modify($coupon) {<br>    setPoint(0),<br>    setApproved(true)<br>}<br></td></tr><tr><td style="text-align:center;">update</td><td style="text-align:left;">更新指定的数据。从官方的解释来看，它和modify的区别在于：modify是立即更新，而update是延迟更新。但从实际使用效果来看，好像没有什么区别（真想知道区别，还是要看源码）</td><td style="text-align:left;">$coupon.setPoint(0);<br>update($coupon);</td></tr><tr><td style="text-align:center;">insert</td><td style="text-align:left;">创建一个新对象</td><td style="text-align:left;">insert(new Coupon());</td></tr><tr><td style="text-align:center;">insertLogical</td><td style="text-align:left;">在逻辑上创建一个新对象，类似于数据库中的逻辑删除而非物理删除功能。它会根据规则条件来决定是否撤回插入操作，也就是条件成立就插入，不成立就撤回</td><td style="text-align:left;">$p : Person(age &lt; 16);<br>insertLogical(new IsChild($p));</td></tr><tr><td style="text-align:center;">delete</td><td style="text-align:left;">从内存中删除某个对象的数据</td><td style="text-align:left;">delete($coupon);</td></tr></tbody></table><br><h2 id="package和import" tabindex="-1"><a class="header-anchor" href="#package和import"><span>package和import</span></a></h2><p><a href="https://www.drools.org/" target="_blank" rel="noopener noreferrer">Drools</a>中的<code>package</code>与<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>中的<code>package</code>类似，但不同的是，<a href="https://www.drools.org/" target="_blank" rel="noopener noreferrer">Drools</a>中的<code>package</code>更多是一种逻辑上的集合，而与文件所在的物理位置无关。也就是说，只要<code>package</code>名称一样，即使不在同一个<code>.drl</code>文件里的规则也能拿过来用。</p><p><code>import</code>是将<a href="https://www.drools.org/" target="_blank" rel="noopener noreferrer">Drools</a>需要用到的类从<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>项目中导入进来，这一点和<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>中的<code>import</code>一致。</p><div class="language-drl line-numbers-mode" data-highlighter="shiki" data-ext="drl" data-title="drl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package org.drools.examples.fire.simple;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import org.drools.examples.fire.User;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="global" tabindex="-1"><a class="header-anchor" href="#global"><span>global</span></a></h2><p><a href="https://docs.drools.org/6.5.0.Final/drools-docs/html_single/#d0e8135" target="_blank" rel="noopener noreferrer">global</a>用于定义全局变量，它可以用于在多个不同的<code>rule</code>之间传递数据（而非共享数据）。</p><p>修改官方样例文件<a href="https://github.com/kiegroup/drools/blob/main/drools-examples/src/main/resources/org/drools/examples/fire/simple/Fire.drl" target="_blank" rel="noopener noreferrer">Fire.drl</a>，看看<a href="https://docs.drools.org/6.5.0.Final/drools-docs/html_single/#d0e8135" target="_blank" rel="noopener noreferrer">global</a>到底有什么用。</p><div class="language-drl line-numbers-mode" data-highlighter="shiki" data-ext="drl" data-title="drl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package org.drools.examples.fire.simple;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import org.drools.examples.fire.User;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 定义包装类型的全局变量</span></span>
<span class="line"><span>global java.lang.Integer count;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 定义集合类型的全局变量</span></span>
<span class="line"><span>global java.util.List list;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 定义JavaBean类型的全局变量</span></span>
<span class="line"><span>global User user;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 规则1</span></span>
<span class="line"><span>rule &quot;test1&quot;</span></span>
<span class="line"><span>when</span></span>
<span class="line"><span>    $user : User(name == &quot;nobody&quot;);</span></span>
<span class="line"><span>then</span></span>
<span class="line"><span>    // 包装类型只对当前规则有效，其他规则不受影响</span></span>
<span class="line"><span>    count += 1;</span></span>
<span class="line"><span>    System.out.println(&quot;test1 count = &quot; + count);</span></span>
<span class="line"><span>    // 修改集合类型的全局变量，所有规则都受影响</span></span>
<span class="line"><span>    list.add(&quot;drools&quot;);</span></span>
<span class="line"><span>    for(Object value : list) {</span></span>
<span class="line"><span>        System.out.println(&quot;test1 =&gt; &quot; + value);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    // JavaBean未修改之前的值</span></span>
<span class="line"><span>    System.out.println(&quot;test1 before $user =&gt; &quot; + $user.getName());</span></span>
<span class="line"><span>    System.out.println(&quot;test1 before $user =&gt; &quot; + $user.getAge());</span></span>
<span class="line"><span>    // 修改JavaBean类型的全局变量，所有规则都受影响</span></span>
<span class="line"><span>    $user.setName(&quot;lixingyun&quot;);</span></span>
<span class="line"><span>    $user.setAge(22);</span></span>
<span class="line"><span>    update($user);</span></span>
<span class="line"><span>    // JavaBean修改之后的值</span></span>
<span class="line"><span>    System.out.println(&quot;test1 after $user =&gt; &quot; + $user.getName());</span></span>
<span class="line"><span>    System.out.println(&quot;test1 after $user =&gt; &quot; + $user.getAge());</span></span>
<span class="line"><span>    System.out.println();</span></span>
<span class="line"><span>    System.out.println(&quot;======================&quot;);</span></span>
<span class="line"><span>    System.out.println();</span></span>
<span class="line"><span>    //modify($user) {</span></span>
<span class="line"><span>    //    setName(&quot;lixingyun&quot;),</span></span>
<span class="line"><span>    //    setAge(22)</span></span>
<span class="line"><span>    //}</span></span>
<span class="line"><span>end</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 规则2</span></span>
<span class="line"><span>rule &quot;test2&quot;</span></span>
<span class="line"><span>when</span></span>
<span class="line"><span>    // 匹配test1修改后的JavaBean的值</span></span>
<span class="line"><span>    $user : User(name == &quot;lixingyun&quot;);</span></span>
<span class="line"><span>then</span></span>
<span class="line"><span>    // 包装类型只对当前规则有效，其他规则不受影响</span></span>
<span class="line"><span>    count -= 1;</span></span>
<span class="line"><span>    System.out.println(&quot;test2 count = &quot; + count);</span></span>
<span class="line"><span>    // 修改集合类型的全局变量，所有规则都受影响</span></span>
<span class="line"><span>    System.out.println(&quot;遍历修改后的集合list&quot;);</span></span>
<span class="line"><span>    for(Object value : list) {</span></span>
<span class="line"><span>        System.out.println(&quot;test2 =&gt; &quot; + value);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    // 修改JavaBean类型的全局变量，所有规则都受影响</span></span>
<span class="line"><span>    System.out.println(&quot;test2 $user =&gt; &quot; + $user.getName());</span></span>
<span class="line"><span>    System.out.println(&quot;test2 $user =&gt; &quot; + $user.getAge());</span></span>
<span class="line"><span>end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改官方样例代码<a href="https://github.com/kiegroup/drools/blob/main/drools-examples/src/main/java/org/drools/examples/fire/Fire.java" target="_blank" rel="noopener noreferrer">Fire.java</a>文件，对<code>.drl</code>文件中的规则进行解析。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> org.drools.examples.fire</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.kie.api.KieServices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.kie.api.runtime.KieContainer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.kie.api.runtime.KieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> java.util.ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> java.util.List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> * global的用法</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> * </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> FireExample</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;world&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        KieContainer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> kc</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> KieServices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Factory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getKieClasspathContainer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        KieSession</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> kieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> kc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">newKieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;DemoKS&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        kieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setGlobal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;count&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        kieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setGlobal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;list&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, list);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        User</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> User</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;nobody&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        kieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(user);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        kieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fireAllRules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行之后的输出结果已经非常清晰地说明了以下几点。</p><ul><li><p><code>包装类型只对当前规则有效，其他规则不受影响</code>：在<code>test1</code>中修改了<code>count</code>，但<code>test2</code>中的<code>count</code>仍然是初始值。</p></li><li><p><code>修改集合类型的全局变量，所有规则都受影响</code>：在<code>test1</code>中给<code>list</code>添加了新元素，在<code>test2</code>中可以遍历出来。</p></li><li><p><code>修改JavaBean类型的全局变量，所有规则都受影响</code>：当<code>test1</code>的条件被满足之后，它修改了<code>user</code>类的成员变量，并以此为条件来触发规则<code>test2</code>的执行，结果成功了。</p></li></ul><p>全局变量独立于规则，官方不推荐拿它当共享变量用，除非把它设置成一个常量值。</p><br><h2 id="declare" tabindex="-1"><a class="header-anchor" href="#declare"><span>declare</span></a></h2><p>可以在<code>.drl</code>文件中声明新的类和枚举，也支持使用<code>extends</code>关键字进行继承。</p><p>修改官方样例文件<a href="https://github.com/kiegroup/drools/blob/main/drools-examples/src/main/resources/org/drools/examples/fire/simple/Fire.drl" target="_blank" rel="noopener noreferrer">Fire.drl</a>，将它拆分为两个文件：<code>Fire1.drl</code>和<code>Fire2.drl</code>。</p><p>一是看看<a href="https://docs.drools.org/6.5.0.Final/drools-docs/html_single/#d0e8240" target="_blank" rel="noopener noreferrer">declare</a>怎么用，二是顺便验证前面的结论<code>即使不在同一个.drl文件里的规则也能拿过来用</code>。</p><p><code>Fire1.drl</code>文件的内容如下。</p><div class="language-drl line-numbers-mode" data-highlighter="shiki" data-ext="drl" data-title="drl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package org.drools.examples.fire.simple;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import java.util.Date;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 声明父类型</span></span>
<span class="line"><span>declare Person</span></span>
<span class="line"><span>    name : String</span></span>
<span class="line"><span>    age  : int</span></span>
<span class="line"><span>end</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 声明成员变量的类型</span></span>
<span class="line"><span>declare Address</span></span>
<span class="line"><span>    province  : String</span></span>
<span class="line"><span>    city : String</span></span>
<span class="line"><span>end</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 声明子类型</span></span>
<span class="line"><span>declare User extends Person</span></span>
<span class="line"><span>    name : String</span></span>
<span class="line"><span>    age  : int</span></span>
<span class="line"><span>    birthday : Date</span></span>
<span class="line"><span>    address : Address</span></span>
<span class="line"><span>end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Fire2.drl</code>文件的内容如下。</p><div class="language-drl line-numbers-mode" data-highlighter="shiki" data-ext="drl" data-title="drl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package org.drools.examples.fire.simple;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>rule &quot;test declare class&quot;</span></span>
<span class="line"><span>when</span></span>
<span class="line"><span>    $user : User(name == &quot;lixingyun&quot;);</span></span>
<span class="line"><span>then</span></span>
<span class="line"><span>    System.out.println($user.getName());</span></span>
<span class="line"><span>    System.out.println($user.getAge());</span></span>
<span class="line"><span>    System.out.println($user.getBirthday());</span></span>
<span class="line"><span>    System.out.println($user.getAddress());</span></span>
<span class="line"><span>end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再修改官方样例代码<a href="https://github.com/kiegroup/drools/blob/main/drools-examples/src/main/java/org/drools/examples/fire/Fire.java" target="_blank" rel="noopener noreferrer">Fire.java</a>文件，对<code>Fire1.drl</code>和<code>Fire2.drl</code>文件中的规则进行解析。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> org.drools.examples.fire</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.kie.api.KieBase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.kie.api.KieBaseConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.kie.api.KieServices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.kie.api.definition.type.FactType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.kie.api.runtime.KieContainer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.kie.api.runtime.KieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> java.util.Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> * declare的用法</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> * </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> FireExample</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> InstantiationException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> IllegalAccessException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        KieContainer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> kc</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> KieServices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Factory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getKieClasspathContainer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        KieBaseConfiguration</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> conf</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> KieServices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Factory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">newKieBaseConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        KieBase</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> kbase</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> kc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">newKieBase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;DemoKB&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, conf);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        KieSession</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> kieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> kc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">newKieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;DemoKS&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // 解析在.drl文件中声明类型</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        FactType</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> personType</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> kbase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getFactType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;org.drools.examples.fire.simple&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Person&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> );</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        FactType</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> addressType</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> kbase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getFactType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;org.drools.examples.fire.simple&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Address&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> );</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        FactType</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> userType</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> kbase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getFactType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;org.drools.examples.fire.simple&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;User&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // 实例化类型</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        Object</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> userType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">newInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        Object</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> address</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> addressType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">newInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        addressType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(address, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;province&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hubei&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        addressType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(address, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;city&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;wuhan&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        userType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(user, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lixingyun&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        userType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(user, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;age&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        userType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(user, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;birthday&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        userType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(user, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;address&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, address);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        kieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(user);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        kieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fireAllRules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="decision-table" tabindex="-1"><a class="header-anchor" href="#decision-table"><span>decision table</span></a></h2><p>所谓<a href="https://docs.drools.org/6.5.0.Final/drools-docs/html_single/#d0e5713" target="_blank" rel="noopener noreferrer">Decision Table（决策表）</a>无非就是<code>Excel电子表格</code>形式的<code>rule</code>规则文件而已。</p><p>这里还是将之前官方的代码再修改一下，来看看这个<code>决策表</code>该怎么用。</p><p>先创建了一个<code>Coupon</code>类。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> org.drools.examples.fire</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> * 无门槛优惠券</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 优惠券金额</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> point</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 当月消费总金额</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> buyMoney</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> point</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> buyMoney</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">point</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> point;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">buyMoney</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> buyMoney;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> point;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> setPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> point</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">point</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> point;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getBuyMoney</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> buyMoney;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> setBuyMoney</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> buyMoney</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">buyMoney</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> buyMoney;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后新建一个<code>Excel文件</code>，其中的内容如下。</p><figure><img src="https://tianmazuo.com/technology/programming/drools-04.png" alt="Decision Table（决策表）的Excel文件内容" tabindex="0" loading="lazy"><figcaption>Decision Table（决策表）的Excel文件内容</figcaption></figure><p>最后再修改官方样例代码<a href="https://github.com/kiegroup/drools/blob/main/drools-examples/src/main/java/org/drools/examples/fire/Fire.java" target="_blank" rel="noopener noreferrer">Fire.java</a>文件。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> org.drools.examples.fire</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.drools.decisiontable.InputType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.drools.decisiontable.SpreadsheetCompiler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.kie.api.io.ResourceType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.kie.api.runtime.StatelessKieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.kie.internal.utils.KieHelper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> java.io.File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> java.io.FileInputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> java.io.FileNotFoundException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> java.io.InputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> * 决策表</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> FireExample</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> load</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> filePathName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        File</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(filePathName);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        InputStream</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> is</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            is </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> FileInputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(file);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">FileNotFoundException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        SpreadsheetCompiler</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> compiler</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> SpreadsheetCompiler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> drl</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> compiler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">compile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(is, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">InputType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">XLS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // 将加载的决策表Excel文件内容转换为DRL内容后再打印出来</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // System.out.println(drl);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        KieHelper</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> kieHelper</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> KieHelper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        kieHelper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addContent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(drl, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ResourceType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">DRL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        StatelessKieSession</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> kieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> kieHelper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">newStatelessKieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        Coupon</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">900</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        kieSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">execute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(coupon);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;订单积分增加了 &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> coupon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot; 分&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> InstantiationException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> IllegalAccessException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> load</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/Users/bear/Downloads/decision_table.xlsx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(result);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只要把能把上面这些基于<code>rule</code>的内容都搞清楚（尤其是<a href="https://docs.drools.org/6.5.0.Final/drools-docs/html_single/#d0e9456" target="_blank" rel="noopener noreferrer">规则条件</a>、<a href="https://docs.drools.org/6.5.0.Final/drools-docs/html_single/#d0e11687" target="_blank" rel="noopener noreferrer">规则操作</a>和<a href="https://docs.drools.org/6.5.0.Final/drools-docs/html_single/#d0e9196" target="_blank" rel="noopener noreferrer">规则属性</a>这三个非常核心的东西），<a href="https://www.drools.org/" target="_blank" rel="noopener noreferrer">Drools</a>就基本上是够用了，不用搞得那么复杂。</p><p>至于像什么<a href="https://docs.drools.org/6.5.0.Final/drools-docs/html_single/#d0e12041" target="_blank" rel="noopener noreferrer">Domain Specific Languages（领域特定语言）</a>、<a href="https://docs.drools.org/6.5.0.Final/drools-docs/html_single/#DroolsComplexEventProcessingChapter" target="_blank" rel="noopener noreferrer">Complex Event Processing（复杂事件处理）</a>之类的功能，在业务复杂度较高的场景中，根本就用不上。</p><p>这是因为每种语言都有自己独特的适用范围和业务场景，此时的<a href="https://www.drools.org/" target="_blank" rel="noopener noreferrer">Drools</a>极有可能会被<code>大数据</code> + <code>脚本引擎</code>的组合所取代，具体来说就是<a href="https://www.clickhouse.com/" target="_blank" rel="noopener noreferrer">Clickhouse</a> + <a href="https://nightlies.apache.org/flink/flink-docs-master/docs/dev/datastream/overview/" target="_blank" rel="noopener noreferrer">Flink Streaming</a> + <a href="https://nightlies.apache.org/flink/flink-docs-master/docs/dev/datastream/overview/" target="_blank" rel="noopener noreferrer">Flink SQL</a> + <a href="https://nightlies.apache.org/flink/flink-docs-master/docs/libs/cep/" target="_blank" rel="noopener noreferrer">Flink CEP</a> + <a href="https://groovy-lang.org/" target="_blank" rel="noopener noreferrer">Groovy</a>（或<a href="https://code.google.com/archive/p/aviator/" target="_blank" rel="noopener noreferrer">Aviator</a>）的组合。</p>`,76),o=i("code",null,"rule",-1),c=i("code",null,"《第12章 规则引擎与风控系统》",-1),g=i("a",{href:"https://www.drools.org/",target:"_blank",rel:"noopener noreferrer"},"Drools",-1),A=i("code",null,"rule",-1);function B(v,y){const a=l("RouteLink");return r(),e("div",null,[d,i("p",null,[s("关于"),o,s("更多的内容，可以参考我写的"),p(a,{to:"/book/second.html"},{default:t(()=>[s("《Java深度探索：开发基础、高级技术与工程实践》")]),_:1}),s("中"),c,s("的内容，这一章用了相当的篇幅专门来谈"),g,s("中的"),A,s("实战开发。")])])}const b=n(k,[["render",B],["__file","drools.html.vue"]]),F=JSON.parse('{"path":"/technology/programming/drools.html","title":"Drools规则引擎","lang":"zh-CN","frontmatter":{"title":"Drools规则引擎","icon":"spaghetti-monster-flying","category":["编程语言","Drools"],"tag":["编程语言","Drools"],"date":"2022-11-27T00:00:00.000Z","isOriginal":true,"star":true,"description":"Drools概述 Drools是一款用Java开发出来的实现业务规则管理系统（BRMS）的软件工具，但凡需要将业务与代码解耦的地方，都可以用到它，而且开发简单、维护方便。 下面是一段针对当月退货总金额的优惠券扣减规则的Java代码。 这段代码先不说它是否正确，光是看看由这些if...elas组成的面条式代码，就够让人头疼的了。 而且随着业务需求的变化，...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/programming/drools.html"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"Drools规则引擎"}],["meta",{"property":"og:description","content":"Drools概述 Drools是一款用Java开发出来的实现业务规则管理系统（BRMS）的软件工具，但凡需要将业务与代码解耦的地方，都可以用到它，而且开发简单、维护方便。 下面是一段针对当月退货总金额的优惠券扣减规则的Java代码。 这段代码先不说它是否正确，光是看看由这些if...elas组成的面条式代码，就够让人头疼的了。 而且随着业务需求的变化，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/technology/programming/drools-01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"编程语言"}],["meta",{"property":"article:tag","content":"Drools"}],["meta",{"property":"article:published_time","content":"2022-11-27T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Drools规则引擎\\",\\"image\\":[\\"https://tianmazuo.com/technology/programming/drools-01.png\\",\\"https://tianmazuo.com/technology/programming/drools-02.png\\",\\"https://tianmazuo.com/technology/programming/drools-03.png\\",\\"https://tianmazuo.com/technology/programming/drools-04.png\\"],\\"datePublished\\":\\"2022-11-27T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[{"level":2,"title":"Drools概述","slug":"drools概述","link":"#drools概述","children":[]},{"level":2,"title":"工作机制","slug":"工作机制","link":"#工作机制","children":[{"level":3,"title":"引擎组件","slug":"引擎组件","link":"#引擎组件","children":[]},{"level":3,"title":"执行过程","slug":"执行过程","link":"#执行过程","children":[]}]},{"level":2,"title":"规则文件","slug":"规则文件","link":"#规则文件","children":[]},{"level":2,"title":"package和import","slug":"package和import","link":"#package和import","children":[]},{"level":2,"title":"global","slug":"global","link":"#global","children":[]},{"level":2,"title":"declare","slug":"declare","link":"#declare","children":[]},{"level":2,"title":"decision table","slug":"decision-table","link":"#decision-table","children":[]}],"git":{},"readingTime":{"minutes":12.52,"words":3755},"filePathRelative":"technology/programming/drools.md","localizedDate":"2022年11月27日","excerpt":"<h2>Drools概述</h2>\\n<p><a href=\\"https://www.drools.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Drools</a>是一款用<a href=\\"https://www.oracle.com/java/technologies/downloads/archive/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Java</a>开发出来的实现<a href=\\"https://en.wikipedia.org/wiki/Business_rule_management_system\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">业务规则管理系统（BRMS）</a>的软件工具，但凡需要将业务与代码解耦的地方，都可以用到它，而且开发简单、维护方便。</p>","autoDesc":true}');export{b as comp,F as data};
