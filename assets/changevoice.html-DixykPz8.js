import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,c as h,b as e,a as i,e as s,w as k,d as n,o as r}from"./app-B5m7CcSj.js";const c={},o=n(`<h2 id="软件变声" tabindex="-1"><a class="header-anchor" href="#软件变声"><span>软件变声</span></a></h2><p>要说到音视频方面的应用，不得不提起老牌的<a href="https://www.ffmpeg.org/" target="_blank" rel="noopener noreferrer">ffmpeg</a>——这绝对是多媒体领域泰山北斗一般的存在，几乎所有和音视频处理相关的软件都离不开它的支持。</p><p>大多数的音视频播放、处理软件其实都是对它的功能的封装。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 抽取音频命令</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ffmpeg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test.mp4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -vn</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -acodec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> copy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> result.aac</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ffmpeg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test.mp4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -vn</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -acodec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> copy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> result.m4a</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 提取视频 （Extract Video）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ffmpeg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test.mkv</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -vcodec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> copy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> –an</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test.mp4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 音视频合成命令</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ffmpeg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> video.avi</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> audio.mp3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -vcodec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> copy</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -acodec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> copy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> output.avi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># ffmpeg分离出PCM数据</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ffmpeg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test.mp4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ar</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 44100</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ac</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> s16le</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> output.pcm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># ffmpeg去除视频水印</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># -vf delogo 表示使用ffmpeg中去水印的滤镜</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># x=?:y=?:w=?:h=?:show=? 表示delogo滤镜的参数</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># x,y 表示去除水印范围在视频中的起始坐标，w,h表示所选的区域的宽高，show表示是否显示矩形框，0表示不显示，1表示显示</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ffmpeg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test.mp4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -vf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> delogo=x=?:y=?:w=?:h=?:show=?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> out.mp4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<a href="https://en.wikipedia.org/wiki/Artificial_intelligence" target="_blank" rel="noopener noreferrer">AI</a>流行之前，音频方面的应用就已经出现了，有些是专业的音轨提取工具，但对非专业人士有着不小的门槛。</p><p>其中对普通人比较友好而且开源免费的当属<a href="https://github.com/deezer/spleeter" target="_blank" rel="noopener noreferrer">spleeter</a>，它也对ffmpeg做了封装，但实现了更多功能的扩展。</p><p>按照官方的步骤，安装好之后，通过命令行实现人声分离。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">spleeter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> separate</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> spleeter:2stems</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> D:/vocals/output</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> D:/vocals/01.mp3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://tianmazuo.com/application/ai/changevoice-spleeter-01.png" alt="通过spleeter命令行实现人声分离" tabindex="0" loading="lazy"><figcaption>通过spleeter命令行实现人声分离</figcaption></figure><div class="hint-container info"><p class="hint-container-title">注意</p><p>执行spleeter命令时，需要在预训练模型所在的同级目录中执行。上图中的预训练模型 <strong><mark>文件夹</mark></strong> <code>D:\\vocals\\pretrained_models</code>就在目录<code>D:\\vocals</code>中，否则会提示执行失败。</p><p>这也是我踩过的一个坑，官方没有提到这一点😢，让人折腾了好久。</p></div><p>除了命令行的方式，<a href="https://github.com/deezer/spleeter" target="_blank" rel="noopener noreferrer">spleeter</a>还有图形化的界面，下载地址在文末。</p><br><h2 id="ai模型" tabindex="-1"><a class="header-anchor" href="#ai模型"><span>AI模型</span></a></h2><p>除了人声分离，另外的一个需求就是创造出独特的音色，或者将一种音色变成另外一种音色。例如，将我说的话变成小岳岳的声音，或者夹子音，或者琵琶音。</p><p>对这类需求，<a href="https://github.com/deezer/spleeter" target="_blank" rel="noopener noreferrer">spleeter</a>就无能为力了。</p><p>可以借助<a href="https://github.com/RVC-Project/Retrieval-based-Voice-Conversion-WebUI" target="_blank" rel="noopener noreferrer">Retrieval-based-Voice-Conversion-WebUI</a>这款开源<a href="https://en.wikipedia.org/wiki/Artificial_intelligence" target="_blank" rel="noopener noreferrer">AI</a>变声器来实现。</p><p>它上手还是比较容易的，非常傻瓜化。按照官方的提示先做一下声音的训练。</p><p>这里我用的也是谭雅的音效，文末有下载。</p><figure><img src="https://tianmazuo.com/application/ai/changevoice-rvc-webui-01.png" alt="根据官方指南尝试训练" tabindex="0" loading="lazy"><figcaption>根据官方指南尝试训练</figcaption></figure><p>但奈何硬件已经跟不上软件的步伐了，主要是GPU不给力😢。</p><figure><img src="https://tianmazuo.com/application/ai/changevoice-rvc-webui-02.png" alt="奈何硬件不给力" tabindex="0" loading="lazy"><figcaption>奈何硬件不给力</figcaption></figure><p>没办法，只好尝试做一下人声分离，这个倒是成功了。它的分离效果和<a href="https://github.com/deezer/spleeter" target="_blank" rel="noopener noreferrer">spleeter</a>几乎完全一样。</p><figure><img src="https://tianmazuo.com/application/ai/changevoice-rvc-webui-03.png" alt="分离人声" tabindex="0" loading="lazy"><figcaption>分离人声</figcaption></figure><p>人声分离后的效果。</p>`,24),d=i("br",null,null,-1),g=i("h2",{id:"剪辑工具",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#剪辑工具"},[i("span",null,"剪辑工具")])],-1),y=i("a",{href:"https://www.capcut.cn/",target:"_blank",rel:"noopener noreferrer"},"剪映",-1),m=n('<p>只需要录制10秒钟，就能生成自己专属的语音包（例句是随机生成的）。</p><div style="text-align:center;"><p><img src="https://tianmazuo.com/application/ai/changevoice-clone-01.png" alt="录制10秒钟" loading="lazy"> <img src="https://tianmazuo.com/application/ai/changevoice-clone-02.png" alt="朗读例句" loading="lazy"></p></div><p>克隆出来的声音，不仅可以说中文，还能说英文。</p><div style="text-align:center;"><p><img src="https://tianmazuo.com/application/ai/changevoice-clone-03.png" alt="生成中" loading="lazy"> <img src="https://tianmazuo.com/application/ai/changevoice-clone-04.png" alt="不仅可以说中文，还能说英文" loading="lazy"></p></div><p>最后就可以用它来生成文本的朗读声音了。</p><figure><img src="https://tianmazuo.com/application/ai/changevoice-clone-05.png" alt="专属语音包" tabindex="0" loading="lazy"><figcaption>专属语音包</figcaption></figure><p>唯一遗憾的是不能实现变音效果。</p>',7);function A(v,f){const t=a("BiliBili"),l=a("RouteLink");return r(),h("div",null,[o,e(t,{bvid:"BV1Wi421y7bu"}),d,g,i("p",null,[s("之前在"),e(l,{to:"/application/ai/t2s.html#%E5%89%AA%E6%98%A0"},{default:k(()=>[s("文生音频")]),_:1}),s("中提到过"),y,s("有声音克隆的功能，这个也算是一种声音工具吧。")]),m])}const b=p(c,[["render",A],["__file","changevoice.html.vue"]]),C=JSON.parse('{"path":"/application/ai/changevoice.html","title":"变声","lang":"zh-CN","frontmatter":{"title":"变声","icon":"microphone","category":["应用","U-AIGC"],"tag":["应用","U-AIGC","AI音频","变声"],"date":"2024-01-07T00:00:00.000Z","isOriginal":true,"star":true,"description":"软件变声 要说到音视频方面的应用，不得不提起老牌的ffmpeg——这绝对是多媒体领域泰山北斗一般的存在，几乎所有和音视频处理相关的软件都离不开它的支持。 大多数的音视频播放、处理软件其实都是对它的功能的封装。 在AI流行之前，音频方面的应用就已经出现了，有些是专业的音轨提取工具，但对非专业人士有着不小的门槛。 其中对普通人比较友好而且开源免费的当属sp...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/application/ai/changevoice.html"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"变声"}],["meta",{"property":"og:description","content":"软件变声 要说到音视频方面的应用，不得不提起老牌的ffmpeg——这绝对是多媒体领域泰山北斗一般的存在，几乎所有和音视频处理相关的软件都离不开它的支持。 大多数的音视频播放、处理软件其实都是对它的功能的封装。 在AI流行之前，音频方面的应用就已经出现了，有些是专业的音轨提取工具，但对非专业人士有着不小的门槛。 其中对普通人比较友好而且开源免费的当属sp..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/application/ai/changevoice-spleeter-01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"应用"}],["meta",{"property":"article:tag","content":"U-AIGC"}],["meta",{"property":"article:tag","content":"AI音频"}],["meta",{"property":"article:tag","content":"变声"}],["meta",{"property":"article:published_time","content":"2024-01-07T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"变声\\",\\"image\\":[\\"https://tianmazuo.com/application/ai/changevoice-spleeter-01.png\\",\\"https://tianmazuo.com/application/ai/changevoice-rvc-webui-01.png\\",\\"https://tianmazuo.com/application/ai/changevoice-rvc-webui-02.png\\",\\"https://tianmazuo.com/application/ai/changevoice-rvc-webui-03.png\\",\\"https://tianmazuo.com/application/ai/changevoice-clone-01.png\\",\\"https://tianmazuo.com/application/ai/changevoice-clone-02.png\\",\\"https://tianmazuo.com/application/ai/changevoice-clone-03.png\\",\\"https://tianmazuo.com/application/ai/changevoice-clone-04.png\\",\\"https://tianmazuo.com/application/ai/changevoice-clone-05.png\\"],\\"datePublished\\":\\"2024-01-07T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[{"level":2,"title":"软件变声","slug":"软件变声","link":"#软件变声","children":[]},{"level":2,"title":"AI模型","slug":"ai模型","link":"#ai模型","children":[]},{"level":2,"title":"剪辑工具","slug":"剪辑工具","link":"#剪辑工具","children":[]}],"git":{},"readingTime":{"minutes":3.25,"words":976},"filePathRelative":"application/ai/changevoice.md","localizedDate":"2024年1月7日","excerpt":"<h2>软件变声</h2>\\n<p>要说到音视频方面的应用，不得不提起老牌的<a href=\\"https://www.ffmpeg.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ffmpeg</a>——这绝对是多媒体领域泰山北斗一般的存在，几乎所有和音视频处理相关的软件都离不开它的支持。</p>\\n<p>大多数的音视频播放、处理软件其实都是对它的功能的封装。</p>\\n<div class=\\"language-shell line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"># 抽取音频命令</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">ffmpeg</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -i</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> test.mp4</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -vn</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -y</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -acodec</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> copy</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> result.aac</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">ffmpeg</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -i</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> test.mp4</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -vn</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -y</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -acodec</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> copy</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> result.m4a</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"># 提取视频 （Extract Video）</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">ffmpeg</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -i</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> test.mkv</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -vcodec</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> copy</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> –an</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> test.mp4</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"># 音视频合成命令</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">ffmpeg</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -i</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> video.avi</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -i</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> audio.mp3</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -vcodec</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> copy</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -acodec</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> copy</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> output.avi</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"># ffmpeg分离出PCM数据</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">ffmpeg</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -i</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> test.mp4</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -ar</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 44100</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -ac</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 2</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -f</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> s16le</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> output.pcm</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"># ffmpeg去除视频水印</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"># -vf delogo 表示使用ffmpeg中去水印的滤镜</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"># x=?:y=?:w=?:h=?:show=? 表示delogo滤镜的参数</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"># x,y 表示去除水印范围在视频中的起始坐标，w,h表示所选的区域的宽高，show表示是否显示矩形框，0表示不显示，1表示显示</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">ffmpeg</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -i</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> test.mp4</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -vf</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> delogo=x=?:y=?:w=?:h=?:show=?</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> out.mp4</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{b as comp,C as data};
