import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as s,d as a}from"./app-B5m7CcSj.js";const t={},n=a(`<p><a href="https://www.mysql.com/" target="_blank" rel="noopener noreferrer">MySQL</a>固然强大，但在某些需求场景下却难于使用。</p><p>例如，如果用户通过验证码登录，那么单独创建一张存储手机号和验证码的表，然后用完之后或者隔一段时间验证码失效之后再把它删除。</p><p>再比如，在社交类型的应用中，最重要的两类数据就是<code>FOLLOW</code>和<code>BE FOLLOWED</code>，它们本质上就是一个用户名加上一个不断变化的粉丝数量而已。</p><p>类似这种<code>手机号 + 验证码</code>和<code>用户名 + 粉丝数量</code>的数据，在软件开发中有一个专有名词，称之为<code>键值对</code>，意思就是一个<code>键（用key表示）</code>跟着一个<code>数值（用value表示）</code>，形式是：<code>key:value</code>。</p><p>对于手机号的登录验证来说，每天可以产生无数个这样的键值对。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">13012345678</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">123456</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">13112345678</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">123456</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">13287654321</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">654321</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于某个用户来说，TA的粉丝数量也是不断变化着的。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">user9527</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">9528</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 涨粉了</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">user9527</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">9529</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 掉粉了</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">user9527</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">7788</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>类似这种应用场景，用<a href="https://www.mysql.com/" target="_blank" rel="noopener noreferrer">MySQL</a>不但麻烦，而且这种极为频繁的数据插入、更新和删除操作，也会对<a href="https://www.mysql.com/" target="_blank" rel="noopener noreferrer">MySQL</a>的性能造成很大的影响，进而影响其他的业务功能，例如用户下单或支付。</p><p>这种非核心业务拖累核心业务的情况，在任何公司都是不允许发生的。</p><p>所以就诞生了<a href="https://redis.io/" target="_blank" rel="noopener noreferrer">Redis</a>这么一个专门用来存储<code>键值对（key-value，有时也简写为kv）</code>的<a href="https://en.wikipedia.org/wiki/NoSQL" target="_blank" rel="noopener noreferrer">NoSQL</a>系统。</p><p><a href="https://en.wikipedia.org/wiki/NoSQL" target="_blank" rel="noopener noreferrer">NoSQL</a>是<code>Not Only SQL</code>的简写，意思是<code>不仅仅是SQL</code>，它是一种有别于传统<a href="https://cloud.google.com/learn/what-is-a-relational-database?hl=zh-cn" target="_blank" rel="noopener noreferrer">关系型数据库（RDBMS）</a>的新型数据存储技术。</p><p>它的很多特性都和<a href="https://cloud.google.com/learn/what-is-a-relational-database?hl=zh-cn" target="_blank" rel="noopener noreferrer">RDBMS</a>不同。</p><p>例如，对于验证码应用来说，它不需要手动去删除里面存储的大量验证码，而是可以设定一个过期时间，实现自动删除失效数据。</p><p>这就极大地减轻了<a href="https://www.mysql.com/" target="_blank" rel="noopener noreferrer">MySQL</a>的负担，现在，它只需要关注核心业务数据的读取和存储就行了。</p>`,15),r=[n];function l(o,p){return s(),i("div",null,r)}const c=e(t,[["render",l],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/technology/middleware/","title":"什么是Redis？","lang":"zh-CN","frontmatter":{"title":"什么是Redis？","icon":"key","category":["中间件","Redis"],"tag":["中间件","Redis"],"date":"2023-01-08T00:00:00.000Z","isOriginal":true,"star":true,"description":"MySQL固然强大，但在某些需求场景下却难于使用。 例如，如果用户通过验证码登录，那么单独创建一张存储手机号和验证码的表，然后用完之后或者隔一段时间验证码失效之后再把它删除。 再比如，在社交类型的应用中，最重要的两类数据就是FOLLOW和BE FOLLOWED，它们本质上就是一个用户名加上一个不断变化的粉丝数量而已。 类似这种手机号 + 验证码和用户名...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/middleware/"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"什么是Redis？"}],["meta",{"property":"og:description","content":"MySQL固然强大，但在某些需求场景下却难于使用。 例如，如果用户通过验证码登录，那么单独创建一张存储手机号和验证码的表，然后用完之后或者隔一段时间验证码失效之后再把它删除。 再比如，在社交类型的应用中，最重要的两类数据就是FOLLOW和BE FOLLOWED，它们本质上就是一个用户名加上一个不断变化的粉丝数量而已。 类似这种手机号 + 验证码和用户名..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"中间件"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2023-01-08T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"什么是Redis？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-08T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":1.98,"words":594},"filePathRelative":"technology/middleware/README.md","localizedDate":"2023年1月8日","excerpt":"<p><a href=\\"https://www.mysql.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">MySQL</a>固然强大，但在某些需求场景下却难于使用。</p>\\n<p>例如，如果用户通过验证码登录，那么单独创建一张存储手机号和验证码的表，然后用完之后或者隔一段时间验证码失效之后再把它删除。</p>\\n<p>再比如，在社交类型的应用中，最重要的两类数据就是<code>FOLLOW</code>和<code>BE FOLLOWED</code>，它们本质上就是一个用户名加上一个不断变化的粉丝数量而已。</p>\\n<p>类似这种<code>手机号 + 验证码</code>和<code>用户名 + 粉丝数量</code>的数据，在软件开发中有一个专有名词，称之为<code>键值对</code>，意思就是一个<code>键（用key表示）</code>跟着一个<code>数值（用value表示）</code>，形式是：<code>key:value</code>。</p>","autoDesc":true}');export{c as comp,k as data};
