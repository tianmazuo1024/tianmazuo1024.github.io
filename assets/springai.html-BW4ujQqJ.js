import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,d as n}from"./app-B5m7CcSj.js";const e={},t=n(`<h2 id="什么是spring-ai" tabindex="-1"><a class="header-anchor" href="#什么是spring-ai"><span>什么是Spring AI</span></a></h2><p><a href="https://spring.io/projects/spring-ai" target="_blank" rel="noopener noreferrer">Spring AI</a>是一款用于<code>AI工程</code>的应用框架，就是把现在开发中的<a href="https://baike.baidu.com/item/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84" target="_blank" rel="noopener noreferrer">三层架构</a>或<a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller" target="_blank" rel="noopener noreferrer">MVC</a>中的那一套搬到<a href="https://en.wikipedia.org/wiki/Artificial_intelligence" target="_blank" rel="noopener noreferrer">AI</a>里面去。</p><p><a href="https://spring.io/projects/spring-ai" target="_blank" rel="noopener noreferrer">Spring AI</a>目前支持的功能包括下面一些。</p><ul><li><p>支持主流的模型提供商，例如，<a href="https://openai.com/index/dall-e-3" target="_blank" rel="noopener noreferrer">DALL·E</a>、<a href="https://stability.ai/" target="_blank" rel="noopener noreferrer">Stable Diffusion</a>和<a href="https://huggingface.co/" target="_blank" rel="noopener noreferrer">HuggingFace</a>等。</p></li><li><p>支持聊天、文生图、文生语音、音频转录等。</p></li></ul><p>至于其他的功能基本上可以无视，因为它本质上就是用<a href="https://docs.spring.io/spring-framework/reference/web/webflux.html" target="_blank" rel="noopener noreferrer">Spring WebFlux</a>把常见大模型提供商的接口封装了一遍，然后改个名字叫<a href="https://spring.io/projects/spring-ai" target="_blank" rel="noopener noreferrer">Spring AI</a>。</p><p>有两种方式创建<a href="https://spring.io/projects/spring-ai" target="_blank" rel="noopener noreferrer">Spring AI</a>项目。</p><ul><li><p>通过<a href="https://docs.spring.io/spring-ai/reference/getting-started.html#add-dependencies" target="_blank" rel="noopener noreferrer">添加特定组件的依赖项</a>从头搭建应用。</p></li><li><p>通过<a href="https://docs.spring.io/spring-ai/reference/getting-started.html#_sample_projects" target="_blank" rel="noopener noreferrer">示例项目</a>直接在现成的基础上来改。</p></li></ul><br><h2 id="从头搭建" tabindex="-1"><a class="header-anchor" href="#从头搭建"><span>从头搭建</span></a></h2><p>通过<a href="https://start.spring.io/" target="_blank" rel="noopener noreferrer">Spring Initializr</a>创建一个<a href="https://spring.io/projects/spring-ai" target="_blank" rel="noopener noreferrer">Spring AI</a>项目。</p><p>首先单击<code>ADD DEPENDENCIES...⌘ + B</code>，然后拖到最下面，选择相关的<a href="https://en.wikipedia.org/wiki/Artificial_intelligence" target="_blank" rel="noopener noreferrer">AI</a>依赖。</p><figure><img src="https://tianmazuo.com/technology/sundry/spring-ai-01.png" alt="选择AI依赖" tabindex="0" loading="lazy"><figcaption>选择AI依赖</figcaption></figure><p>这里选择了经典的<a href="https://openai.com/" target="_blank" rel="noopener noreferrer">OpenAI</a>和<a href="https://stability.ai/" target="_blank" rel="noopener noreferrer">Stable Diffusion</a>。</p><figure><img src="https://tianmazuo.com/technology/sundry/spring-ai-02.png" alt="选择OpenAI和Stability AI" tabindex="0" loading="lazy"><figcaption>选择OpenAI和Stability AI</figcaption></figure><p>然后单击<code>GENERATE ⌘ + ⏎</code>创建项目。</p><p>将创建的项目导入到<a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener noreferrer">IDEA</a>就行了。</p><br><h2 id="修改示例" tabindex="-1"><a class="header-anchor" href="#修改示例"><span>修改示例</span></a></h2><p>官方提供的<a href="https://docs.spring.io/spring-ai/reference/getting-started.html#_sample_projects" target="_blank" rel="noopener noreferrer">示例项目</a>也就三个，可以先从第一个<a href="https://github.com/rd-1-2022/ai-openai-helloworld" target="_blank" rel="noopener noreferrer">OpenAI-Helloworld</a>开始。</p><p>整个项目也就三个文件（不包括配置文件，因为没有）：<code>Application</code>、<code>AIController</code>和<code>Config</code>。</p><p>从名字就能看出来都是干嘛的。</p><p>因为没有配置文件，所以就自己写一个（<code>pom.xml</code>中的内容保持不变）。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  ai</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    openai</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      api-key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">sk-XXXXX......</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      chat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">          # 这里如果不写，那默认就是gpt-4o</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">gpt-3.5-turbo</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动项目，通过<a href="https://www.postman.com/" target="_blank" rel="noopener noreferrer">Postman</a>访问<a href="http://localhost:8080/ai" target="_blank" rel="noopener noreferrer">http://localhost:8080/ai</a>，会碰到最常见的三个错误。</p><h3 id="error-while-extracting-response" tabindex="-1"><a class="header-anchor" href="#error-while-extracting-response"><span>Error while extracting response</span></a></h3><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>......</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.client.RestClientException: Error while extracting response for type [org.springframework.ai.openai.api.OpenAiApi$ChatCompletion] and content type [application/json;charset=utf-8]] with root cause</span></span>
<span class="line"><span></span></span>
<span class="line"><span>......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这大概率是因为没有在<a href="https://chatgpt.com/" target="_blank" rel="noopener noreferrer">ChatGPT</a>中设置<code>secret key</code>。</p><p>可以在<a href="https://platform.openai.com/settings/profile?tab=api-keys" target="_blank" rel="noopener noreferrer">https://platform.openai.com/settings/profile?tab=api-keys</a>处设置。</p><h3 id="billing-details" tabindex="-1"><a class="header-anchor" href="#billing-details"><span>billing details</span></a></h3><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>......</span></span>
<span class="line"><span></span></span>
<span class="line"><span>org.springframework.ai.retry.NonTransientAiException: 429 - {</span></span>
<span class="line"><span>    &quot;error&quot;: {</span></span>
<span class="line"><span>        &quot;message&quot;: &quot;You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.&quot;,</span></span>
<span class="line"><span>        &quot;type&quot;: &quot;insufficient_quota&quot;,</span></span>
<span class="line"><span>        &quot;param&quot;: null,</span></span>
<span class="line"><span>        &quot;code&quot;: &quot;insufficient_quota&quot;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是因为账户没钱了（<a href="https://openai.com/" target="_blank" rel="noopener noreferrer">OpenAI</a>的免费额度极少）。</p><h3 id="gpt-4o-does-not-exist" tabindex="-1"><a class="header-anchor" href="#gpt-4o-does-not-exist"><span>“gpt-4o” does not exist</span></a></h3><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>......</span></span>
<span class="line"><span></span></span>
<span class="line"><span>org.springframework.ai.retry.NonTransientAiException: 404 - {</span></span>
<span class="line"><span>    &quot;error&quot;: {</span></span>
<span class="line"><span>        &quot;message&quot;: &quot;The model \`gpt-4o\` does not exist or you do not have access to it.&quot;,</span></span>
<span class="line"><span>        &quot;type&quot;: &quot;invalid_request_error&quot;,</span></span>
<span class="line"><span>        &quot;param&quot;: null,</span></span>
<span class="line"><span>        &quot;code&quot;: &quot;model_not_found&quot;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在配置文件或代码中改成<code>gpt-3.5-turbo</code>就好了。</p><p>代码中这样改。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> org.springframework.ai.openai.samples.helloworld</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.ai.chat.client.ChatClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.ai.openai.OpenAiChatOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.ai.openai.api.OpenAiApi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.web.bind.annotation.GetMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.web.bind.annotation.RequestParam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.web.bind.annotation.RestController</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> java.util.Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">RestController</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> AIController</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ChatClient</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> chatClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> AIController</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ChatClient</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> chatClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">		this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">chatClient</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> chatClient;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">GetMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/ai&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">	Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> completion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">RequestParam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;message&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">defaultValue</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Tell me a joke&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//		Map&lt;String, String&gt; map = new HashMap&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//		map.put(&quot;Authorization&quot;, &quot;Bearer sk-XXX...&quot;);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">		return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">of</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">				&quot;completion&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">				chatClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">prompt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(message)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">						// 官方实例代码中没有，可以自己增加构建选项</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">						.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">OpenAiChatOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">								// 指定gpt版本</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">								.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">withModel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">OpenAiApi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ChatModel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">GPT_3_5_TURBO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">								// 温度越高越发散，越低越准确</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">								.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">withTemperature</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.5D</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">								// 显示最大token</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">								.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">withMaxTokens</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4096</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//								// 指定种子值，以后每次生成会以这个种子值为参照生成相似的内容（一般都不需要）</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//								.withSeed(1)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//								// 增加http请求头</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//								.withHttpHeaders(map)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">								// 更多的选项值可以看源码，里面都解释的很清楚</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">								.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">						.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lixingyun&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">						.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">call</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">						.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,36),l=[t];function r(p,h){return a(),s("div",null,l)}const d=i(e,[["render",r],["__file","springai.html.vue"]]),g=JSON.parse('{"path":"/technology/sundry/springai.html","title":"Spring AI","lang":"zh-CN","frontmatter":{"title":"Spring AI","icon":"stairs","category":["杂项","Spring AI"],"tag":["杂项","Spring AI"],"date":"2024-08-18T00:00:00.000Z","isOriginal":true,"star":true,"description":"什么是Spring AI Spring AI是一款用于AI工程的应用框架，就是把现在开发中的三层架构或MVC中的那一套搬到AI里面去。 Spring AI目前支持的功能包括下面一些。 支持主流的模型提供商，例如，DALL·E、Stable Diffusion和HuggingFace等。 支持聊天、文生图、文生语音、音频转录等。 至于其他的功能基本上可以...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/sundry/springai.html"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"Spring AI"}],["meta",{"property":"og:description","content":"什么是Spring AI Spring AI是一款用于AI工程的应用框架，就是把现在开发中的三层架构或MVC中的那一套搬到AI里面去。 Spring AI目前支持的功能包括下面一些。 支持主流的模型提供商，例如，DALL·E、Stable Diffusion和HuggingFace等。 支持聊天、文生图、文生语音、音频转录等。 至于其他的功能基本上可以..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/technology/sundry/spring-ai-01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"杂项"}],["meta",{"property":"article:tag","content":"Spring AI"}],["meta",{"property":"article:published_time","content":"2024-08-18T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring AI\\",\\"image\\":[\\"https://tianmazuo.com/technology/sundry/spring-ai-01.png\\",\\"https://tianmazuo.com/technology/sundry/spring-ai-02.png\\"],\\"datePublished\\":\\"2024-08-18T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[{"level":2,"title":"什么是Spring AI","slug":"什么是spring-ai","link":"#什么是spring-ai","children":[]},{"level":2,"title":"从头搭建","slug":"从头搭建","link":"#从头搭建","children":[]},{"level":2,"title":"修改示例","slug":"修改示例","link":"#修改示例","children":[{"level":3,"title":"Error while extracting response","slug":"error-while-extracting-response","link":"#error-while-extracting-response","children":[]},{"level":3,"title":"billing details","slug":"billing-details","link":"#billing-details","children":[]},{"level":3,"title":"“gpt-4o” does not exist","slug":"gpt-4o-does-not-exist","link":"#gpt-4o-does-not-exist","children":[]}]}],"git":{},"readingTime":{"minutes":3.01,"words":902},"filePathRelative":"technology/sundry/springai.md","localizedDate":"2024年8月18日","excerpt":"<h2>什么是Spring AI</h2>\\n<p><a href=\\"https://spring.io/projects/spring-ai\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Spring AI</a>是一款用于<code>AI工程</code>的应用框架，就是把现在开发中的<a href=\\"https://baike.baidu.com/item/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">三层架构</a>或<a href=\\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">MVC</a>中的那一套搬到<a href=\\"https://en.wikipedia.org/wiki/Artificial_intelligence\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">AI</a>里面去。</p>","autoDesc":true}');export{d as comp,g as data};
