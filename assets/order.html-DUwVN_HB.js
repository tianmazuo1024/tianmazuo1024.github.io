import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,d as r}from"./app-CiwSPZKD.js";const c={},a=r('<p>在之前的订单履约系统中，由于环节比较多，也涉及到了很多不同的子系统。</p><figure><img src="https://tianmazuo.com/technology/middleware/rocketmq/rocketmq-05.png" alt="订单履约系统所涉及到的众多环节" tabindex="0" loading="lazy"><figcaption>订单履约系统所涉及到的众多环节</figcaption></figure><p>这些环节和子系统中的任何一个都可能成为整个系统的瓶颈，而且其中任何一个出了问题，都会影响整个系统的可用性。</p><p>所以，可以利用消息队列对它进行一番改造。</p><figure><img src="https://tianmazuo.com/technology/middleware/rocketmq/rocketmq-13.png" alt="经过MQ改造后的订单履约系统" tabindex="0" loading="lazy"><figcaption>经过MQ改造后的订单履约系统</figcaption></figure><p>除了<code>更新状态</code>与<code>扣减库存</code>这两个较为关键的操作由订单系统直接同步处理外，其他的子系统，例如消息推送、调整积分、优惠促销、物流发货等，全部都通过<a href="https://rocketmq.apache.org/" target="_blank" rel="noopener noreferrer">RocketMQ</a>对接。</p><p><a href="https://rocketmq.apache.org/" target="_blank" rel="noopener noreferrer">RocketMQ</a>有三种不同的<code>发送模式</code>。</p><ul><li><p><code>同步发送模式</code>。在这种方式下，消息生产者会一直等待消息消费的结果之后才继续往下执行。这种同步执行的方式和用不用MQ没啥区别。</p></li><li><p><code>异步发送模式</code>。在这种方式下，消息生产者将消息发送出去之后就接着往下执行，不会等到有结果了才继续执行。</p></li><li><p><code>单向发送模式</code>。这种方式和异步发送方式一样，消息发送完成后继续执行代码，不会等待结果的返回。</p></li></ul><p>和<code>发送模式</code>相对的，<a href="https://rocketmq.apache.org/" target="_blank" rel="noopener noreferrer">RocketMQ</a>也有两种不同的消息<code>消费模式</code>。</p><ul><li><p><code>Push模式</code>。在这种方式下，<code>Broker</code>会主动把消息发给消费者，消费者被动地接收<code>Broker</code>推送过来的消息。</p></li><li><p><code>Pull模式</code>。在这种方式下，<code>Broker</code>不会主推消息送，而是消费者主动到<code>Broker</code>上去拉取消息。</p></li></ul>',10),p=[a];function n(i,l){return o(),t("div",null,p)}const g=e(c,[["render",n],["__file","order.html.vue"]]),h=JSON.parse('{"path":"/technology/middleware/rocketmq/order.html","title":"订单系统改造","lang":"zh-CN","frontmatter":{"title":"订单系统改造","icon":"envelope-circle-check","category":["中间件","RocketMQ"],"tag":["中间件","RocketMQ"],"date":"2023-02-21T00:00:00.000Z","isOriginal":true,"star":true,"description":"在之前的订单履约系统中，由于环节比较多，也涉及到了很多不同的子系统。 订单履约系统所涉及到的众多环节订单履约系统所涉及到的众多环节 这些环节和子系统中的任何一个都可能成为整个系统的瓶颈，而且其中任何一个出了问题，都会影响整个系统的可用性。 所以，可以利用消息队列对它进行一番改造。 经过MQ改造后的订单履约系统经过MQ改造后的订单履约系统 除了更新状态与...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/middleware/rocketmq/order.html"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"订单系统改造"}],["meta",{"property":"og:description","content":"在之前的订单履约系统中，由于环节比较多，也涉及到了很多不同的子系统。 订单履约系统所涉及到的众多环节订单履约系统所涉及到的众多环节 这些环节和子系统中的任何一个都可能成为整个系统的瓶颈，而且其中任何一个出了问题，都会影响整个系统的可用性。 所以，可以利用消息队列对它进行一番改造。 经过MQ改造后的订单履约系统经过MQ改造后的订单履约系统 除了更新状态与..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/technology/middleware/rocketmq/rocketmq-05.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"中间件"}],["meta",{"property":"article:tag","content":"RocketMQ"}],["meta",{"property":"article:published_time","content":"2023-02-21T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"订单系统改造\\",\\"image\\":[\\"https://tianmazuo.com/technology/middleware/rocketmq/rocketmq-05.png\\",\\"https://tianmazuo.com/technology/middleware/rocketmq/rocketmq-13.png\\"],\\"datePublished\\":\\"2023-02-21T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":1.6,"words":479},"filePathRelative":"technology/middleware/rocketmq/order.md","localizedDate":"2023年2月21日","excerpt":"<p>在之前的订单履约系统中，由于环节比较多，也涉及到了很多不同的子系统。</p>\\n<figure><img src=\\"https://tianmazuo.com/technology/middleware/rocketmq/rocketmq-05.png\\" alt=\\"订单履约系统所涉及到的众多环节\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>订单履约系统所涉及到的众多环节</figcaption></figure>\\n<p>这些环节和子系统中的任何一个都可能成为整个系统的瓶颈，而且其中任何一个出了问题，都会影响整个系统的可用性。</p>\\n<p>所以，可以利用消息队列对它进行一番改造。</p>","autoDesc":true}');export{g as comp,h as data};
