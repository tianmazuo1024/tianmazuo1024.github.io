import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,d as l}from"./app-CiwSPZKD.js";const s={},t=l(`<h2 id="机器配置" tabindex="-1"><a class="header-anchor" href="#机器配置"><span>机器配置</span></a></h2><p>对<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>系统而言，耗时最多的基本上都是网络请求，同时等待执行返回的结果。</p><p>对大部分业务系统来说，其负载和压力主要都集中在数据库访问上，因为访问数据库需要执行大量的磁盘<code>I/O</code>操作。</p><ul><li><p>一般<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>应用配置4C8G，每秒200~800之间的并发访问量。</p></li><li><p>一般<a href="https://www.mysql.com" target="_blank" rel="noopener noreferrer">MySQL</a>最低配置8C16G（标配16C32G），SSD固态硬盘。</p></li></ul><div class="hint-container tip"><p class="hint-container-title">问题</p><ul><li><p>假设<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>系统部署在4C8G机器上，假设每个请求的处理时间只有0.01ms，那这台机器可以实现每秒几千的并发请求吗？</p></li><li><p>可以扛住每秒几万的并发请求吗？</p></li></ul></div><br><h2 id="性能测试" tabindex="-1"><a class="header-anchor" href="#性能测试"><span>性能测试</span></a></h2><p><a href="https://www.mysql.com" target="_blank" rel="noopener noreferrer">MySQL</a>生产环境中的一些高级参数的调优和配置，也是跟<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>应用密切相关的。</p><p>专业的<a href="https://en.wikipedia.org/wiki/Database_administrator" target="_blank" rel="noopener noreferrer">DBA</a>会依据过往的经验，用<a href="https://www.mysql.com" target="_blank" rel="noopener noreferrer">MySQL</a>生产调优模板去启动数据，通过压测工具模拟系统请求。</p><ul><li><p>每秒发出若干个请求到数据库，观察CPU、I/O、网络及内存的负载情况。</p></li><li><p>逐步提升请求数量，看看数据库的性能表现。</p></li><li><p>数据库压测和Java业务系统压测不是一回事。</p></li><li><p>如果先知道数据库能扛多少压力，再来开发Java业务系统就会心里有数。</p></li></ul><br><h2 id="常用测试指标" tabindex="-1"><a class="header-anchor" href="#常用测试指标"><span>常用测试指标</span></a></h2><ul><li><p>数据库相关指标。</p><ul><li><p><code>QPS</code>：Query Per Second，每秒查询请求数。</p></li><li><p><code>TPS</code>：Transaction Per Second，每秒事务处理数。</p></li></ul></li><li><p><code>I/O</code>相关指标。</p><ul><li><p><code>IOPS</code>：机器的随机I/O并发处理能力（后台I/O刷盘能力）。</p></li><li><p><code>吞吐量</code>：机器的磁盘每秒可以（顺序）读写多少字节数据。</p></li><li><p><code>Latency</code>：往机器的磁盘里写入一条数据的延迟。</p></li></ul></li><li><p>其他指标。</p><ul><li><code>CPU负载</code>、<code>内存负载</code>、<code>网络负载</code></li></ul></li></ul><div class="hint-container tip"><p class="hint-container-title">问题</p><ul><li><p><code>QPS</code>和<code>TPS</code>是一回事吗？</p></li><li><p>假设一个交易系统拆分为很多服务，一笔交易的完成需要多个服务协作完成，那对于每个服务而言，处理的请求数量是<code>QPS</code>还是<code>TPS</code>？</p></li><li><p>对于整个交易系统而言，处理的请求数量是<code>QPS</code>还是<code>TPS</code>？</p></li></ul></div><br><h2 id="测试工具" tabindex="-1"><a class="header-anchor" href="#测试工具"><span>测试工具</span></a></h2><p>在<a href="https://www.linux.org/" target="_blank" rel="noopener noreferrer">Linux</a>上安装<a href="https://dev.mysql.com/downloads/benchmarks.html" target="_blank" rel="noopener noreferrer">SysBench</a>。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; curl -s https://packagecloud.io/install/repositories/akopytov/sysbench/script.rpm.sh | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; sudo yum -y install sysbench</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; sysbench --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><p>创建测试库，基于<a href="https://dev.mysql.com/downloads/benchmarks.html" target="_blank" rel="noopener noreferrer">SysBench</a>构造测试表和测试数据。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; sysbench </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">--db-driver</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mysql</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    --time=300</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --threads=10</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --report-interval=1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    --mysql-host=127.0.0.1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --mysql-port=3306</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    --mysql-user=test_user</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --mysql-password=test_user</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    --mysql-db=test_db</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --tables=20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --table_size=1000000</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    oltp_read_write</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --db-ps-mode=disable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prepare/run/cleanup</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>压测结果说明如下。</p><ul><li><code>thds: 10</code>，表示有10个线程在压测。</li><li><code>tps: 380.99</code>，表示每秒执行了380.99个事务。</li><li><code>qps: 7610.20(r/w/o: 5132.99/1155.86/1321.35)</code>，表示每秒可执行7610.20个请求，其中，有5132.99个读请求，1155.86个写请求，1321.35个其他请求。</li><li><code>lat (ms, 95%): 21.33</code>，表示95%的请求的延迟都在21.33毫秒以下。</li><li><code>err/s: 0.00 reconn/s: 0.00</code>，表示每秒有0个请求是失败的，发生了0次网络重连。</li><li><code>SQL statistics</code>: <ul><li><code>queries performed</code>: <ul><li><code>read</code>: 1480084 // 在300s的压测期间执行了148万多次的读请求</li><li><code>write</code>: 298457 // 在压测期间执行了29万多次的写请求</li><li><code>other</code>: 325436 // 在压测期间执行了30万多次的其他请求</li><li><code>total</code>: 2103977 // 一共执行了210万多次的请求</li></ul></li><li><code>transactions</code>: 105180( 350.6 per sec. ) // 一共执行了10万多个事务，每秒执行350多个事务</li><li><code>queries</code>: 2103977 ( 7013.26 per sec. ) // 一共执行了210万多次的请求，每秒执行7000+请求</li><li><code>ignored errors</code>: 0 (0.00 per sec.)</li><li><code>reconnects</code>: 0 (0.00 per sec.)</li></ul></li><li><code>General staticstics</code>: // 一共执行了300s的压测，执行了10万+的事务 <ul><li><code>total time</code>: 300.0052s</li><li><code>total number of events</code>: 105180</li></ul></li><li><code>Latency (ms)</code>: <ul><li><code>min</code>: 4.32 // 请求中延迟最小的是4.32ms</li><li><code>avg</code>: 13.42 // 所有请求平均延迟是13.42ms</li><li><code>max</code>: 45.56 // 延迟最大的请求是45.56ms</li><li><code>95th percentile</code>: 21.33 // 95%的请求延迟都在21.33ms以内</li></ul></li></ul><br><h2 id="性能观测" tabindex="-1"><a class="header-anchor" href="#性能观测"><span>性能观测</span></a></h2><p>通过<a href="https://dev.mysql.com/downloads/benchmarks.html" target="_blank" rel="noopener noreferrer">SysBench</a>实验，如果得到以下结果。</p><ul><li><p>A：QPS = 2000，CPU、内存、I/O、网络在正常范围内。</p></li><li><p>B：QPS = 5000，CPU100%、内存100%、I/O、网络都很高。</p></li></ul><p>那么这说明条件B很可能会宕机，而条件A则可能是负载峰值。</p><p>通过<code>top</code>指令观察CPU负载。</p><ul><li><p><code>load average</code>: 0.15, 0.05, 0.01</p></li><li><p>说明CPU在1分钟、5分钟、15分钟内的负载情况，具体数值与CPU核数有关。</p></li><li><p>若4C8G机器负载值=1.5，说明1核使用率100%，另1核50%，另2核是空闲的。</p></li><li><p>若负载值=6，说明当前4核使用率已经全部100%，且更多的任务正在排队中。</p></li></ul><p>通过top指令观察内存负载。</p><ul><li><p><code>Mem</code>: 33554432k total, 20971520k used, 12268339 free, 307200k buffers</p></li><li><p>说明总内存大概32G，已经使用20G，12G空闲，大概有300M内存作为OS缓冲。</p></li></ul><p>观察磁盘I/O负载的命令。</p><ul><li><p><code>dstat -d</code></p></li><li><p><code>dstat -r</code></p></li></ul><p>观察网络负载的命令。</p><ul><li><p><code>dstat -n</code></p></li><li><p><code>netstat -n | awk &#39;/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}&#39;</code></p></li></ul><br><h2 id="部署监控" tabindex="-1"><a class="header-anchor" href="#部署监控"><span>部署监控</span></a></h2><ul><li><p><a href="https://www.prometheus.io/" target="_blank" rel="noopener noreferrer">Prometheus</a>：数据采集监控和存储系统。</p></li><li><p><a href="https://www.grafana.com/" target="_blank" rel="noopener noreferrer">Grafana</a>：可视化的监控数据展示系统。</p></li><li><p>安装部署<a href="https://www.prometheus.io/" target="_blank" rel="noopener noreferrer">Prometheus</a>和<a href="https://www.grafana.com/" target="_blank" rel="noopener noreferrer">Grafana</a>。</p></li><li><p>添加<a href="https://www.mysql.com" target="_blank" rel="noopener noreferrer">MySQL</a>所在机器的监控。</p></li><li><p>添加<a href="https://www.mysql.com" target="_blank" rel="noopener noreferrer">MySQL</a>数据库的监控。</p></li></ul>`,39),r=[t];function n(o,p){return a(),i("div",null,r)}const h=e(s,[["render",n],["__file","practice01.html.vue"]]),k=JSON.parse('{"path":"/technology/database/mysql/practice01.html","title":"生产实践（一）","lang":"zh-CN","frontmatter":{"title":"生产实践（一）","icon":"table","category":["数据库","MySQL"],"tag":["数据库","MySQL"],"date":"2023-05-03T00:00:00.000Z","isOriginal":true,"star":true,"description":"机器配置 对Java系统而言，耗时最多的基本上都是网络请求，同时等待执行返回的结果。 对大部分业务系统来说，其负载和压力主要都集中在数据库访问上，因为访问数据库需要执行大量的磁盘I/O操作。 一般Java应用配置4C8G，每秒200~800之间的并发访问量。 一般MySQL最低配置8C16G（标配16C32G），SSD固态硬盘。 问题 假设Java系统...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/database/mysql/practice01.html"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"生产实践（一）"}],["meta",{"property":"og:description","content":"机器配置 对Java系统而言，耗时最多的基本上都是网络请求，同时等待执行返回的结果。 对大部分业务系统来说，其负载和压力主要都集中在数据库访问上，因为访问数据库需要执行大量的磁盘I/O操作。 一般Java应用配置4C8G，每秒200~800之间的并发访问量。 一般MySQL最低配置8C16G（标配16C32G），SSD固态硬盘。 问题 假设Java系统..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:published_time","content":"2023-05-03T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"生产实践（一）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-03T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[{"level":2,"title":"机器配置","slug":"机器配置","link":"#机器配置","children":[]},{"level":2,"title":"性能测试","slug":"性能测试","link":"#性能测试","children":[]},{"level":2,"title":"常用测试指标","slug":"常用测试指标","link":"#常用测试指标","children":[]},{"level":2,"title":"测试工具","slug":"测试工具","link":"#测试工具","children":[]},{"level":2,"title":"性能观测","slug":"性能观测","link":"#性能观测","children":[]},{"level":2,"title":"部署监控","slug":"部署监控","link":"#部署监控","children":[]}],"git":{},"readingTime":{"minutes":4.47,"words":1342},"filePathRelative":"technology/database/mysql/practice01.md","localizedDate":"2023年5月3日","excerpt":"<h2>机器配置</h2>\\n<p>对<a href=\\"https://www.oracle.com/java/technologies/downloads/archive/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Java</a>系统而言，耗时最多的基本上都是网络请求，同时等待执行返回的结果。</p>\\n<p>对大部分业务系统来说，其负载和压力主要都集中在数据库访问上，因为访问数据库需要执行大量的磁盘<code>I/O</code>操作。</p>\\n<ul>\\n<li>\\n<p>一般<a href=\\"https://www.oracle.com/java/technologies/downloads/archive/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Java</a>应用配置4C8G，每秒200~800之间的并发访问量。</p>\\n</li>\\n<li>\\n<p>一般<a href=\\"https://www.mysql.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">MySQL</a>最低配置8C16G（标配16C32G），SSD固态硬盘。</p>\\n</li>\\n</ul>","autoDesc":true}');export{h as comp,k as data};
