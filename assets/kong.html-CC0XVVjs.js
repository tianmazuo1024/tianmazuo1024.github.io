import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as t,d as e}from"./app-CiwSPZKD.js";const n={},a=e(`<h2 id="技术实现对比" tabindex="-1"><a class="header-anchor" href="#技术实现对比"><span>技术实现对比</span></a></h2><table><thead><tr><th style="text-align:left;"></th><th style="text-align:left;">Kong</th><th style="text-align:left;">ApiSix</th><th style="text-align:left;">Trk</th><th style="text-align:left;">ApiGee</th></tr></thead><tbody><tr><td style="text-align:left;">部署模式</td><td style="text-align:left;">单机/集群</td><td style="text-align:left;">单机/集群</td><td style="text-align:left;">单机/集群</td><td style="text-align:left;">仅集群</td></tr><tr><td style="text-align:left;">数据存储</td><td style="text-align:left;">PGSQL/Cseeandra</td><td style="text-align:left;">etcd</td><td style="text-align:left;">Redis</td><td style="text-align:left;">PGSQL/Cseeandra/Zookeeper</td></tr><tr><td style="text-align:left;">是否开源</td><td style="text-align:left;">Apache V2.0</td><td style="text-align:left;">Apache V2.0</td><td style="text-align:left;">MPL</td><td style="text-align:left;">否</td></tr><tr><td style="text-align:left;">核心技术</td><td style="text-align:left;">Nginx + LUA</td><td style="text-align:left;">Nginx + LUA</td><td style="text-align:left;">Golang</td><td style="text-align:left;">?</td></tr><tr><td style="text-align:left;">私有化部署</td><td style="text-align:left;">支持</td><td style="text-align:left;">支持</td><td style="text-align:left;">支持</td><td style="text-align:left;">不支持</td></tr><tr><td style="text-align:left;">自定义插件</td><td style="text-align:left;">支持</td><td style="text-align:left;">支持</td><td style="text-align:left;">支持</td><td style="text-align:left;">不支持</td></tr><tr><td style="text-align:left;">社区活跃度</td><td style="text-align:left;">高</td><td style="text-align:left;">高</td><td style="text-align:left;">高</td><td style="text-align:left;">中</td></tr><tr><td style="text-align:left;">yaml</td><td style="text-align:left;">支持</td><td style="text-align:left;">支持</td><td style="text-align:left;">不支持</td><td style="text-align:left;">不支持</td></tr></tbody></table><br><h2 id="集成-开发" tabindex="-1"><a class="header-anchor" href="#集成-开发"><span>集成&amp;开发</span></a></h2><div class="hint-container tip"><p class="hint-container-title">环境和脚本</p><p><a href="https://github.com/Kong/kong" target="_blank" rel="noopener noreferrer">Kong/kong</a></p><p><a href="https://docs.konghq.com/gateway/3.7.x/install/docker/?install=oss" target="_blank" rel="noopener noreferrer">官网开源版本安装说明</a></p><p><a href="https://github.com/qianyugang/kong-docs-cn" target="_blank" rel="noopener noreferrer">中文说明文档</a></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 安装postgres</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; docker network create kong-net</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; docker run -d --name kong-database </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    --network</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">kong-net</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 5432:5432</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;POSTGRES_USER=kong&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;POSTGRES_DB=kong&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;POSTGRES_PASSWORD=kong&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    postgres:13</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; docker run --rm </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">--network</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">kong-net</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;KONG_DATABASE=postgres&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;KONG_PG_HOST=kong-database&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;KONG_PG_PASSWORD=kong&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    kong:3.7.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kong</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> migrations</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bootstrap</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># docker安装kong</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; docker run -d --name kong-gateway </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    --network</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">kong-net</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;KONG_DATABASE=postgres&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;KONG_PG_HOST=kong-database&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;KONG_PG_USER=kong&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;KONG_PG_PASSWORD=kong&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;KONG_PROXY_ACCESS_LOG=/dev/stdout&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;KONG_ADMIN_ACCESS_LOG=/dev/stdout&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;KONG_PROXY_ERROR_LOG=/dev/stderr&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;KONG_ADMIN_ERROR_LOG=/dev/stderr&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;KONG_ADMIN_GUI_URL=http://172.16.185.168:8002&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8000:8000</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8443:8443</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 172.16.185.168:8001:8001</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 172.16.185.168:8002:8002</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 172.16.185.168:8444:8444</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    kong:3.7.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 二进制包安装</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; curl -1sLf </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://packages.konghq.com/public/gateway-37/config.rpm.txt?distro=el&amp;codename=$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rpm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --eval</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;%{rhel}&#39;)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tee</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/yum.repos.d/kong-gateway-37.repo</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; sudo yum -q makecache -y </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">--disablerepo</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;*&#39;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> --enablerepo</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;kong-gateway-37&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; sudo yum install -y kong-3.7.0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 拷贝配置文件</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; cp /etc/kong/kong.conf.default /etc/kong/kong.conf</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 修改如下内容（基本是取消掉这些配置项的注释即可）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">admin_listen</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:8001</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reuseport</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> backlog=16384,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:8444</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reuseport</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> backlog=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">16384</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">proxy_listen</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:8000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reuseport</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> backlog=16384,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:8443</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reuseport</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> backlog=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">16384</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">database</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> postgres</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pg_host</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 172.16.185.168</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pg_port</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5432</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pg_timeout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pg_user</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kong</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pg_password</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kong</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pg_database</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kong</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dns_resolver</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:8600</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> # 这里配置的是Consul的访问地址和端口</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 启动kong，在浏览器中打开 [IP:8002] 即可访问</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; kong start -c /etc/kong/kong.conf</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 停止服务</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; kong stop</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 安装konga</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; docker run -d -p 1337:1337 --name konga pantsel/konga</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 在浏览器中打开 [IP:1337] 即可访问</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 注意：用konga连接kong时，admin的URL端口时8001而非8002</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><br><h2 id="创建路由" tabindex="-1"><a class="header-anchor" href="#创建路由"><span>创建路由</span></a></h2><ul><li><p><a href="https://github.com/Kong/kong" target="_blank" rel="noopener noreferrer">Kong</a>和<a href="https://github.com/pantsel/konga" target="_blank" rel="noopener noreferrer">Konga</a>位于同一台服务器：<code>172.16.185.168</code>。</p><ul><li><p>通过<code>http://172.16.185.168:8000</code>地址访问<code>kong</code>的管理端口（用于路由转发）。</p></li><li><p>通过<code>http://172.16.185.168:8001</code>地址访问<code>kong</code>的服务端口。</p></li><li><p>通过<code>http://172.16.185.168:8002</code>地址访问<code>kong</code>的管理页面。</p></li><li><p>通过<code>http://172.16.185.168:1337</code>地址访问<code>konga</code>的管理页面。</p></li></ul></li><li><p><a href="https://www.gin-gonic.com/" target="_blank" rel="noopener noreferrer">Gin</a>和<a href="https://www.grpc.io/" target="_blank" rel="noopener noreferrer">GRPC</a>服务位于同一台服务器：<code>192.168.2.31</code>。</p><ul><li><p>通过<code>http://192.168.2.31:8080</code>地址访问<code>Gin</code>提供的服务。</p></li><li><p>通过<code>http://192.168.2.31:9090</code>地址访问<code>GRPC</code>提供的服务。</p></li></ul></li><li><p>在<a href="https://github.com/pantsel/konga" target="_blank" rel="noopener noreferrer">Konga</a>中创建<code>user-api</code>服务。</p></li><li><p>在<code>user-api</code>服务中创建<code>用户列表</code>路由，<code>Paths</code> = <code>/</code>。</p></li><li><p>然后通过<code>http://172.16.185.168:8000/u/v1/users/list</code>即可访问<a href="https://gin-gonic.com/" target="_blank" rel="noopener noreferrer">Gin</a>提供的<code>用户列表</code>服务，实现了路由转发。</p></li></ul><br><h2 id="从consul发现服务" tabindex="-1"><a class="header-anchor" href="#从consul发现服务"><span>从Consul发现服务</span></a></h2><ul><li><p>修改以下<a href="https://github.com/Kong/kong" target="_blank" rel="noopener noreferrer">Kong</a>的<code>Service</code>配置。</p><ul><li><p>将<code>Host</code>配置为<code>\${服务名称}.service.consul</code>。</p></li><li><p>将<code>Port</code>配置为<code>80</code>。</p></li></ul></li><li><p>将同一个服务启动两次即可看到效果（因为<a href="https://www.consul.io/" target="_blank" rel="noopener noreferrer">Consul</a>里面所有注册的服务ID都是随机的，服务名是唯一的）。</p></li></ul><figure><img src="https://tianmazuo.com/technology/microservice/go/microservice-kong-01.png" alt="从Consul发现服务" tabindex="0" loading="lazy"><figcaption>从Consul发现服务</figcaption></figure><br><h2 id="给kong添加jwt插件" tabindex="-1"><a class="header-anchor" href="#给kong添加jwt插件"><span>给Kong添加JWT插件</span></a></h2><ul><li><p>新建一个<code>Consumer</code>。</p></li><li><p>为这个<code>Consumer</code>添加<a href="https://www.jwt.io/" target="_blank" rel="noopener noreferrer">JWT</a>，路径：<code>Consumer</code> -&gt; <code>Credentials</code> -&gt; <code>JWT</code>。</p><ul><li><p>记住添加的<code>Key</code>，后面要用到。</p></li><li><p>记住添加的<code>secret</code>，后面要用到。</p></li></ul></li><li><p>配置全局的<code>Plugins</code>，路径：<code>Plugins</code> -&gt; <code>Add GLOBAL PLUGINS</code> -&gt; <code>JWT</code>。</p><ul><li><p>设置<code>header names</code>（例如x-token）——输入完记得回车，否则等于没提交。</p></li><li><p>在<a href="https://www.jwt.io/" target="_blank" rel="noopener noreferrer">JWT</a>生成一个<code>token</code>用于测试。</p></li><li><p>在<code>PAYLOAD</code>中添加一个键值对：<code>&quot;iss&quot;: &quot;goms&quot;</code>（这个<code>Value</code>就是前面添加的<code>Key</code>值）。</p></li><li><p>在<code>VERIFY SIGNATURE</code>的<code>HMACSHA256</code>中添加<code>secret</code>（这个<code>secret</code>就是前面添加的<code>secret</code>值）。</p></li><li><p>拷贝<a href="https://www.jwt.io/" target="_blank" rel="noopener noreferrer">JWT</a>生成的<code>Encoded</code>。</p></li></ul></li></ul><br><h2 id="测试接口" tabindex="-1"><a class="header-anchor" href="#测试接口"><span>测试接口</span></a></h2><h3 id="_1-不使用gin的jwt" tabindex="-1"><a class="header-anchor" href="#_1-不使用gin的jwt"><span>1. 不使用Gin的JWT</span></a></h3><ul><li><p>先把待测试接口原本的JWT验证取消掉</p></li><li><p>用<a href="https://www.postman.com/" target="_blank" rel="noopener noreferrer">Postman</a>等接口测试工具访问<code>/v1/users/list</code>会出现<code>{&quot;message&quot;: &quot;Unauthorized&quot;}</code>这样的消息。</p></li><li><p>在<a href="https://www.postman.com/" target="_blank" rel="noopener noreferrer">Postman</a>的<code>Headers</code>中添加键名为<code>x-token</code>的参数，键值是：<code>Bearer \${生成的Encoded}</code>。</p></li><li><p>再用<a href="https://www.postman.com/" target="_blank" rel="noopener noreferrer">Postman</a>访问，就能看到正常的数据输出。</p></li></ul><h3 id="_2-整合gin的jwt" tabindex="-1"><a class="header-anchor" href="#_2-整合gin的jwt"><span>2. 整合Gin的JWT</span></a></h3><ul><li><p>将<a href="https://www.gin-gonic.com/" target="_blank" rel="noopener noreferrer">Gin</a>中原本的<a href="https://www.jwt.io/" target="_blank" rel="noopener noreferrer">JWT</a>还原，再用<a href="https://www.postman.com/" target="_blank" rel="noopener noreferrer">Postman</a>访问，结果：<a href="https://www.gin-gonic.com/" target="_blank" rel="noopener noreferrer">Gin</a>的<a href="https://www.jwt.io/" target="_blank" rel="noopener noreferrer">JWT</a>认证失败。</p></li><li><p>删掉<code>Consumer</code>中的<code>secret</code>，重新生成一个<a href="https://www.jwt.io/" target="_blank" rel="noopener noreferrer">JWT</a>插件。</p></li><li><p>将新<a href="https://www.jwt.io/" target="_blank" rel="noopener noreferrer">JWT</a>插件的<code>key</code>替换成<a href="https://www.gin-gonic.com/" target="_blank" rel="noopener noreferrer">Gin</a>里面使用的<code>issuer</code>（位于<a href="https://www.jwt.io/" target="_blank" rel="noopener noreferrer">JWT</a>中），同时将<code>secret</code>替换成之前配置过的<a href="https://www.jwt.io/" target="_blank" rel="noopener noreferrer">JWT</a>的<code>secret</code>。</p></li><li><p>在<a href="https://www.jwt.io/" target="_blank" rel="noopener noreferrer">JWT</a>重新生成一次<code>Encoded</code>（暂时命名为E1），记得加入：<code>&quot;iss&quot;: \${key}</code>。</p></li><li><p>拿着<code>E1</code>，按照<a href="https://github.com/Kong/kong" target="_blank" rel="noopener noreferrer">Kong</a>的要求添加<code>x-token</code>参数，值是：<code>Bearer \${E1}</code>，从验证码接口得到验证码。</p></li><li><p>得到验证码后调用登录接口<code>/v1/users/login/password</code>，即可看到返回的数据。</p></li><li><p>再用登录接口返回的<code>token</code>，按照<a href="https://github.com/Kong/kong" target="_blank" rel="noopener noreferrer">Kong</a>的要求添加<code>x-token</code>参数，就能顺利调用其他接口</p></li></ul><div class="hint-container tip"><p class="hint-container-title">注意</p><p>使用<a href="https://github.com/Kong/kong" target="_blank" rel="noopener noreferrer">Kong</a>的<a href="https://www.jwt.io/" target="_blank" rel="noopener noreferrer">JWT</a>插件会造成如下的问题。</p><ul><li><p>所有的接口都要按照要求添加<code>x-token</code>参数</p></li><li><p>前端传参的时候，要记得加上<code>Bearer </code>前缀</p></li></ul></div>`,22),l=[a];function r(p,h){return t(),i("div",null,l)}const o=s(n,[["render",r],["__file","kong.html.vue"]]),g=JSON.parse('{"path":"/technology/microservice/go/kong.html","title":"API网关：Kong","lang":"zh-CN","frontmatter":{"title":"API网关：Kong","icon":"dice-d20","category":["微服务","Go"],"tag":["微服务","GO","API网关","Kong"],"date":"2023-10-22T00:00:00.000Z","isOriginal":true,"star":true,"description":"技术实现对比 集成&开发 环境和脚本 Kong/kong 官网开源版本安装说明 中文说明文档 创建路由 Kong和Konga位于同一台服务器：172.16.185.168。 通过http://172.16.185.168:8000地址访问kong的管理端口（用于路由转发）。 通过http://172.16.185.168:8001地址访问kong的服务...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/microservice/go/kong.html"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"API网关：Kong"}],["meta",{"property":"og:description","content":"技术实现对比 集成&开发 环境和脚本 Kong/kong 官网开源版本安装说明 中文说明文档 创建路由 Kong和Konga位于同一台服务器：172.16.185.168。 通过http://172.16.185.168:8000地址访问kong的管理端口（用于路由转发）。 通过http://172.16.185.168:8001地址访问kong的服务..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/technology/microservice/go/microservice-kong-01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"微服务"}],["meta",{"property":"article:tag","content":"GO"}],["meta",{"property":"article:tag","content":"API网关"}],["meta",{"property":"article:tag","content":"Kong"}],["meta",{"property":"article:published_time","content":"2023-10-22T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"API网关：Kong\\",\\"image\\":[\\"https://tianmazuo.com/technology/microservice/go/microservice-kong-01.png\\"],\\"datePublished\\":\\"2023-10-22T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[{"level":2,"title":"技术实现对比","slug":"技术实现对比","link":"#技术实现对比","children":[]},{"level":2,"title":"集成&开发","slug":"集成-开发","link":"#集成-开发","children":[]},{"level":2,"title":"创建路由","slug":"创建路由","link":"#创建路由","children":[]},{"level":2,"title":"从Consul发现服务","slug":"从consul发现服务","link":"#从consul发现服务","children":[]},{"level":2,"title":"给Kong添加JWT插件","slug":"给kong添加jwt插件","link":"#给kong添加jwt插件","children":[]},{"level":2,"title":"测试接口","slug":"测试接口","link":"#测试接口","children":[{"level":3,"title":"1. 不使用Gin的JWT","slug":"_1-不使用gin的jwt","link":"#_1-不使用gin的jwt","children":[]},{"level":3,"title":"2. 整合Gin的JWT","slug":"_2-整合gin的jwt","link":"#_2-整合gin的jwt","children":[]}]}],"git":{},"readingTime":{"minutes":4.3,"words":1290},"filePathRelative":"technology/microservice/go/kong.md","localizedDate":"2023年10月22日","excerpt":"<h2>技术实现对比</h2>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:left\\"></th>\\n<th style=\\"text-align:left\\">Kong</th>\\n<th style=\\"text-align:left\\">ApiSix</th>\\n<th style=\\"text-align:left\\">Trk</th>\\n<th style=\\"text-align:left\\">ApiGee</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:left\\">部署模式</td>\\n<td style=\\"text-align:left\\">单机/集群</td>\\n<td style=\\"text-align:left\\">单机/集群</td>\\n<td style=\\"text-align:left\\">单机/集群</td>\\n<td style=\\"text-align:left\\">仅集群</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">数据存储</td>\\n<td style=\\"text-align:left\\">PGSQL/Cseeandra</td>\\n<td style=\\"text-align:left\\">etcd</td>\\n<td style=\\"text-align:left\\">Redis</td>\\n<td style=\\"text-align:left\\">PGSQL/Cseeandra/Zookeeper</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">是否开源</td>\\n<td style=\\"text-align:left\\">Apache V2.0</td>\\n<td style=\\"text-align:left\\">Apache V2.0</td>\\n<td style=\\"text-align:left\\">MPL</td>\\n<td style=\\"text-align:left\\">否</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">核心技术</td>\\n<td style=\\"text-align:left\\">Nginx + LUA</td>\\n<td style=\\"text-align:left\\">Nginx + LUA</td>\\n<td style=\\"text-align:left\\">Golang</td>\\n<td style=\\"text-align:left\\">?</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">私有化部署</td>\\n<td style=\\"text-align:left\\">支持</td>\\n<td style=\\"text-align:left\\">支持</td>\\n<td style=\\"text-align:left\\">支持</td>\\n<td style=\\"text-align:left\\">不支持</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">自定义插件</td>\\n<td style=\\"text-align:left\\">支持</td>\\n<td style=\\"text-align:left\\">支持</td>\\n<td style=\\"text-align:left\\">支持</td>\\n<td style=\\"text-align:left\\">不支持</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">社区活跃度</td>\\n<td style=\\"text-align:left\\">高</td>\\n<td style=\\"text-align:left\\">高</td>\\n<td style=\\"text-align:left\\">高</td>\\n<td style=\\"text-align:left\\">中</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">yaml</td>\\n<td style=\\"text-align:left\\">支持</td>\\n<td style=\\"text-align:left\\">支持</td>\\n<td style=\\"text-align:left\\">不支持</td>\\n<td style=\\"text-align:left\\">不支持</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{o as comp,g as data};
