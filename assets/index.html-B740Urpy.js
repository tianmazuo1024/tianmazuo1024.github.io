import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,c as t,a as s,e as i,b as r,w as h,d as e,o as p}from"./app-CiwSPZKD.js";const k={},d=e(`<h2 id="大数据-范式" tabindex="-1"><a class="header-anchor" href="#大数据-范式"><span>大数据“范式”</span></a></h2><p>目前已知的主流的大数据系统，在进行大数据相关应用开发时，都遵循<code>三段论</code>（如果包括上下文环境以及启动执行的话就是<code>五段论</code>）的编程范式。</p><p><a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>也遵循了这一点，因为它没有脱离<a href="https://hadoop.apache.org/" target="_blank" rel="noopener noreferrer">Hadoop</a>大数据的计算架构与生态体系。</p><table><thead><tr><th style="text-align:center;">大数据平台</th><th style="text-align:center;">初始化上下文</th><th style="text-align:center;">数据源（映射）</th><th style="text-align:center;">执行算子逻辑</th><th style="text-align:center;">输出结果</th></tr></thead><tbody><tr><td style="text-align:center;">Hadoop</td><td style="text-align:center;">JobInstance</td><td style="text-align:center;">Map</td><td style="text-align:center;">Reduce</td><td style="text-align:center;">Output</td></tr><tr><td style="text-align:center;">Spark</td><td style="text-align:center;">Environment</td><td style="text-align:center;">RDD</td><td style="text-align:center;">Transformation</td><td style="text-align:center;">Action/Output</td></tr><tr><td style="text-align:center;">Flink</td><td style="text-align:center;">Environment</td><td style="text-align:center;">Source</td><td style="text-align:center;">Transformation</td><td style="text-align:center;">Sink</td></tr></tbody></table><p>如果用伪代码来表示的话就像是下面这样的。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 1. 准备环境 - Environment</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">StreamExecutionEnvironment</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> environment </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> StreamExecutionEnvironment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getExecutionEnvironment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 2. 读取数据 - Source</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">DataStreamSource</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">T</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> source </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(...);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 3. 处理数据 - Transformation</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">flatMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(...);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 4. 输出数据 - Sink</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addSink</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(...).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 5. 启动任务 - Execute</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">execute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只有<a href="https://clickhouse.com/" target="_blank" rel="noopener noreferrer">Clickhouse</a>另起炉灶，自成一派（它也是流批一体的）。</p><p>而所有大数据的算子，都可以利用<code>Java函数式编程</code>中<code>流式编程</code>的那一套，完全就是无缝迁移。</p>`,8),o=s("code",null,"第5章 函数式编程",-1),c=s("code",null,"流式编程",-1),g=e(`<p>所以说，基础很重要。</p><br><h2 id="流式-与-批式" tabindex="-1"><a class="header-anchor" href="#流式-与-批式"><span>“流式”与“批式”</span></a></h2><p>传统的大数据系统，例如<a href="https://hadoop.apache.org" target="_blank" rel="noopener noreferrer">Hadoop</a>和<a href="https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html" target="_blank" rel="noopener noreferrer">HDFS</a>，它们更加侧重于大数据的存储和同步，对于实时计算的支持比较有限。</p><p>所以它们处理的通常都是静态的数据集，例如几个<code>GB</code>（甚至是<code>PB</code>）的交通事件数据、天气变化数据、用户行为数据、实时生产数据等。而且它可以先处理过去的数据，再处理当前的数据。</p><p>对于这种大数据系统，可以说它是<code>有界</code>的。</p><p>所谓<code>有界</code>，就是一定会有绝对的<code>起始</code>和<code>结束</code>，因为哪怕这个静态的数据文件再大，哪怕是EB级别的文件，也一定存在绝对的开头和结尾。</p><p>这种大数据系统就被称为<code>批式大数据系统</code>，因为它处理的是一批批的文件。</p><p>在<a href="https://hadoop.apache.org" target="_blank" rel="noopener noreferrer">Hadoop</a>之后，<a href="https://spark.apache.org/" target="_blank" rel="noopener noreferrer">Spark</a>和<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>相继出现，它们则引入了新的大数据处理方式：<code>流式处理</code>。之所以会出现新的<code>流式处理</code>，是因为互联网应用对大数据系统的实时性要求越来越高。</p><p>对于<code>流</code>来讲，它最大的特点就是<code>无界</code>，也就是没有明显的<code>开始</code>和<code>结束</code>时间点。例如，对于一场在线直播的演唱会来说，用户可以在任意一个时间点进去观看，也可以在任意一个时间点退出。这个进入和退出的时间点都不算流的开始和结束，但对于每一个用户来说又都是。</p><p>而且它只能处理当前的数据，无法回头去处理过去的数据。</p><p>所以<code>流</code>只有相对的<code>开始</code>和<code>结束</code>——即使它再小，即使只输入一个字符，只要它是以<code>流</code>的形式存在并且一直着持续的，那么都可以认为它是<code>无界</code>的。</p><p>这种能过够实时处理<code>流</code>的大数据系统也被称为<code>流式大数据系统</code>。</p><p>如果说<a href="https://spark.apache.org/" target="_blank" rel="noopener noreferrer">Spark</a>是介于<code>批</code>和<code>流</code>之间的话（对于<a href="https://spark.apache.org/" target="_blank" rel="noopener noreferrer">Spark</a>来说，<code>流</code>只是<code>批</code>的一种特例），那么<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>就是纯粹的<code>流式大数据系统</code>（<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>则刚好相反，<code>批</code>只是<code>流</code>的一种特例），<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>诞生的时间更晚，吸收借鉴的经验更多，所以它也更纯粹。</p><p>所以，对于<a href="https://spark.apache.org/" target="_blank" rel="noopener noreferrer">Spark</a>来说，一切皆是<code>批</code>；而对于<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>来说，一切皆是<code>流</code>。</p><p>以<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>为例，这种不同的数据处理方式也反映在代码的运行结果上。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> * 原始输入：bigdata,bigdata,flink,flink,clickhouse</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 声明批式处理执行环境</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ExecutionEnvironment</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> env </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> ExecutionEnvironment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getExecutionEnvironment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">......</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 批式处理运行后立即结束，结果为：</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(flink</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(clickhouse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(bigdata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 声明流式处理执行环境</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">StreamExecutionEnvironment</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> env </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> StreamExecutionEnvironment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getExecutionEnvironment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">......</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 流式处理会一直持续运行，结果为：</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(bigdata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(bigdata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(flink</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(flink</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(clickhouse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>仔细对比上面的结果就能发现<code>批</code>与<code>流</code>的不同：<code>批</code>结束后会立即汇总结果；而<code>流</code>因为没有边界，所以无法立即汇总结果。</p><br><h2 id="api抽象" tabindex="-1"><a class="header-anchor" href="#api抽象"><span>API抽象</span></a></h2><p>虽然<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>为<code>批</code>和<code>流</code>的开发提供了不同级别的抽象，整个<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>中最重要的几个概念也在下面这两层：<code>Stateful Stream Processing</code>和<code>DataStream / DataSet API</code>。</p><figure><img src="https://tianmazuo.com/technology/bigdata/flink/flink-01.png" alt="Flink中的API抽象层次" tabindex="0" loading="lazy"><figcaption>Flink中的API抽象层次</figcaption></figure><p>但<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a> <code>1.14</code>版本之后<code>DataSet</code>已经被废弃，和<code>DataStream</code>整合为一体。</p><p><a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>之所以可以实现<code>批流</code>一体，是因为它有一套<code>批流</code>一体的调度模式：基于<code>Pipeline Region</code>的统一调度。</p><ul><li><p><code>批流</code>一体的<code>API</code>。</p></li><li><p><code>批流</code>一体的<code>DAG调度</code>。</p></li><li><p><code>批流</code>一体的<code>Shuffle</code>。</p></li><li><p><code>批流</code>一体的<code>容错策略</code>。</p></li></ul><figure><img src="https://tianmazuo.com/technology/bigdata/flink/flink-02.png" alt="Flink批流一体的调度模式" tabindex="0" loading="lazy"><figcaption>Flink批流一体的调度模式</figcaption></figure><br><h2 id="学习方法" tabindex="-1"><a class="header-anchor" href="#学习方法"><span>学习方法</span></a></h2><p>其实，要想学好<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>并不难，只要善用下面这些免费资源就足够了。</p><ul><li><p>官方教程指南</p><ul><li><p><a href="https://nightlies.apache.org/flink/flink-docs-master/docs/concepts/overview/" target="_blank" rel="noopener noreferrer">概念透析</a>（尤其是这里面的几篇文章，看懂它们就已经把Flink学会了一半）</p></li><li><p><a href="https://nightlies.apache.org/flink/flink-docs-master/docs/dev/datastream/operators/overview/" target="_blank" rel="noopener noreferrer">各种算子</a></p></li><li><p><a href="https://nightlies.apache.org/flink/flink-docs-master/docs/learn-flink/overview/" target="_blank" rel="noopener noreferrer">实践练习</a></p></li><li><p>......</p></li></ul></li><li><p>官方测试用例</p><ul><li><p><a href="https://github.com/apache/flink/tree/master/flink-core/src/test/java/org/apache/flink" target="_blank" rel="noopener noreferrer">flink-core</a></p></li><li><p><a href="https://github.com/apache/flink/tree/master/flink-datastream/src/test/java/org/apache/flink/datastream/impl" target="_blank" rel="noopener noreferrer">flink-datastream</a></p></li><li><p><a href="https://github.com/apache/flink/tree/master/flink-streaming-java/src/test/java/org/apache/flink/streaming" target="_blank" rel="noopener noreferrer">flink-streaming-java</a></p></li><li><p><a href="https://github.com/apache/flink/tree/master/flink-java/src/test/java/org/apache/flink/api/java" target="_blank" rel="noopener noreferrer">flink-java</a></p></li><li><p><a href="https://github.com/apache/flink/tree/master/flink-python/src/test/java/org/apache/flink" target="_blank" rel="noopener noreferrer">flink-python</a></p></li><li><p><a href="https://github.com/apache/flink/tree/master/flink-scala/src/test/scala/org/apache/flink/api/scala" target="_blank" rel="noopener noreferrer">flink-scala</a></p></li><li><p><a href="https://github.com/apache/flink/tree/master/flink-examples" target="_blank" rel="noopener noreferrer">flink-examples</a></p></li><li><p>......</p></li></ul></li></ul><br><h2 id="安装部署" tabindex="-1"><a class="header-anchor" href="#安装部署"><span>安装部署</span></a></h2><p><a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>提供了本地部署和<a href="https://www.docker.com/" target="_blank" rel="noopener noreferrer">Docker</a>容器部署两种方式。</p><ul><li><p><a href="https://nightlies.apache.org/flink/flink-docs-master/docs/try-flink/local_installation/" target="_blank" rel="noopener noreferrer">Flink本地安装方式</a>（<a href="https://nightlies.apache.org/flink/flink-docs-master/docs/deployment/config/#flink-configuration-file" target="_blank" rel="noopener noreferrer">Flink配置文件</a>）。</p></li><li><p>安装好<a href="https://www.docker.com/" target="_blank" rel="noopener noreferrer">Docker</a>，然后执行下面的脚本。</p></li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">version:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;3.7&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">services:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  jobmanager:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    image:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> flink:1.17.1-scala_2.12</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    command</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jobmanager</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ports:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;8081:8081&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    volumes:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/work/volumes/flink/settings/:/settings</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/work/volumes/flink/data/:/data</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    environment:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        FLINK_PROPERTIES</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        jobmanager.rpc.address:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jobmanager</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    restart:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> always</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  taskmanager:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    image:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> flink:1.17.1-scala_2.12</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    command</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> taskmanager</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    depends_on:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jobmanager</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    scale:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    environment:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        FLINK_PROPERTIES</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        jobmanager.rpc.address:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jobmanager</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        taskmanager.numberOfTaskSlots:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    volumes:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/work/volumes/flink/settings/:/settings</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/work/volumes/flink/data/:/data</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    restart:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> always</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在浏览器中访问<a href="http://172.16.185.176:8081/" target="_blank" rel="noopener noreferrer">http://172.16.185.176:8081/</a>就能看到<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a><code>jobmanager</code>节点的基本信息。</p><br><h2 id="作业提交" tabindex="-1"><a class="header-anchor" href="#作业提交"><span>作业提交</span></a></h2><p>通过<a href="https://nightlies.apache.org/flink/flink-docs-master/docs/deployment/cli/" target="_blank" rel="noopener noreferrer">命令行提交作业</a>后，可以再通过命令查看作业运行情况。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; ./bin/flink list -a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>进入运行<code>work-jobmanager-1</code>的Docker容器，以命令行启动两个测试作业。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./bin/flink</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [-Dexecution.runtime-mode=BATCH] --detached -p 1 ./examples/streaming/StateMachineExample.jar</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./bin/flink</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [-Dexecution.runtime-mode=BATCH] --hostname localhost --port 9090 -p 1 org.apache.flink.streaming.examples.socket.SocketWindowWordCount ./examples/streaming/SocketWindowWordCount.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在<a href="http://localhost:8081/" target="_blank" rel="noopener noreferrer">Flink提供的Web UI</a>中观察。</p><p>或者，将<a href="https://flink.apache.org/" target="_blank" rel="noopener noreferrer">Flink</a>官方自带的测试作业拷贝下来。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; docker cp &lt;容器ID&gt;:/opt/flink/examples/ /usr/local/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后再手动上传到<code>Web UI</code>中测试也是一样。</p>`,46);function m(y,f){const a=l("RouteLink");return p(),t("div",null,[d,s("p",null,[i("所以我在"),r(a,{to:"/book/"},{default:h(()=>[i("《Java深度探索：开发基础》")]),_:1}),i("的"),o,i("里专门提到过，如果"),c,i("很熟练的话，搞大数据非常容易上手——不是几乎，而是瞬间秒懂。")]),g])}const F=n(k,[["render",m],["__file","index.html.vue"]]),b=JSON.parse('{"path":"/technology/bigdata/flink/","title":"流批一体大数据系统","lang":"zh-CN","frontmatter":{"title":"流批一体大数据系统","icon":"warehouse","category":["大数据","Flink"],"tag":["大数据","Flink","流式大数据","Docker"],"date":"2023-05-07T00:00:00.000Z","isOriginal":true,"star":true,"description":"大数据“范式” 目前已知的主流的大数据系统，在进行大数据相关应用开发时，都遵循三段论（如果包括上下文环境以及启动执行的话就是五段论）的编程范式。 Flink也遵循了这一点，因为它没有脱离Hadoop大数据的计算架构与生态体系。 如果用伪代码来表示的话就像是下面这样的。 只有Clickhouse另起炉灶，自成一派（它也是流批一体的）。 而所有大数据的算子...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/bigdata/flink/"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"流批一体大数据系统"}],["meta",{"property":"og:description","content":"大数据“范式” 目前已知的主流的大数据系统，在进行大数据相关应用开发时，都遵循三段论（如果包括上下文环境以及启动执行的话就是五段论）的编程范式。 Flink也遵循了这一点，因为它没有脱离Hadoop大数据的计算架构与生态体系。 如果用伪代码来表示的话就像是下面这样的。 只有Clickhouse另起炉灶，自成一派（它也是流批一体的）。 而所有大数据的算子..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/technology/bigdata/flink/flink-01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"大数据"}],["meta",{"property":"article:tag","content":"Flink"}],["meta",{"property":"article:tag","content":"流式大数据"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:published_time","content":"2023-05-07T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"流批一体大数据系统\\",\\"image\\":[\\"https://tianmazuo.com/technology/bigdata/flink/flink-01.png\\",\\"https://tianmazuo.com/technology/bigdata/flink/flink-02.png\\"],\\"datePublished\\":\\"2023-05-07T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[{"level":2,"title":"大数据“范式”","slug":"大数据-范式","link":"#大数据-范式","children":[]},{"level":2,"title":"“流式”与“批式”","slug":"流式-与-批式","link":"#流式-与-批式","children":[]},{"level":2,"title":"API抽象","slug":"api抽象","link":"#api抽象","children":[]},{"level":2,"title":"学习方法","slug":"学习方法","link":"#学习方法","children":[]},{"level":2,"title":"安装部署","slug":"安装部署","link":"#安装部署","children":[]},{"level":2,"title":"作业提交","slug":"作业提交","link":"#作业提交","children":[]}],"git":{},"readingTime":{"minutes":5.87,"words":1761},"filePathRelative":"technology/bigdata/flink/README.md","localizedDate":"2023年5月7日","excerpt":"<h2>大数据“范式”</h2>\\n<p>目前已知的主流的大数据系统，在进行大数据相关应用开发时，都遵循<code>三段论</code>（如果包括上下文环境以及启动执行的话就是<code>五段论</code>）的编程范式。</p>\\n<p><a href=\\"https://flink.apache.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Flink</a>也遵循了这一点，因为它没有脱离<a href=\\"https://hadoop.apache.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Hadoop</a>大数据的计算架构与生态体系。</p>","autoDesc":true}');export{F as comp,b as data};
