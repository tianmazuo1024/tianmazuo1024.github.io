import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,d as n}from"./app-CiwSPZKD.js";const l={},e=n(`<p>以下内容基于下面的<a href="https://pkg.go.dev/github.com/golang/protobuf/protoc-gen-go" target="_blank" rel="noopener noreferrer">Protoc</a>版本。</p><ul><li><p><code>protoc-gen-go@v1.34.1</code>（最新版本<a href="https://github.com/grpc/grpc/releases/tag/v1.59.0" target="_blank" rel="noopener noreferrer">protoc-gen-go@v1.59.0</a>）。</p></li><li><p><code>protoc-gen-go-grpc@v1.2.0</code>（最新版本<a href="https://pkg.go.dev/github.com/golang/protobuf@v1.5.3/protoc-gen-go" target="_blank" rel="noopener noreferrer">protoc-gen-go-grpc@v1.5.3</a>）。</p></li><li><p><code>protoc@3.20.3</code>（最新版本<a href="https://github.com/protocolbuffers/protobuf/releases/tag/v3.20.3" target="_blank" rel="noopener noreferrer">Protocol Buffers@v3.20.3</a>）。</p></li></ul><h2 id="源码生成问题" tabindex="-1"><a class="header-anchor" href="#源码生成问题"><span>源码生成问题</span></a></h2><p>有如下<code>.proto</code>文件。</p><div class="language-proto line-numbers-mode" data-highlighter="shiki" data-ext="proto" data-title="proto" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">syntax</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;proto3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> HelloRequest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  string</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 1 是编号，而不是值</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  int32</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 运行命令</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// protoc -I . helloworld.proto --go_out=plugins=grpc:.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 上面这行命令的意思是：将当前目录下的helloworld.proto文件编译成go代码，并且将生成的代码放到当前目录下</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 但实际上，在新版本的protobuf中，这行命令是错误的</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// protoc --go_out=plugins=grpc:. helloworld.proto</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="第一次执行protoc命令" tabindex="-1"><a class="header-anchor" href="#第一次执行protoc命令"><span>第一次执行protoc命令</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; protoc -I </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> helloworld.proto </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">--go_out</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">grpc:.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">protoc-gen-go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> program</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> not</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> found</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> or</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> not</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> executable</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Please</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> specify</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> program</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> absolute</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> or</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sure</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> program</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> available</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> your</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> system</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> variable</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--go_out:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> protoc-gen-go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Plugin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> failed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> with</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> code</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再次执行<code>go get</code>引入依赖。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; go get github.com/golang/protobuf/protoc-gen-go</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> module</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/golang/protobuf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deprecated:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;google.golang.org/protobuf&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> module</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> instead.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>按照提示将命令替换成。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; go get google.golang.org/protobuf/protoc-gen-go</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> module</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> google.golang.org/protobuf@upgrade</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> found</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (v1.34.1), but does not contain package google.golang.org/protobuf/protoc-gen-go</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>搜索问题<code>--go_out: protoc-gen-go: Plugin failed with status code 1.</code>，发现需要这样执行。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.34.1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 或者这样执行</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; go install google.golang.org/protobuf/cmd/protoc-gen-go@latest</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@vlatest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体可以参考<a href="https://grpc.io/docs/languages/go/quickstart/#regenerate-grpc-code" target="_blank" rel="noopener noreferrer">grpc官方文档</a>。</p><p>此时在<code>/Users/xxxx/go</code>目录下多出了一个<code>bin</code>目录，里面有两个可执行文件：<code>protoc-gen-go</code>和<code>protoc-gen-go-grpc</code>，将它们放入到环境变量。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; vim /etc/profile</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> GOPATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Users</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">xxxx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">go</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$GOPATH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; soruce /etc/profile</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 验证版本号</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; protoc-gen-go --version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">protoc-gen-go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.34.1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; protoc-gen-go-grpc --version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">protoc-gen-go-grpc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1.2.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="第二次执行protoc命令" tabindex="-1"><a class="header-anchor" href="#第二次执行protoc命令"><span>第二次执行protoc命令</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; protoc -I </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> helloworld.proto </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">--go_out</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">grpc:.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">protoc-gen-go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> determine</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;helloworld.proto&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Please</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> specify</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> either:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        •</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;go_package&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> option</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .proto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> or</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        •</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;M&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> argument</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> command</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> line.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">See</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://protobuf.dev/reference/go/go-generated#package</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> more</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> information.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--go_out:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> protoc-gen-go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Plugin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> failed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> with</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> code</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过搜索引擎查找<code>protoc-gen-go: unable to determine Go import path for &quot;helloworld.proto&quot;</code>产生的原因。</p><p>修改<code>.proto</code>文件内容如下。</p><div class="language-proto line-numbers-mode" data-highlighter="shiki" data-ext="proto" data-title="proto" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">syntax</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;proto3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> go_package</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;./;helloworld&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> helloworld</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> HelloRequest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  string</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 1 是编号，而不是值</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  int32</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 运行命令</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// protoc -I . helloworld.proto --go_out=plugins=grpc:.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 上面这行命令的意思是：将当前目录下的helloworld.proto文件编译成go代码，并且将生成的代码放到当前目录下</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// protoc --go_out=plugins=grpc:. helloworld.proto</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="第三次执行protoc命令" tabindex="-1"><a class="header-anchor" href="#第三次执行protoc命令"><span>第三次执行protoc命令</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; protoc </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">--go_out</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">grpc:.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> helloworld.proto</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--go_out:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> protoc-gen-go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> plugins</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> are</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> not</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> supported</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;protoc --go-grpc_out=...&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> generate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gRPC</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">See</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://grpc.io/docs/languages/go/quickstart/#regenerate-grpc-code</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> more</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> information.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="第四次执行protoc命令" tabindex="-1"><a class="header-anchor" href="#第四次执行protoc命令"><span>第四次执行protoc命令</span></a></h3><p>按照提示去掉了<code>plugins</code>。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; protoc </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">--go_out</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">grpc:.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> helloworld.proto</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">protoc-gen-go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> no</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> such</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> flag</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -grpc</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--go_out:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> protoc-gen-go:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Plugin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> failed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> with</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> code</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="第五次执行protoc命令" tabindex="-1"><a class="header-anchor" href="#第五次执行protoc命令"><span>第五次执行protoc命令</span></a></h3><p>按照提示和官方的示例，最终改为如下方式。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; protoc </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">--go_out</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> --go-grpc_out</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> helloworld.proto</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>成功！——同时生成了<code>helloworld.pb.go</code>和<code>helloworld_grpc.pb.go</code>这两个<code>go</code>源代码文件。</p><p>最终将<code>.proto</code>文件修改为如下内容。</p><div class="language-proto line-numbers-mode" data-highlighter="shiki" data-ext="proto" data-title="proto" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">syntax</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;proto3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> go_package</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;./;helloworld&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// grpc通过protobuf定义通信接口</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">service</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Greeter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  rpc</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> SayHello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">HelloRequest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">returns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">HelloReply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> HelloRequest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  string</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 1 是编号，而不是值</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  int32</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> HelloReply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  string</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> reply</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 运行命令：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// protoc --go_out=. --go-grpc_out=. helloworld.proto</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 或者</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// protoc -I . helloworld.proto --go_out=. --go-grpc_out=.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 上面命令的意思是：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 将当前目录下的helloworld.proto文件编译成go和grpc源码，并且将生成的源码放到当前目录下</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><figure><img src="https://tianmazuo.com/technology/programming/go/protobuf-01.png" alt="命令的执行过程" tabindex="0" loading="lazy"><figcaption>命令的执行过程</figcaption></figure><h2 id="proto文件同步问题" tabindex="-1"><a class="header-anchor" href="#proto文件同步问题"><span>.proto文件同步问题</span></a></h2><div class="language-proto line-numbers-mode" data-highlighter="shiki" data-ext="proto" data-title="proto" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> HelloRequest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  string</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  int32</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  repeated</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> string</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> tags</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>HelloRequest</code>中的属性<code>name</code>、<code>age</code>和<code>tags</code>已经被标好了顺序，就像方法中的参数顺序一样。</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getUserInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">password</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">	// 业务逻辑</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	......</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getUserInfo()</code>方法中<code>username</code>和<code>password</code>的顺序如果搞反了，那么业务逻辑的执行也会出错。</p><p>同理，当开发多个不同的微服务时，在不同团队之间传递<code>.proto</code>文件，就有可能会出现命名搞错，编号顺序（也就是传参顺序）搞错的情况。</p><p>甚至当<code>.proto</code>源文件已经被修改了，却忘了生成新的<a href="https://www.go.dev/" target="_blank" rel="noopener noreferrer">Go</a>源码。</p>`,45),t=[e];function h(p,k){return a(),s("div",null,t)}const d=i(l,[["render",h],["__file","protots.html.vue"]]),g=JSON.parse('{"path":"/technology/programming/go/protots.html","title":"Protobuf Trouble Shotting","lang":"zh-CN","frontmatter":{"title":"Protobuf Trouble Shotting","icon":"bullseye","category":["编程语言","Go"],"tag":["编程语言","Go","Protobuf"],"date":"2022-10-17T00:00:00.000Z","isOriginal":true,"star":true,"description":"以下内容基于下面的Protoc版本。 protoc-gen-go@v1.34.1（最新版本protoc-gen-go@v1.59.0）。 protoc-gen-go-grpc@v1.2.0（最新版本protoc-gen-go-grpc@v1.5.3）。 protoc@3.20.3（最新版本Protocol Buffers@v3.20.3）。 源码生成问...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/programming/go/protots.html"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"Protobuf Trouble Shotting"}],["meta",{"property":"og:description","content":"以下内容基于下面的Protoc版本。 protoc-gen-go@v1.34.1（最新版本protoc-gen-go@v1.59.0）。 protoc-gen-go-grpc@v1.2.0（最新版本protoc-gen-go-grpc@v1.5.3）。 protoc@3.20.3（最新版本Protocol Buffers@v3.20.3）。 源码生成问..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/technology/programming/go/protobuf-01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"编程语言"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"Protobuf"}],["meta",{"property":"article:published_time","content":"2022-10-17T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Protobuf Trouble Shotting\\",\\"image\\":[\\"https://tianmazuo.com/technology/programming/go/protobuf-01.png\\"],\\"datePublished\\":\\"2022-10-17T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[{"level":2,"title":"源码生成问题","slug":"源码生成问题","link":"#源码生成问题","children":[{"level":3,"title":"第一次执行protoc命令","slug":"第一次执行protoc命令","link":"#第一次执行protoc命令","children":[]},{"level":3,"title":"第二次执行protoc命令","slug":"第二次执行protoc命令","link":"#第二次执行protoc命令","children":[]},{"level":3,"title":"第三次执行protoc命令","slug":"第三次执行protoc命令","link":"#第三次执行protoc命令","children":[]},{"level":3,"title":"第四次执行protoc命令","slug":"第四次执行protoc命令","link":"#第四次执行protoc命令","children":[]},{"level":3,"title":"第五次执行protoc命令","slug":"第五次执行protoc命令","link":"#第五次执行protoc命令","children":[]}]},{"level":2,"title":".proto文件同步问题","slug":"proto文件同步问题","link":"#proto文件同步问题","children":[]}],"git":{},"readingTime":{"minutes":3.6,"words":1081},"filePathRelative":"technology/programming/go/protots.md","localizedDate":"2022年10月17日","excerpt":"<p>以下内容基于下面的<a href=\\"https://pkg.go.dev/github.com/golang/protobuf/protoc-gen-go\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Protoc</a>版本。</p>\\n<ul>\\n<li>\\n<p><code>protoc-gen-go@v1.34.1</code>（最新版本<a href=\\"https://github.com/grpc/grpc/releases/tag/v1.59.0\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">protoc-gen-go@v1.59.0</a>）。</p>\\n</li>\\n<li>\\n<p><code>protoc-gen-go-grpc@v1.2.0</code>（最新版本<a href=\\"https://pkg.go.dev/github.com/golang/protobuf@v1.5.3/protoc-gen-go\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">protoc-gen-go-grpc@v1.5.3</a>）。</p>\\n</li>\\n<li>\\n<p><code>protoc@3.20.3</code>（最新版本<a href=\\"https://github.com/protocolbuffers/protobuf/releases/tag/v3.20.3\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Protocol Buffers@v3.20.3</a>）。</p>\\n</li>\\n</ul>","autoDesc":true}');export{d as comp,g as data};
