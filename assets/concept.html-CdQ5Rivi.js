import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as t,d as r}from"./app-B5m7CcSj.js";const n={},a=r('<p>在知道了<a href="https://en.wikipedia.org/wiki/Copyright" target="_blank" rel="noopener noreferrer">Copyright</a>、<a href="https://en.wikipedia.org/wiki/Copyleft" target="_blank" rel="noopener noreferrer">Copyleft</a>、<a href="https://zh.wikipedia.org/wiki/%E5%AF%AC%E9%AC%86%E8%87%AA%E7%94%B1%E8%BB%9F%E9%AB%94%E6%8E%88%E6%AC%8A%E6%A2%9D%E6%AC%BE" target="_blank" rel="noopener noreferrer">Permissive</a>与<a href="https://en.wikipedia.org/wiki/Creative_Commons" target="_blank" rel="noopener noreferrer">CC（Creative Commons）</a>这些较为宏观一些的概念的含义之后，接下来就需要了解一些在开源中常见的基本概念都代表什么意思了。</p><p>首先，要清楚在开源许可证中高频出现的<code>引用</code>、<code>修改</code>、<code>贡献</code>和<code>衍生品</code>这几个名词术语的意思。</p><p>所谓<code>引用</code>指的是不直接使用源代码中的文件，而是将它作为一个第三方的依赖库来进行引用，这种方式有时也称为<code>链接</code>（<code>Link</code>）。例如，<a href="https://www.oracle.com/java/technologies/downloads/archive/" target="_blank" rel="noopener noreferrer">Java</a>开发中经常通过<a href="https://maven.apache.org" target="_blank" rel="noopener noreferrer">Maven</a>引入的第三方依赖就是典型的<code>引用</code>。</p><p>而<code>修改</code>则是直接对源代码文件进行修改，修改完后再重新编译打包使用，这其实就是工程师们常干的<code>二次开发</code>工作。</p><p><code>贡献</code>是指由版权所有者（即源代码的原创作者）或由经其授权的个人或法人实体提交的，可以纳入原作品的任何二次创作品，这包括作品的原始版本和对原作品的任何修改、添加或其衍生作品。比如，某位工程师下载了<a href="https://tomcat.apache.org" target="_blank" rel="noopener noreferrer">Tomcat</a>的源代码并给它添加了某个新功能，或者修改了其中的某个致命缺陷，此时，就可以在得到原作者许可的前提下，将新增加或修改这部分代码<code>贡献</code>出来，与之前的源代码合并成新的发行版本。</p><p>至于<code>衍生品</code>则指的是通过<code>引用</code>或<code>修改</code>的方式所生成的最终产品。例如，或者通过<a href="https://spring.io/projects/spring-boot" target="_blank" rel="noopener noreferrer">Spring Boot</a>框架，或者通过<a href="https://github.com/appfuse/appfuse" target="_blank" rel="noopener noreferrer">AppFuse</a>平台进行二次开发，或者两者兼而有之。如果某位工程师利用<a href="https://github.com/" target="_blank" rel="noopener noreferrer">Github</a>上源代码开发出了他自己的电商网站，那么这个电商网站就是一个典型的<code>衍生品</code>。</p><p>以<a href="https://www.gnu.org/licenses/lgpl-3.0.html" target="_blank" rel="noopener noreferrer">LGPL</a>许可证为例，如果某位<a href="https://www.android.com/" target="_blank" rel="noopener noreferrer">Android</a>开发者基于其底层的<code>Framework</code>开发出了某个受欢迎的应用，但却不想公开其源代码的话，那么就可以在他想开源的时候使用<a href="https://www.gnu.org/licenses/lgpl-3.0.html" target="_blank" rel="noopener noreferrer">LGPL</a>许可证，防止敏感的代码被公开。</p><figure><img src="https://tianmazuo.com/opensource/common/common-04.png" alt="LGPL许可证的引用" width="500" height="350" tabindex="0" loading="lazy"><figcaption>LGPL许可证的引用</figcaption></figure><p>但如果该工程师对某个有<a href="https://www.gnu.org/licenses/lgpl-3.0.html" target="_blank" rel="noopener noreferrer">LGPL</a>许可证的库做了修改，那么所有这些修改就必须以<a href="https://www.gnu.org/licenses/lgpl-3.0.html" target="_blank" rel="noopener noreferrer">LGPL</a>或者兼容它的许可证来发布。</p><p>而且，如果在修改后的库中包含了任何来自原始<a href="https://www.gnu.org/licenses/lgpl-3.0.html" target="_blank" rel="noopener noreferrer">LGPL</a>库的代码，那么所有修改的代码及其衍生品都必须以<a href="https://www.gnu.org/licenses/lgpl-3.0.html" target="_blank" rel="noopener noreferrer">LGPL</a>许可证发布。</p><figure><img src="https://tianmazuo.com/opensource/common/common-05.png" alt="修改持有LGPL许可证库代码后的情形" width="500" height="350" tabindex="0" loading="lazy"><figcaption>修改持有LGPL许可证库代码后的情形</figcaption></figure><p>其次，是所谓开源协议的<code>传染性</code>和<code>兼容性</code>。</p><p><code>传染性</code>指的是某个开源协议要求基于其开源代码的<code>引用</code>或<code>修改</code>后的<code>衍生品</code>也必须采用该协议发布，开放源代码。开源协议的这个特点很像病毒一样从一个工程师传染到另一工程师，从一个项目传染到另一个项目，所以这种特性也被称为<code>传染性</code>。</p><p>例如，<a href="https://en.wikipedia.org/wiki/GNU_General_Public_License" target="_blank" rel="noopener noreferrer">GPL</a>许可证就存在两个维度的<code>传染</code>：<code>横向传染</code>和<code>纵向传染</code>。</p><figure><img src="https://tianmazuo.com/opensource/common/common-06.png" alt="GPL的横向传染和纵向传染" width="500" height="350" tabindex="0" loading="lazy"><figcaption>GPL的横向传染和纵向传染</figcaption></figure><p>而不同版本<a href="https://en.wikipedia.org/wiki/GNU_General_Public_License" target="_blank" rel="noopener noreferrer">GPL</a>许可证之间的传染性的区别如下。</p><figure><img src="https://tianmazuo.com/opensource/common/common-07.png" alt="不同版本GPL许可证之间的传染性" width="500" height="300" tabindex="0" loading="lazy"><figcaption>不同版本GPL许可证之间的传染性</figcaption></figure><p>如果从头到尾只使用一个开源许可证当然不存在问题，但目前的软件开发基本上都是大量引用了第三方的链接，或修改，或衍生，这就使得发布的软件产品中或多或少地存在多种不同的开源许可证。而由于不同的开源许可证具有有不同的条款、权利与义务，当两个或两个以上开源许可证混在一起时，就有可能引起各个开源许可证之间的限制条款发生冲突，如果出现冲突就说它们不兼容，否则就是兼容性的。</p><p>对于各种可能情况下的兼容性，常用的一些开源许可证的区别如下面的几幅图片所示。</p><figure><img src="https://tianmazuo.com/opensource/common/common-08.png" alt="修改源代码后是否可以闭源" width="500" height="350" tabindex="0" loading="lazy"><figcaption>修改源代码后是否可以闭源</figcaption></figure><figure><img src="https://tianmazuo.com/opensource/common/common-09.png" alt="修改后是否必须附加修改说明文档" width="500" height="350" tabindex="0" loading="lazy"><figcaption>修改后是否必须附加修改说明文档</figcaption></figure><figure><img src="https://tianmazuo.com/opensource/common/common-10.png" alt="是否包含专利授权条款" width="500" height="350" tabindex="0" loading="lazy"><figcaption>是否包含专利授权条款</figcaption></figure><figure><img src="https://tianmazuo.com/opensource/common/common-11.png" alt="修改后是否要使用同样的许可证再发布" width="500" height="350" tabindex="0" loading="lazy"><figcaption>修改后是否要使用同样的许可证再发布</figcaption></figure><figure><img src="https://tianmazuo.com/opensource/common/common-12.png" alt="是否允许转授开源许可证" width="500" height="350" tabindex="0" loading="lazy"><figcaption>是否允许转授开源许可证</figcaption></figure><figure><img src="https://tianmazuo.com/opensource/common/common-13.png" alt="是否有专利报复性条款" width="500" height="350" tabindex="0" loading="lazy"><figcaption>是否有专利报复性条款</figcaption></figure><p>对于几种常用的许可证的兼容性的总结如下。</p><figure><img src="https://tianmazuo.com/opensource/common/common-14.png" alt="许可证的兼容性" width="500" height="350" tabindex="0" loading="lazy"><figcaption>许可证的兼容性</figcaption></figure><p>所以，<a href="https://opensource.guide/zh-hans/" target="_blank" rel="noopener noreferrer">开源</a>从来就不是仅仅将代码发布到<a href="https://github.com/" target="_blank" rel="noopener noreferrer">Github</a>上就万事大吉了，而是有着一套和商业化差不多的成熟玩法，其核心意义在于：既要尊重他人劳动成果，又要给予用户足够的便利，同时还要说清楚自身的责任和风险，避免自己和用户都踩坑。</p><ul><li><p>如果想当个甩手掌柜，只想安心写代码，用<a href="https://zh.wikipedia.org/zh-cn/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89" target="_blank" rel="noopener noreferrer">MIT</a>许可证就够了。</p></li><li><p>如果嫌麻烦但又想保有专利，那么<a href="https://zh.wikipedia.org/wiki/Apache%E8%AE%B8%E5%8F%AF%E8%AF%81" target="_blank" rel="noopener noreferrer">Apache</a>许可证就是比较好的选择。</p></li><li><p>但如果想投入更多精力运营好自己的开源项目，那还是<a href="https://en.wikipedia.org/wiki/GNU_General_Public_License" target="_blank" rel="noopener noreferrer">GPL</a>系列许可证比较稳妥。</p></li></ul><p>至于更专业的开源项目运作，可以委托或聘请专业的律师来跟进。</p>',30),i=[a];function p(c,m){return t(),o("div",null,i)}const h=e(n,[["render",p],["__file","concept.html.vue"]]),s=JSON.parse('{"path":"/opensource/common/concept.html","title":"一些基本概念","lang":"zh-CN","frontmatter":{"title":"一些基本概念","icon":"lightbulb","category":["开源","开源常识"],"tag":["开源","开源常识"],"date":"2024-02-17T00:00:00.000Z","isOriginal":true,"star":true,"description":"在知道了Copyright、Copyleft、Permissive与CC（Creative Commons）这些较为宏观一些的概念的含义之后，接下来就需要了解一些在开源中常见的基本概念都代表什么意思了。 首先，要清楚在开源许可证中高频出现的引用、修改、贡献和衍生品这几个名词术语的意思。 所谓引用指的是不直接使用源代码中的文件，而是将它作为一个第三方的依...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/opensource/common/concept.html"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"一些基本概念"}],["meta",{"property":"og:description","content":"在知道了Copyright、Copyleft、Permissive与CC（Creative Commons）这些较为宏观一些的概念的含义之后，接下来就需要了解一些在开源中常见的基本概念都代表什么意思了。 首先，要清楚在开源许可证中高频出现的引用、修改、贡献和衍生品这几个名词术语的意思。 所谓引用指的是不直接使用源代码中的文件，而是将它作为一个第三方的依..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/opensource/common/common-04.png =500x350"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"开源"}],["meta",{"property":"article:tag","content":"开源常识"}],["meta",{"property":"article:published_time","content":"2024-02-17T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"一些基本概念\\",\\"image\\":[\\"https://tianmazuo.com/opensource/common/common-04.png =500x350\\",\\"https://tianmazuo.com/opensource/common/common-05.png =500x350\\",\\"https://tianmazuo.com/opensource/common/common-06.png =500x350\\",\\"https://tianmazuo.com/opensource/common/common-07.png =500x300\\",\\"https://tianmazuo.com/opensource/common/common-08.png =500x350\\",\\"https://tianmazuo.com/opensource/common/common-09.png =500x350\\",\\"https://tianmazuo.com/opensource/common/common-10.png =500x350\\",\\"https://tianmazuo.com/opensource/common/common-11.png =500x350\\",\\"https://tianmazuo.com/opensource/common/common-12.png =500x350\\",\\"https://tianmazuo.com/opensource/common/common-13.png =500x350\\",\\"https://tianmazuo.com/opensource/common/common-14.png =500x350\\"],\\"datePublished\\":\\"2024-02-17T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":5.1,"words":1529},"filePathRelative":"opensource/common/concept.md","localizedDate":"2024年2月17日","excerpt":"<p>在知道了<a href=\\"https://en.wikipedia.org/wiki/Copyright\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Copyright</a>、<a href=\\"https://en.wikipedia.org/wiki/Copyleft\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Copyleft</a>、<a href=\\"https://zh.wikipedia.org/wiki/%E5%AF%AC%E9%AC%86%E8%87%AA%E7%94%B1%E8%BB%9F%E9%AB%94%E6%8E%88%E6%AC%8A%E6%A2%9D%E6%AC%BE\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Permissive</a>与<a href=\\"https://en.wikipedia.org/wiki/Creative_Commons\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">CC（Creative Commons）</a>这些较为宏观一些的概念的含义之后，接下来就需要了解一些在开源中常见的基本概念都代表什么意思了。</p>","autoDesc":true}');export{h as comp,s as data};
