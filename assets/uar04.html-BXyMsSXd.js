import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,d as e}from"./app-B5m7CcSj.js";const n={},l=e(`<h2 id="实现思路" tabindex="-1"><a class="header-anchor" href="#实现思路"><span>实现思路</span></a></h2><ul><li><p>实现<code>每日人均启动APP数</code>统计的步骤。</p><ul><li><p>首先，基于<code>DWS层</code>的<code>dws_app_open_history</code>表的<code>num</code>字段求<code>pv</code>（也就是<code>当日总人数</code>）和<code>uv</code>（也就是<code>当日所有用户启动APP的总数</code>）。</p></li><li><p>然后，将<code>pv</code>、<code>uv</code>以及它们相除的结果保存到<code>APP层</code>的<code>app_user_open_average</code>表中。</p></li></ul></li><li><p>实现<code>每日APP启动数分布</code>统计的步骤。</p><ul><li><p>首先，同样基于<code>DWS层</code>的<code>dws_app_open_history</code>表的<code>num</code>字段，分别统计<code>num=1</code>、<code>num=2</code>和<code>num&gt;=3</code>的记录条数。</p></li><li><p>然后，将计算结果保存到<code>APP层</code>的<code>app_user_open_distrib</code>表中。</p></li></ul></li></ul><br><h2 id="app层开发" tabindex="-1"><a class="header-anchor" href="#app层开发"><span>APP层开发</span></a></h2><p>根据实现思路，需要在<code>APP层</code>初始化<code>app_user_open_average</code>和<code>app_user_open_distrib</code>表。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; cd /home/work/warehouse_user_action</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; vi app_shopmall_requirement04_init.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 需求四：每日应用启动相关指标</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># app层数据库和表初始化，只需要执行一次</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hive</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">create database if not exists app_shopmall;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">create external table if not exists app_shopmall.app_user_open_average (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    pv    int,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    uv    int</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">) partitioned by(dt string)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  row format delimited  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  fields terminated by &#39;\\t&#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  location &#39;hdfs://server01:9000/data/app/user_open_average&#39;;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">create external table if not exists app_shopmall.app_user_open_distrib (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    od_1  int,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    od_2  int,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    od_3  int</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">) partitioned by(dt string)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  row format delimited  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  fields terminated by &#39;\\t&#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  location &#39;hdfs://server01:9000/data/app/user_open_distrib&#39;;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再来给它添加分区。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; cd /home/work/warehouse_user_action</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; vi app_shopmall_requirement04_add_partition.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 需求四：每日应用启动相关指标</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 每天凌晨执行一次</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;d</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">$1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;d&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dt</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">date</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +%Y%m%d </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">--date=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1 days ago&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dt</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">$1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hive</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">insert overwrite table app_shopmall.app_user_open_average partition(dt=&#39;</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dt</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;) select</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">sum(num) as pv,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">count(*) as uv</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">from dws_shopmall.dws_app_open_history</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">where dt = &#39;</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dt</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">insert overwrite table app_shopmall.app_user_open_distrib partition(dt=&#39;</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dt</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;) select</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">sum(case when num = 1 then 1 else 0 end) od_1,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">sum(case when num = 2 then 1 else 0 end) od_2,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">sum(case when num &gt;= 3 then 1 else 0 end) od_3</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">from dws_shopmall.dws_app_open_history</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">where dt = &#39;</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dt</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以通过定时任务来执行它。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; crontab -e</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 每天凌晨0点1分执行</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/work/warehouse_user_action/app_shopmall_requirement04_add_partition.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),t=[l];function p(d,h){return a(),i("div",null,t)}const c=s(n,[["render",p],["__file","uar04.html.vue"]]),o=JSON.parse('{"path":"/application/case/warehouse/uar04.html","title":"需求四：每日应用启动相关指标","lang":"zh-CN","frontmatter":{"title":"需求四：每日应用启动相关指标","icon":"user-tag","category":["案例","数据仓库"],"tag":["案例","数据仓库","用户行为","DWS层","APP层"],"date":"2024-05-22T00:00:00.000Z","isOriginal":true,"star":true,"description":"实现思路 实现每日人均启动APP数统计的步骤。 首先，基于DWS层的dws_app_open_history表的num字段求pv（也就是当日总人数）和uv（也就是当日所有用户启动APP的总数）。 然后，将pv、uv以及它们相除的结果保存到APP层的app_user_open_average表中。 实现每日APP启动数分布统计的步骤。 首先，同样基于DW...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/application/case/warehouse/uar04.html"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"需求四：每日应用启动相关指标"}],["meta",{"property":"og:description","content":"实现思路 实现每日人均启动APP数统计的步骤。 首先，基于DWS层的dws_app_open_history表的num字段求pv（也就是当日总人数）和uv（也就是当日所有用户启动APP的总数）。 然后，将pv、uv以及它们相除的结果保存到APP层的app_user_open_average表中。 实现每日APP启动数分布统计的步骤。 首先，同样基于DW..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"案例"}],["meta",{"property":"article:tag","content":"数据仓库"}],["meta",{"property":"article:tag","content":"用户行为"}],["meta",{"property":"article:tag","content":"DWS层"}],["meta",{"property":"article:tag","content":"APP层"}],["meta",{"property":"article:published_time","content":"2024-05-22T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"需求四：每日应用启动相关指标\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-22T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[{"level":2,"title":"实现思路","slug":"实现思路","link":"#实现思路","children":[]},{"level":2,"title":"APP层开发","slug":"app层开发","link":"#app层开发","children":[]}],"git":{},"readingTime":{"minutes":1.54,"words":461},"filePathRelative":"application/case/warehouse/uar04.md","localizedDate":"2024年5月22日","excerpt":"<h2>实现思路</h2>\\n<ul>\\n<li>\\n<p>实现<code>每日人均启动APP数</code>统计的步骤。</p>\\n<ul>\\n<li>\\n<p>首先，基于<code>DWS层</code>的<code>dws_app_open_history</code>表的<code>num</code>字段求<code>pv</code>（也就是<code>当日总人数</code>）和<code>uv</code>（也就是<code>当日所有用户启动APP的总数</code>）。</p>\\n</li>\\n<li>\\n<p>然后，将<code>pv</code>、<code>uv</code>以及它们相除的结果保存到<code>APP层</code>的<code>app_user_open_average</code>表中。</p>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>实现<code>每日APP启动数分布</code>统计的步骤。</p>\\n<ul>\\n<li>\\n<p>首先，同样基于<code>DWS层</code>的<code>dws_app_open_history</code>表的<code>num</code>字段，分别统计<code>num=1</code>、<code>num=2</code>和<code>num&gt;=3</code>的记录条数。</p>\\n</li>\\n<li>\\n<p>然后，将计算结果保存到<code>APP层</code>的<code>app_user_open_distrib</code>表中。</p>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{c as comp,o as data};
