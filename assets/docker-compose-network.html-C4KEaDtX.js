import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,d as e}from"./app-CiwSPZKD.js";const n={},l=e(`<div class="hint-container info"><p class="hint-container-title">准备环境</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">version:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;3.8&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">services:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  box1:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    image:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> busybox</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    command</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  /bin/sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;while true; do sleep 3600; done&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  box2:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    image:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> busybox</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    command</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  /bin/sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;while true; do sleep 3600; done&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>执行<a href="https://github.com/docker/compose" target="_blank" rel="noopener noreferrer">Docker Compose</a>命令。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; docker-compose up -d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当未指定网络时，<a href="https://github.com/docker/compose" target="_blank" rel="noopener noreferrer">Docker Compose</a>会默认创建一个以<code>docker-compose.yml</code>所在文件夹名称为前缀的网路名：<code>[文件夹名称]_default</code>，例如<code>root_default</code>。</p><p>列出已创建的容器。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; docker-compose ps</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NAME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           IMAGE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     COMMAND</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                  SERVICE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    CREATED</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           STATUS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">             PORTS</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root-box1-1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    busybox</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   &quot;/bin/sh -c &#39;while t…&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   box1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       7</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> minutes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ago</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     Up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> minutes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root-box2-1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    busybox</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   &quot;/bin/sh -c &#39;while t…&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   box2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       7</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> minutes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ago</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     Up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> minutes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进入其中任何一个容器。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; docker exec -it root-box1-1 sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>下面的地址都是可以<code>ping</code>通的。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ping</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root-box2-1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ping</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> box1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ping</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> box2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在以上任意运行的容器中执行下面的命令。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">more</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/resolv.conf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">search</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> localdomain</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nameserver</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 127.0.0.11</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">options</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ndots:0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这就是<a href="https://www.docker.com/" target="_blank" rel="noopener noreferrer">Docker</a>内置的<code>DNS</code>服务器地址。</p><p>在容器中，以及退出容器后在宿主机上仍可<code>ping</code>通它。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ping</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 127.0.0.11</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://tianmazuo.com/technology/cicd/docker/docker-21.png" alt="docker内置的DNS服务器结构" tabindex="0" loading="lazy"><figcaption>docker内置的DNS服务器结构</figcaption></figure><p>可以在<code>docker-compose.yml</code>中自定义网络，并指定容器使用哪一个网络。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">version:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;3.8&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">services:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  box1:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    image:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> busybox</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    command</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  /bin/sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;while true; do sleep 3600; done&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    networks:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mynet1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  box2:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    image:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> busybox</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    command</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  /bin/sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;while true; do sleep 3600; done&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    networks:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mynet1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mynet2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">networks:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  mynet1:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ipam:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      driver:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> default</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  mynet2:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了默认的<code>default</code>和<code>driver</code>属性，还有<a href="https://docs.docker.com/compose/compose-file/06-networks/#driver" target="_blank" rel="noopener noreferrer">这些取值</a>。</p>`,19),t=[l];function h(k,p){return a(),i("div",null,t)}const o=s(n,[["render",h],["__file","docker-compose-network.html.vue"]]),c=JSON.parse('{"path":"/technology/cicd/docker/docker-compose-network.html","title":"docker compose网络","lang":"zh-CN","frontmatter":{"title":"docker compose网络","icon":"inbox","category":["CI&CD","Docker"],"tag":["CI&CD","Docker","Docker Compose"],"date":"2022-10-24T00:00:00.000Z","isOriginal":true,"star":true,"description":"准备环境 执行Docker Compose命令。 当未指定网络时，Docker Compose会默认创建一个以docker-compose.yml所在文件夹名称为前缀的网路名：[文件夹名称]_default，例如root_default。 列出已创建的容器。 进入其中任何一个容器。 下面的地址都是可以ping通的。 在以上任意运行的容器中执行下面的命令...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/cicd/docker/docker-compose-network.html"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"docker compose网络"}],["meta",{"property":"og:description","content":"准备环境 执行Docker Compose命令。 当未指定网络时，Docker Compose会默认创建一个以docker-compose.yml所在文件夹名称为前缀的网路名：[文件夹名称]_default，例如root_default。 列出已创建的容器。 进入其中任何一个容器。 下面的地址都是可以ping通的。 在以上任意运行的容器中执行下面的命令..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/technology/cicd/docker/docker-21.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"CI&CD"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:tag","content":"Docker Compose"}],["meta",{"property":"article:published_time","content":"2022-10-24T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"docker compose网络\\",\\"image\\":[\\"https://tianmazuo.com/technology/cicd/docker/docker-21.png\\"],\\"datePublished\\":\\"2022-10-24T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":1.24,"words":371},"filePathRelative":"technology/cicd/docker/docker-compose-network.md","localizedDate":"2022年10月24日","excerpt":"<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">准备环境</p>\\n<div class=\\"language-shell line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">version:</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> \\"3.8\\"</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">services:</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  box1:</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">    image:</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> busybox</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">    command</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">:</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">  /bin/sh</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -c</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> \\"while true; do sleep 3600; done\\"</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  box2:</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">    image:</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> busybox</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">    command</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">:</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">  /bin/sh</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -c</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> \\"while true; do sleep 3600; done\\"</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></div>","autoDesc":true}');export{o as comp,c as data};
