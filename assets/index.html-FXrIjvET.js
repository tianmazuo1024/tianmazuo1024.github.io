import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as t,d as c}from"./app-B5m7CcSj.js";const a={},i=c('<h2 id="进制的进制" tabindex="-1"><a class="header-anchor" href="#进制的进制"><span>进制的进制</span></a></h2><p>生活中有许多种进制在共同起作用，例如，数学上的<code>十进制</code>、计算机中的<code>二进制</code>、<code>八进制</code>和<code>十六进制</code>、计时的<code>60进制</code>、<code>24进制</code>和<code>7进制</code>。</p><p>怎么才能快速地知道<code>1111</code>所对应的具体的进制数值呢？例如，<code>1111</code>对应的<code>二进制</code>、<code>八进制</code>和<code>十六进制</code>是多少？它对应的<code>60进制</code>、<code>24进制</code>和<code>7进制</code>又分别是多少？</p><p>因此，为了解决这个问题，科学家们在<code>进制</code>的基础上做了更进一步的抽象。</p><ul><li><p>将每个数字所在的<code>位</code>单独提取出来。</p></li><li><p>将这些<code>位</code>并从小到大依次排列。</p></li><li><p>越靠右位数越小，越靠左位数越高。</p></li></ul><figure><img src="https://tianmazuo.com/technology/ai/math-01.png" alt="任何进制都可以分解为这样的计数法" tabindex="0" loading="lazy"><figcaption>任何进制都可以分解为这样的计数法</figcaption></figure><p>按照这种方式，<code>1111</code>对应的<code>二进制</code>、<code>八进制</code>和<code>十六进制</code>和<code>六十进制</code>就可以这样来表示。</p><ul><li><p><code>1111</code>分解为二进制的结果。</p><figure><img src="https://tianmazuo.com/technology/ai/math-02.png" alt="1111分解为二进制的结果" tabindex="0" loading="lazy"><figcaption>1111分解为二进制的结果</figcaption></figure></li><li><p><code>1111</code>分解为八进制的结果。</p><figure><img src="https://tianmazuo.com/technology/ai/math-03.png" alt="1111分解为八进制的结果" tabindex="0" loading="lazy"><figcaption>1111分解为八进制的结果</figcaption></figure></li><li><p><code>1111</code>分解为十六进制的结果。</p><figure><img src="https://tianmazuo.com/technology/ai/math-04.png" alt="1111分解为十六进制的结果" tabindex="0" loading="lazy"><figcaption>1111分解为十六进制的结果</figcaption></figure></li><li><p><code>1111</code>分解为六十进制的结果。</p><figure><img src="https://tianmazuo.com/technology/ai/math-05.png" alt="1111分解为六十进制的结果" tabindex="0" loading="lazy"><figcaption>1111分解为六十进制的结果</figcaption></figure></li></ul><p>因此，<code>进制计数法</code>也被称为<code>按位计数法</code>。</p><br><h2 id="_0的作用" tabindex="-1"><a class="header-anchor" href="#_0的作用"><span>0的作用</span></a></h2><p><code>0</code>在数学上的意义就是<code>没有</code>，但这种<code>没有</code>需要用精确且没有歧义的符号来代表。</p><p>例如，如果把<code>101</code>写成<code>1 1</code>，或者将10<sup>0</sup>写成10，不仅很别扭，而且有歧义，搞不好<code>1 1</code>还一不小心被混淆成了<code>11</code>。</p><p>所以，<code>0</code>的作用不仅在于替代<code>没有</code>，更重要的是它可以<code>占位</code>：表示某个数位上没有数字。</p><p>例如，<code>101</code>就表示它只有<code>百位数</code>、<code>个位数</code>而没有<code>十位数</code>。</p><p>这是一种占位的例子。</p><p>如果按照<code>没有</code>来算，那10<sup>0</sup>该表示什么数呢？</p><figure><img src="https://tianmazuo.com/technology/ai/math-06.png" alt="幂数" tabindex="0" loading="lazy"><figcaption>幂数</figcaption></figure><p>从直觉上来说，10<sup>0</sup>应该等于<code>0</code>，但如果观察上面幂指数的规律，就可以发现<code>指数</code>每减1，数值就变成了之前的十分之一。</p><p>所以，10<sup>0</sup>的值也就可以因此确定了，并不是<code>没有</code>。</p><figure><img src="https://tianmazuo.com/technology/ai/math-07.png" alt="0在指数中的意义" tabindex="0" loading="lazy"><figcaption>0在指数中的意义</figcaption></figure><p>按照这个规律再继续延伸一下，就可以知道当指数为负数时的结果是什么了。</p><figure><img src="https://tianmazuo.com/technology/ai/math-08.png" alt="0在指数中的意义" tabindex="0" loading="lazy"><figcaption>0在指数中的意义</figcaption></figure><p>综合<code>按位计数法</code>与<code>0</code>的意义，就可以得到<code>指数法则</code>。</p><figure><img src="https://tianmazuo.com/technology/ai/math-09.png" alt="指数法则" tabindex="0" loading="lazy"><figcaption>指数法则</figcaption></figure><figure><img src="https://tianmazuo.com/technology/ai/math-10.png" alt="指数法则" tabindex="0" loading="lazy"><figcaption>指数法则</figcaption></figure><br><h2 id="先归纳-再分治" tabindex="-1"><a class="header-anchor" href="#先归纳-再分治"><span>先归纳，再分治</span></a></h2><p>古人用绳结计数，但要记住的事情多了以后，就有点难于表示了。例如，下面两个<code>绳结</code>就不能一眼看出它们的大小。</p><figure><img src="https://tianmazuo.com/technology/ai/math-11.png" alt="绳结计数" tabindex="0" loading="lazy"><figcaption>绳结计数</figcaption></figure><p>所以，聪明的先辈们就发明了<code>按位计数法</code>，将大量的数字归纳为一个个小<code>单元</code>，这个小单元就叫<code>位</code>。</p><figure><img src="https://tianmazuo.com/technology/ai/math-12.png" alt="按位进行绳结计数" tabindex="0" loading="lazy"><figcaption>按位进行绳结计数</figcaption></figure><p>以此类推，就有了<code>百位</code>、<code>千位</code>和<code>万位</code>。</p><p>但即使这样仍然不能解决数字越来越大的问题。</p><p>例如，能否一眼看出<code>1111111111111111111</code>和<code>111111111111111111</code>这两个数哪个大？</p><p>所以，科学家们又想到了<code>指数法则</code>。</p><ul><li><p><code>1111111111111111111</code> = <code>1.11</code> × 10<sup>8</sup>。</p></li><li><p><code>111111111111111111</code> = <code>1.11</code> × 10<sup>7</sup>。</p></li></ul><p>好了，这下一目了然了。</p><p>按照这种思路，再大的数都可以通不断<code>归纳</code>再<code>分治</code>的方式变得易于管理和识别。</p><p>这正是数学的意义。</p><br><hr><br><div class="hint-container important"><p class="hint-container-title">感谢支持</p><p>更多内容，请移步<a href="https://www.zsxq.com/" target="_blank" rel="noopener noreferrer">《我的知识星球》</a>。</p></div>',44),d=[i];function p(n,l){return t(),e("div",null,d)}const h=o(a,[["render",p],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/technology/ai/","title":"程序员的数学","lang":"zh-CN","frontmatter":{"title":"程序员的数学","icon":"infinity","category":["人工智能","数学"],"tag":["人工智能","数学"],"date":"2024-10-08T00:00:00.000Z","isOriginal":true,"star":true,"description":"进制的进制 生活中有许多种进制在共同起作用，例如，数学上的十进制、计算机中的二进制、八进制和十六进制、计时的60进制、24进制和7进制。 怎么才能快速地知道1111所对应的具体的进制数值呢？例如，1111对应的二进制、八进制和十六进制是多少？它对应的60进制、24进制和7进制又分别是多少？ 因此，为了解决这个问题，科学家们在进制的基础上做了更进一步的抽...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/ai/"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"程序员的数学"}],["meta",{"property":"og:description","content":"进制的进制 生活中有许多种进制在共同起作用，例如，数学上的十进制、计算机中的二进制、八进制和十六进制、计时的60进制、24进制和7进制。 怎么才能快速地知道1111所对应的具体的进制数值呢？例如，1111对应的二进制、八进制和十六进制是多少？它对应的60进制、24进制和7进制又分别是多少？ 因此，为了解决这个问题，科学家们在进制的基础上做了更进一步的抽..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/technology/ai/math-01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"人工智能"}],["meta",{"property":"article:tag","content":"数学"}],["meta",{"property":"article:published_time","content":"2024-10-08T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"程序员的数学\\",\\"image\\":[\\"https://tianmazuo.com/technology/ai/math-01.png\\",\\"https://tianmazuo.com/technology/ai/math-02.png\\",\\"https://tianmazuo.com/technology/ai/math-03.png\\",\\"https://tianmazuo.com/technology/ai/math-04.png\\",\\"https://tianmazuo.com/technology/ai/math-05.png\\",\\"https://tianmazuo.com/technology/ai/math-06.png\\",\\"https://tianmazuo.com/technology/ai/math-07.png\\",\\"https://tianmazuo.com/technology/ai/math-08.png\\",\\"https://tianmazuo.com/technology/ai/math-09.png\\",\\"https://tianmazuo.com/technology/ai/math-10.png\\",\\"https://tianmazuo.com/technology/ai/math-11.png\\",\\"https://tianmazuo.com/technology/ai/math-12.png\\"],\\"datePublished\\":\\"2024-10-08T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[{"level":2,"title":"进制的进制","slug":"进制的进制","link":"#进制的进制","children":[]},{"level":2,"title":"0的作用","slug":"_0的作用","link":"#_0的作用","children":[]},{"level":2,"title":"先归纳，再分治","slug":"先归纳-再分治","link":"#先归纳-再分治","children":[]}],"git":{},"readingTime":{"minutes":3.29,"words":988},"filePathRelative":"technology/ai/README.md","localizedDate":"2024年10月8日","excerpt":"<h2>进制的进制</h2>\\n<p>生活中有许多种进制在共同起作用，例如，数学上的<code>十进制</code>、计算机中的<code>二进制</code>、<code>八进制</code>和<code>十六进制</code>、计时的<code>60进制</code>、<code>24进制</code>和<code>7进制</code>。</p>\\n<p>怎么才能快速地知道<code>1111</code>所对应的具体的进制数值呢？例如，<code>1111</code>对应的<code>二进制</code>、<code>八进制</code>和<code>十六进制</code>是多少？它对应的<code>60进制</code>、<code>24进制</code>和<code>7进制</code>又分别是多少？</p>","autoDesc":true}');export{h as comp,m as data};
