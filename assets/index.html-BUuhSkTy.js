import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as t,d as n}from"./app-B5m7CcSj.js";const o={},l=n('<h2 id="三大核心组件" tabindex="-1"><a class="header-anchor" href="#三大核心组件"><span>三大核心组件</span></a></h2><p>官方对<a href="https://flume.apache.org/" target="_blank" rel="noopener noreferrer">Flume</a>的定义有这么几个关键点。</p><ul><li><p>一种高可用、高可靠的分布式系统。</p></li><li><p>实现海量日志的高效采集、聚合和传输。</p></li><li><p>具有基于流的数据架构。</p></li><li><p>具有负载均衡机制、故障转移和恢复机制。</p></li><li><p>具有简单可扩展的数据模型。</p></li></ul><p>它一行代码都不需要写，就能实现PB级的日志采集、聚合和传输，简单来说就是简单、好用、靠谱。</p><figure><img src="https://tianmazuo.com/technology/middleware/flume/flume-01.png" alt="官网给出的Flume总体架构" tabindex="0" loading="lazy"><figcaption>官网给出的Flume总体架构</figcaption></figure><h3 id="source" tabindex="-1"><a class="header-anchor" href="#source"><span>Source</span></a></h3><p>定义数据源，从外界采集各种类型的数据，例如文件、目录、端口、MQ等，并将这些数据传递给<code>Channel</code>。</p><p><a href="https://flume.apache.org/" target="_blank" rel="noopener noreferrer">Flume</a>已经定义了下面几种常用的数据源。</p><ul><li><p><code>Exec Source</code>：实现对文件的实时监控，文件的任何变化都能作为数据源的输入。</p></li><li><p><code>NetCat TCP/UDP Source</code>：采集指定端口的数据。</p></li><li><p><code>Spooling Directory Source</code>：采集指定文件夹中新增的文件。</p></li><li><p><code>Kafka Source</code>：采集<a href="https://kafka.apache.org" target="_blank" rel="noopener noreferrer">Kafka</a>消息队列中的数据。</p></li></ul><h3 id="channel" tabindex="-1"><a class="header-anchor" href="#channel"><span>Channel</span></a></h3><p>输送数据的管道，接收从<code>Source</code>发出的数据，并将数据输送到<code>Sink</code>。</p><p>和<code>Source</code>一样，<code>Channel</code>也有多种不同的类型，例如内存、文件、JDBC等，常用的<code>Channel</code>有下面几种。</p><ul><li><p><code>Memory Channel</code>：使用内存作为输送数据的管道。</p></li><li><p><code>File Channel</code>：使用文件作为输送数据的管道。</p></li><li><p><code>Spillable Memory Channel</code>：同时使用内存和文件作为输送数据的管道。数据会先到内存中，如果内存数据达到预设的阈值再<code>Flush</code>到文件。</p></li></ul><p>直到数据被成功保存到<code>Sink</code>所指定的目的地后，<code>Channel</code>中的数据才会被删除。而且，当<code>Sink</code>写入失败后，<a href="https://flume.apache.org/" target="_blank" rel="noopener noreferrer">Flume</a>会通过事务的方式保证自动重写，所以它不会有数据丢失问题。</p><h3 id="sink" tabindex="-1"><a class="header-anchor" href="#sink"><span>Sink</span></a></h3><p>定义数据发送的目的地，它从<code>Channel</code>接收输送过来的数据，并存储到指定的目的地，例如控制台、<a href="https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html" target="_blank" rel="noopener noreferrer">HDFS</a>、<a href="https://kafka.apache.org" target="_blank" rel="noopener noreferrer">Kafka</a>等。</p><p><a href="https://flume.apache.org/" target="_blank" rel="noopener noreferrer">Flume</a>也定义了下面几种常用的<code>Sink</code>。</p><ul><li><p><code>Logger Sink</code>：将数据存储为日志。</p></li><li><p><code>HDFS Sink</code>：将数据存储到<a href="https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html" target="_blank" rel="noopener noreferrer">HDFS</a>中。</p></li><li><p><code>Kafka Sink</code>：将数据发送到<a href="https://kafka.apache.org" target="_blank" rel="noopener noreferrer">Kafka</a>消息队列中。</p></li></ul><br><h2 id="典型应用场景" tabindex="-1"><a class="header-anchor" href="#典型应用场景"><span>典型应用场景</span></a></h2><h3 id="多agent流" tabindex="-1"><a class="header-anchor" href="#多agent流"><span>多Agent流</span></a></h3><p>为了使数据能够在多个服务间流动，可以将多个<code>Agent</code>首尾相连，形成一条数据链。</p><figure><img src="https://tianmazuo.com/technology/middleware/flume/flume-02.png" alt="多Agent流" tabindex="0" loading="lazy"><figcaption>多Agent流</figcaption></figure><h3 id="多流汇聚" tabindex="-1"><a class="header-anchor" href="#多流汇聚"><span>多流汇聚</span></a></h3><p>可以将大量生成日志的Web服务输出，汇聚到一个统一的连接数据存储系统（例如<a href="https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html" target="_blank" rel="noopener noreferrer">HDFS</a>）的输入上。</p><figure><img src="https://tianmazuo.com/technology/middleware/flume/flume-03.png" alt="多流合并" tabindex="0" loading="lazy"><figcaption>多流合并</figcaption></figure><h3 id="多路复用" tabindex="-1"><a class="header-anchor" href="#多路复用"><span>多路复用</span></a></h3><p>通过定义流多路复用器，可以有选择性地将事件路由到一个或者多个<code>Channel</code>。</p><figure><img src="https://tianmazuo.com/technology/middleware/flume/flume-04.png" alt="多路复用" tabindex="0" loading="lazy"><figcaption>多路复用</figcaption></figure>',29),r=[l];function i(p,c){return t(),a("div",null,r)}const s=e(o,[["render",i],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/technology/middleware/flume/","title":"什么是Flume？","lang":"zh-CN","frontmatter":{"title":"什么是Flume？","icon":"stethoscope","category":["中间件","Flume"],"tag":["中间件","Flume"],"date":"2023-03-02T00:00:00.000Z","isOriginal":true,"star":true,"description":"三大核心组件 官方对Flume的定义有这么几个关键点。 一种高可用、高可靠的分布式系统。 实现海量日志的高效采集、聚合和传输。 具有基于流的数据架构。 具有负载均衡机制、故障转移和恢复机制。 具有简单可扩展的数据模型。 它一行代码都不需要写，就能实现PB级的日志采集、聚合和传输，简单来说就是简单、好用、靠谱。 官网给出的Flume总体架构官网给出的Fl...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/middleware/flume/"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"什么是Flume？"}],["meta",{"property":"og:description","content":"三大核心组件 官方对Flume的定义有这么几个关键点。 一种高可用、高可靠的分布式系统。 实现海量日志的高效采集、聚合和传输。 具有基于流的数据架构。 具有负载均衡机制、故障转移和恢复机制。 具有简单可扩展的数据模型。 它一行代码都不需要写，就能实现PB级的日志采集、聚合和传输，简单来说就是简单、好用、靠谱。 官网给出的Flume总体架构官网给出的Fl..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/technology/middleware/flume/flume-01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"中间件"}],["meta",{"property":"article:tag","content":"Flume"}],["meta",{"property":"article:published_time","content":"2023-03-02T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"什么是Flume？\\",\\"image\\":[\\"https://tianmazuo.com/technology/middleware/flume/flume-01.png\\",\\"https://tianmazuo.com/technology/middleware/flume/flume-02.png\\",\\"https://tianmazuo.com/technology/middleware/flume/flume-03.png\\",\\"https://tianmazuo.com/technology/middleware/flume/flume-04.png\\"],\\"datePublished\\":\\"2023-03-02T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[{"level":2,"title":"三大核心组件","slug":"三大核心组件","link":"#三大核心组件","children":[{"level":3,"title":"Source","slug":"source","link":"#source","children":[]},{"level":3,"title":"Channel","slug":"channel","link":"#channel","children":[]},{"level":3,"title":"Sink","slug":"sink","link":"#sink","children":[]}]},{"level":2,"title":"典型应用场景","slug":"典型应用场景","link":"#典型应用场景","children":[{"level":3,"title":"多Agent流","slug":"多agent流","link":"#多agent流","children":[]},{"level":3,"title":"多流汇聚","slug":"多流汇聚","link":"#多流汇聚","children":[]},{"level":3,"title":"多路复用","slug":"多路复用","link":"#多路复用","children":[]}]}],"git":{},"readingTime":{"minutes":2.48,"words":743},"filePathRelative":"technology/middleware/flume/README.md","localizedDate":"2023年3月2日","excerpt":"<h2>三大核心组件</h2>\\n<p>官方对<a href=\\"https://flume.apache.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Flume</a>的定义有这么几个关键点。</p>\\n<ul>\\n<li>\\n<p>一种高可用、高可靠的分布式系统。</p>\\n</li>\\n<li>\\n<p>实现海量日志的高效采集、聚合和传输。</p>\\n</li>\\n<li>\\n<p>具有基于流的数据架构。</p>\\n</li>\\n<li>\\n<p>具有负载均衡机制、故障转移和恢复机制。</p>\\n</li>\\n<li>\\n<p>具有简单可扩展的数据模型。</p>\\n</li>\\n</ul>","autoDesc":true}');export{s as comp,m as data};
