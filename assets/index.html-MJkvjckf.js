import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as c,d}from"./app-B5m7CcSj.js";const t={},n=d('<p>1970年，一位美国计算机科学家，得克萨斯州奧斯汀市洛克希德软件技术中心主任，<code>温斯顿·沃克·罗伊斯</code>（Winston Walker Royce）博士发表了一篇名为<code>《管理大型软件系统的开发》</code>的论文。</p><p>这篇论文在业界首次提出了软件开发过程中所能采取的几种不同的<code>项目管理方式</code>，其中就包括了我们目前所熟知的<code>瀑布模型</code>、<code>迭代模式</code>和<code>敏捷模式</code>。</p><p>在温斯顿博士所处的年代，面向过程的软件开发方式是业界主流，且那时的软件行业远没有现在先进，软件项目大多数也都属于航空航天、科研制造、军事系统、能源化工等类别，<code>工程化</code>的特色非常明显。</p><p>所以，软件开发的过程也就自然而然地参照、模仿了其他行业项目管理的方法，尤其是建筑行业中的项目管理经验。例如，建筑行业就把盖房子的过程分为<code>策划</code>、<code>勘查</code>、<code>设计</code>、<code>施工</code>、<code>验收</code>和<code>交付</code>等一系列阶段。</p><p>一个软件项目本质上和建筑项目没什么不同，都是一群人在那<code>搬砖</code>，也都是做计划、设计，然后实施、检测和交付，也有所谓的<code>生命周期（Life Cycle）</code>。</p><figure><img src="https://tianmazuo.com/technology/engineering/process/process-01.png" alt="软件项目的生命周期" tabindex="0" loading="lazy"><figcaption>软件项目的生命周期</figcaption></figure><p>上图中的<code>软件项目的生命周期</code>包括这几个阶段。</p><ul><li><p><code>问题定义阶段</code>，在项目的一开始就要明确地知道需要解决什么样的问题。所以需要做好<code>需求收集和分析</code>、<code>制定问题定义文档</code>、<code>确定项目目标和约束条件</code>、<code>编写可行性研究报告</code>、<code>制定项目计划</code>、<code>评估项目风险</code>、<code>与利益相关者沟通</code>等工作。问题定义阶段的工作对于项目的成功至关重要，宁可多花一点时间在这上面（从个人教训来说，这一点怎么强调都不为过）。这一阶段非常重要的输出文件就是<code>《可行性研究报告》</code>。</p></li><li><p><code>需求分析阶段</code>，在搞清楚了要解决什么问题、可行性以及可能面临的风险之后，接下来就要进一步细化那些比较宏观的需求了，比如，<code>开发一个电商系统</code>。所以，在需求分析阶段通常会做下面几件事情：<code>需求分析</code>、<code>制定需求规格说明书</code>、<code>评审和确认需求</code>等。<code>《需求规格说明书》</code>对于开发工程师来说，是除了原型文档之外最重要开发文档之一，基本上可以起到字典和手册的作用。</p></li><li><p><code>软件设计阶段</code>，有了明确的需求，接下来不是忙着开发，而是先要做一些技术预研和技术选型，也就是采用什么样的技术栈（例如用<code>J2EE</code>、<code>LAMP</code>还是<code>Python + Django/Flask</code>），选择什么样的软件架构（例如<code>MVC</code>或<code>整洁架构</code>）等，为后续的编码工作铺路。该阶段通常会进行以下工作：<code>系统架构设计</code>、<code>模块设计</code>、<code>数据及表结构设计</code>、<code>界面设计</code>、<code>性能设计</code>、<code>接口设计</code>以及<code>设计评审</code>，然后输出<code>《概要设计文档》</code>，它是软件化的<code>《需求规格说明书》</code>，是指导工程师们开发的规范性文件。</p></li><li><p><code>功能编码阶段</code>，这一阶段的工作就是写代码。当然，除了写代码以外，还需要做<code>微服务集成</code>、<code>单元测试</code>、<code>代码检查</code>、<code>版本管理</code>、和<code>性能调优</code>等工程化的辅助工作，因为编写高质量的代码对于确保软件系统的稳定性、可靠性和性能至关重要。良好的编码实践和团队协作可以提高代码的质量和效率，有助于项目按计划顺利进行。</p></li><li><p><code>系统测试阶段</code>，这个阶段会对整个软件系统进行全面的测试，验证系统是否符合需求规格说明文档的要求，发现和修复可能存在的缺陷和问题。测试工程师们通常会执行：<code>测试计划制定</code>、<code>测试用例设计</code>、<code>测试环境搭建</code>、<code>执行系统测试</code>、<code>管理软件缺陷</code>、<code>测试报告编写</code>、<code>协助用户验收</code>等工作。</p></li><li><p><code>部署维护阶段</code>，这是软件开发生命周期的最后一个阶段，开发完成之后将软件服务部署到生产环境并持续维护它的正常进行。在部署运维阶段会展开以下的工作：<code>部署计划制定</code>、<code>部署环境准备</code>、<code>软件安装部署</code>、<code>性能监控和优化</code>、<code>日常运维及异常排查</code>、<code>版本更新和升级</code>，这个阶段其实也是成本最高，最让工程师们头疼的一个阶段。</p></li></ul><p>瀑布模型作为一种软件开发生命周期模型，它就像<code>瀑布</code>那样，上一阶段的输出作为下一个阶段的输入，依次进行下去，直到最终的软件交付。</p><figure><img src="https://tianmazuo.com/technology/engineering/process/process-02.png" alt="瀑布模型各阶段的输入和输出" tabindex="0" loading="lazy"><figcaption>瀑布模型各阶段的输入和输出</figcaption></figure><p><code>瀑布模型</code>是一种传统的开发模型，但 <strong><mark>传统不代表落后</mark></strong> ，它适用于那些需求一旦确定就极少变化，且对项目目标和成本的控制都非常严格的大型软件项目，例如电子政务、智慧城市、能源、化工、银行、电力等。</p><p>因为在大型的软件研发团队中，人员情况往往较为复杂多变，<code>瀑布模型</code>虽然<code>呆板</code>不够灵活，但它可以制定一个分工明确、时间清晰的工作流程，使得进入团队的新人能够快速了解当前的工作状况，大大降低了协同工作时的复杂度和沟通成本。</p><p>而且<code>瀑布模型</code>中的<code>《需求规格说明书》</code>、<code>《概要设计文档》</code>、<code>单元测试</code>和<code>版本管理</code>等输出文档，即使是不用<code>瀑布模型</code>开发，也同样可以借用。</p><p>只不过在追求极致速度的互联网应用中，<code>瀑布模型</code>已经<code>OUT</code>了。</p>',14),p=[n];function i(r,a){return c(),o("div",null,p)}const g=e(t,[["render",i],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/technology/engineering/","title":"瀑布模型","lang":"zh-CN","frontmatter":{"title":"瀑布模型","icon":"list-check","category":["开发过程","瀑布模型"],"tag":["开发过程","瀑布模型"],"date":"2022-08-17T00:00:00.000Z","isOriginal":true,"star":true,"description":"1970年，一位美国计算机科学家，得克萨斯州奧斯汀市洛克希德软件技术中心主任，温斯顿·沃克·罗伊斯（Winston Walker Royce）博士发表了一篇名为《管理大型软件系统的开发》的论文。 这篇论文在业界首次提出了软件开发过程中所能采取的几种不同的项目管理方式，其中就包括了我们目前所熟知的瀑布模型、迭代模式和敏捷模式。 在温斯顿博士所处的年代，面...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/engineering/"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"瀑布模型"}],["meta",{"property":"og:description","content":"1970年，一位美国计算机科学家，得克萨斯州奧斯汀市洛克希德软件技术中心主任，温斯顿·沃克·罗伊斯（Winston Walker Royce）博士发表了一篇名为《管理大型软件系统的开发》的论文。 这篇论文在业界首次提出了软件开发过程中所能采取的几种不同的项目管理方式，其中就包括了我们目前所熟知的瀑布模型、迭代模式和敏捷模式。 在温斯顿博士所处的年代，面..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/technology/engineering/process/process-01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"开发过程"}],["meta",{"property":"article:tag","content":"瀑布模型"}],["meta",{"property":"article:published_time","content":"2022-08-17T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"瀑布模型\\",\\"image\\":[\\"https://tianmazuo.com/technology/engineering/process/process-01.png\\",\\"https://tianmazuo.com/technology/engineering/process/process-02.png\\"],\\"datePublished\\":\\"2022-08-17T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":5.39,"words":1616},"filePathRelative":"technology/engineering/README.md","localizedDate":"2022年8月17日","excerpt":"<p>1970年，一位美国计算机科学家，得克萨斯州奧斯汀市洛克希德软件技术中心主任，<code>温斯顿·沃克·罗伊斯</code>（Winston Walker Royce）博士发表了一篇名为<code>《管理大型软件系统的开发》</code>的论文。</p>\\n<p>这篇论文在业界首次提出了软件开发过程中所能采取的几种不同的<code>项目管理方式</code>，其中就包括了我们目前所熟知的<code>瀑布模型</code>、<code>迭代模式</code>和<code>敏捷模式</code>。</p>\\n<p>在温斯顿博士所处的年代，面向过程的软件开发方式是业界主流，且那时的软件行业远没有现在先进，软件项目大多数也都属于航空航天、科研制造、军事系统、能源化工等类别，<code>工程化</code>的特色非常明显。</p>","autoDesc":true}');export{g as comp,m as data};
