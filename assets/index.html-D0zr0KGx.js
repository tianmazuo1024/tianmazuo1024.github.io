import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as c,d}from"./app-B5m7CcSj.js";const t={},n=d('<p>到1980年代末，<code>面向对象的软件设计（Object-Oriented Design，OOD）</code>逐渐成为业界主流。</p><p>为了统一业界诸多且混乱的面向对象方法论，并且改变瀑布模型那种僵硬的开发模式，<code>James Rumbaugh</code>、<code>Grady Booch</code>和<code>Ivar Jacobson</code>这三位计算机大佬创建了<code>UML（Unified Modeling Language，统一建模语言）</code>和<code>RUP（Rational Unified Process，Rational统一过程）</code>这两大利器。</p><p><code>UML</code>本质上就是一种图形标记方法，通过一套完整的图形符号来描述软件设计中的各种语义和元素，统一工程师们的沟通语境。</p><p>而<code>RUP</code>则是一种建立在<code>UML</code>之上的，<code>面向对象设计</code>的，<code>用例驱动（Use Case Driven）</code>的，<code>重量级</code>的软件开发过程。</p><p><code>UML</code>和<code>用例驱动</code>这两个特点其实就是一个：<code>RUP</code>比较重视开发过程中生成的各种交付件，包括但不限于开发文档、模板、设计图、代码、接口文档、测试报告、用户手册等。</p><figure><img src="https://tianmazuo.com/technology/engineering/process/process-03.png" alt="RUP的整体流程与输出" tabindex="0" loading="lazy"><figcaption>RUP的整体流程与输出</figcaption></figure><p>所以如果对<code>UML</code>非常熟悉，且能够比较熟练地画出各种<code>UML</code>图形（例如，用例图，类图，时序图，流程图，状态图，部署图等）的话，那么可以说<code>RUP</code>已经掌握了<code>80%</code>以上，这一点都不夸张。剩下的无非就是按照它的流程要求输出一些报告、指南等交付件。</p><p>之所以说<code>RUP</code>是一种重量级的开发过程，是因为下面几个原因。</p><ul><li><p>在横向上，<code>RUP</code>遵循瀑布流程，有<code>业务建模</code>、<code>需求</code>、<code>分析设计</code>、<code>实现</code>、<code>测试</code>、<code>部署</code>、<code>配置和变更管理</code>、<code>项目管理</code>、和<code>环境</code>这九大核心流程。</p></li><li><p>在纵向上，<code>RUP</code>分为四个大的迭代阶段：<code>初始阶段</code>、<code>细化阶段</code>、<code>构造阶段</code>和<code>移交阶段</code>。在每个阶段中，都会把上面的九大核心流程执行一遍。当然，也可以根据情况适当调整流程。</p></li><li><p><code>RUP</code>定义了一系列的概念，包括<code>角色</code>、<code>活动</code>和<code>工件</code>等，将<code>个人</code>、<code>团队</code>、<code>业务</code>和<code>需求</code>通过这些概念有机地糅合在了一起。</p></li><li><p>相较之于代码，<code>RUP</code>更重视各种在流程进行过程中产出的交付件，尤其是各种需求用例和软件的架构设计文档，是<code>RUP</code>关心的重点。</p></li></ul><figure><img src="https://tianmazuo.com/technology/engineering/process/process-04.png" alt="RUP的迭代增量开发过程" tabindex="0" loading="lazy"><figcaption>RUP的迭代增量开发过程</figcaption></figure><p>所以，<code>RUP</code>基本上就是为大公司或者大型软件开发团队量身定制的一套<code>软件开发方法论</code>，或者<code>开发过程</code>。</p><p>因为没有哪个小公司或初创团队会把流程和交付搞得这么复杂，这么中规中矩。</p><p>和<code>瀑布模型</code>一样，<code>RUP</code>也有自己的适用场景，例如极为重视软件质量的银行、保险、证券一类的金融行业应用，以及需要持续不断进行高质量交付的外包公司，都比较适合采用<code>RUP</code>开发过程。</p><p>但和<code>瀑布模型</code>不同的是，<code>瀑布模型</code>整体上偏<code>静态</code>，也就是需求一旦确定，修改、变更不仅麻烦，而且成本很高。但<code>RUP</code>本身是不断迭代的，所以它的过程更偏<code>动态</code>一些，即使需求一时无法确定或者后续发生了变更，也还有重新审视、更正的机会。</p>',14),i=[n];function a(p,r){return c(),o("div",null,i)}const l=e(t,[["render",a],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/technology/engineering/process/","title":"RUP","lang":"zh-CN","frontmatter":{"title":"RUP","icon":"arrows-spin","category":["开发过程","RUP"],"tag":["开发过程","RUP"],"date":"2022-08-20T00:00:00.000Z","isOriginal":true,"star":true,"description":"到1980年代末，面向对象的软件设计（Object-Oriented Design，OOD）逐渐成为业界主流。 为了统一业界诸多且混乱的面向对象方法论，并且改变瀑布模型那种僵硬的开发模式，James Rumbaugh、Grady Booch和Ivar Jacobson这三位计算机大佬创建了UML（Unified Modeling Language，统一...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/technology/engineering/process/"}],["meta",{"property":"og:site_name","content":"添码座"}],["meta",{"property":"og:title","content":"RUP"}],["meta",{"property":"og:description","content":"到1980年代末，面向对象的软件设计（Object-Oriented Design，OOD）逐渐成为业界主流。 为了统一业界诸多且混乱的面向对象方法论，并且改变瀑布模型那种僵硬的开发模式，James Rumbaugh、Grady Booch和Ivar Jacobson这三位计算机大佬创建了UML（Unified Modeling Language，统一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tianmazuo.com/technology/engineering/process/process-03.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"添码座"}],["meta",{"property":"article:tag","content":"开发过程"}],["meta",{"property":"article:tag","content":"RUP"}],["meta",{"property":"article:published_time","content":"2022-08-20T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RUP\\",\\"image\\":[\\"https://tianmazuo.com/technology/engineering/process/process-03.png\\",\\"https://tianmazuo.com/technology/engineering/process/process-04.png\\"],\\"datePublished\\":\\"2022-08-20T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"添码座\\",\\"url\\":\\"https://www.tianmazuo.com/about/\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":2.97,"words":891},"filePathRelative":"technology/engineering/process/README.md","localizedDate":"2022年8月20日","excerpt":"<p>到1980年代末，<code>面向对象的软件设计（Object-Oriented Design，OOD）</code>逐渐成为业界主流。</p>\\n<p>为了统一业界诸多且混乱的面向对象方法论，并且改变瀑布模型那种僵硬的开发模式，<code>James Rumbaugh</code>、<code>Grady Booch</code>和<code>Ivar Jacobson</code>这三位计算机大佬创建了<code>UML（Unified Modeling Language，统一建模语言）</code>和<code>RUP（Rational Unified Process，Rational统一过程）</code>这两大利器。</p>","autoDesc":true}');export{l as comp,m as data};
